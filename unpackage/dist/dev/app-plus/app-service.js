(this["webpackJsonp"] = this["webpackJsonp"] || []).push([["app-service"],[
/* 0 */
/*!******************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/main.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("__webpack_require__(/*! uni-pages */ 1);var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 27));\nvar _App = _interopRequireDefault(__webpack_require__(/*! ./App */ 37));\nvar _store = _interopRequireDefault(__webpack_require__(/*! ./store */ 29));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\n_vue.default.config.productionTip = false;\n\n_App.default.mpType = \"app\";\n\nvar app = new _vue.default(_objectSpread({\n  store: _store.default },\n_App.default));\n\napp.$mount();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vbWFpbi5qcyJdLCJuYW1lcyI6WyJWdWUiLCJjb25maWciLCJwcm9kdWN0aW9uVGlwIiwiQXBwIiwibXBUeXBlIiwiYXBwIiwic3RvcmUiLCIkbW91bnQiXSwibWFwcGluZ3MiOiJBQUFBLHdDQUFtQjtBQUNuQjtBQUNBLDRFOztBQUVBQSxhQUFJQyxNQUFKLENBQVdDLGFBQVgsR0FBMkIsS0FBM0I7O0FBRUFDLGFBQUlDLE1BQUosR0FBYSxLQUFiOztBQUVBLElBQU1DLEdBQUcsR0FBRyxJQUFJTCxZQUFKO0FBQ1ZNLE9BQUssRUFBTEEsY0FEVTtBQUVQSCxZQUZPLEVBQVo7O0FBSUFFLEdBQUcsQ0FBQ0UsTUFBSiIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICd1bmktcGFnZXMnO2ltcG9ydCBWdWUgZnJvbSBcInZ1ZVwiO1xyXG5pbXBvcnQgQXBwIGZyb20gXCIuL0FwcFwiO1xyXG5pbXBvcnQgc3RvcmUgZnJvbSBcIi4vc3RvcmVcIjtcclxuXHJcblZ1ZS5jb25maWcucHJvZHVjdGlvblRpcCA9IGZhbHNlO1xyXG5cclxuQXBwLm1wVHlwZSA9IFwiYXBwXCI7XHJcblxyXG5jb25zdCBhcHAgPSBuZXcgVnVlKHtcclxuICBzdG9yZSxcclxuICAuLi5BcHBcclxufSk7XHJcbmFwcC4kbW91bnQoKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/*!*********************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages.json ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


if (typeof Promise !== 'undefined' && !Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(function (value) {
      return promise.resolve(callback()).then(function () {
        return value;
      });
    }, function (reason) {
      return promise.resolve(callback()).then(function () {
        throw reason;
      });
    });
  };
}
if (typeof uni !== 'undefined' && uni && uni.requireGlobal) {
  var global = uni.requireGlobal();
  ArrayBuffer = global.ArrayBuffer;
  Int8Array = global.Int8Array;
  Uint8Array = global.Uint8Array;
  Uint8ClampedArray = global.Uint8ClampedArray;
  Int16Array = global.Int16Array;
  Uint16Array = global.Uint16Array;
  Int32Array = global.Int32Array;
  Uint32Array = global.Uint32Array;
  Float32Array = global.Float32Array;
  Float64Array = global.Float64Array;
  BigInt64Array = global.BigInt64Array;
  BigUint64Array = global.BigUint64Array;
}


if (uni.restoreGlobal) {
  uni.restoreGlobal(weex, plus, setTimeout, clearTimeout, setInterval, clearInterval);
}
__definePage('pages/index/index', function () {return Vue.extend(__webpack_require__(/*! pages/index/index.vue?mpType=page */ 2).default);});
__definePage('pages/contacts/index', function () {return Vue.extend(__webpack_require__(/*! pages/contacts/index.vue?mpType=page */ 8).default);});
__definePage('pages/me/index', function () {return Vue.extend(__webpack_require__(/*! pages/me/index.vue?mpType=page */ 14).default);});
__definePage('pages/chat/index', function () {return Vue.extend(__webpack_require__(/*! pages/chat/index.vue?mpType=page */ 19).default);});
__definePage('pages/register/index', function () {return Vue.extend(__webpack_require__(/*! pages/register/index.vue?mpType=page */ 32).default);});

/***/ }),
/* 2 */
/*!********************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/index/index.vue?mpType=page ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_vue_vue_type_template_id_2be84a3c_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=2be84a3c&scoped=true&mpType=page */ 3);\n/* harmony import */ var _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js&mpType=page */ 5);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 7);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _index_vue_vue_type_template_id_2be84a3c_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _index_vue_vue_type_template_id_2be84a3c_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"2be84a3c\",\n  null,\n  false,\n  _index_vue_vue_type_template_id_2be84a3c_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/index/index.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBeUk7QUFDekk7QUFDb0U7QUFDTDs7O0FBRy9EO0FBQ21OO0FBQ25OLGdCQUFnQixpTkFBVTtBQUMxQixFQUFFLHNGQUFNO0FBQ1IsRUFBRSx1R0FBTTtBQUNSLEVBQUUsZ0hBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMkdBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zLCByZWN5Y2xhYmxlUmVuZGVyLCBjb21wb25lbnRzIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTJiZTg0YTNjJnNjb3BlZD10cnVlJm1wVHlwZT1wYWdlXCJcbnZhciByZW5kZXJqc1xuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIyYmU4NGEzY1wiLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWdlcy9pbmRleC9pbmRleC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/*!**************************************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/index/index.vue?vue&type=template&id=2be84a3c&scoped=true&mpType=page ***!
  \**************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=2be84a3c&scoped=true&mpType=page */ 4);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_2be84a3c_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 4 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/index/index.vue?vue&type=template&id=2be84a3c&scoped=true&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    { staticClass: _vm._$s(0, "sc", "content"), attrs: { _i: 0 } },
    [
      _c("view", [
        _c(
          "view",
          { staticClass: _vm._$s(2, "sc", "form-item"), attrs: { _i: 2 } },
          [
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.user,
                  expression: "user"
                }
              ],
              staticClass: _vm._$s(3, "sc", "uni-input"),
              attrs: { _i: 3 },
              domProps: { value: _vm._$s(3, "v-model", _vm.user) },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.user = $event.target.value
                }
              }
            })
          ]
        ),
        _c(
          "view",
          { staticClass: _vm._$s(4, "sc", "form-item"), attrs: { _i: 4 } },
          [
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.pwd,
                  expression: "pwd"
                }
              ],
              staticClass: _vm._$s(5, "sc", "uni-input"),
              attrs: { _i: 5 },
              domProps: { value: _vm._$s(5, "v-model", _vm.pwd) },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.pwd = $event.target.value
                }
              }
            })
          ]
        ),
        _c("button", {
          staticClass: _vm._$s(6, "sc", "btn"),
          attrs: { loading: _vm._$s(6, "a-loading", _vm.loading), _i: 6 },
          on: { click: _vm.login }
        })
      ]),
      _c("navigator", {}, [
        _c("view", {
          staticClass: _vm._$s(8, "sc", "register-tip"),
          attrs: { _i: 8 }
        })
      ])
    ]
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 5 */
/*!********************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/index/index.vue?vue&type=script&lang=js&mpType=page ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js&mpType=page */ 6);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTR1QixDQUFnQixzdEJBQUcsRUFBQyIsImZpbGUiOiI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay1wcmVwcm9jZXNzLWxvYWRlci9pbmRleC5qcz8/cmVmLS02LTEhLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3Z1ZS1jbGktcGx1Z2luLXVuaS9wYWNrYWdlcy93ZWJwYWNrLXVuaS1hcHAtbG9hZGVyL3VzaW5nLWNvbXBvbmVudHMuanMhLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3Z1ZS1jbGktcGx1Z2luLXVuaS9wYWNrYWdlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/index/index.vue?vue&type=script&lang=js&mpType=page ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar conn = uni.conn;var _default =\n{\n  data: function data() {\n    return {\n      user: \"\",\n      pwd: \"\",\n      loading: false };\n\n  },\n  onLoad: function onLoad() {},\n  methods: {\n    login: function login() {var _this = this;\n      this.loading = true;\n      conn.\n      open({\n        user: this.user,\n        pwd: this.pwd }).\n\n      then(function () {\n        uni.switchTab({\n          url: \"../contacts/index\" });\n\n      }).\n      catch(function (e) {\n        if (e.data.data.error_description === \"invalid password\") {\n          uni.showToast({\n            icon: \"none\",\n            title: \"用户名或密码错误\" });\n\n        } else {\n          uni.showToast({\n            icon: \"none\",\n            title: \"登录失败\" });\n\n        }\n      }).\n      finally(function () {\n        _this.loading = false;\n      });\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvaW5kZXgvaW5kZXgudnVlIl0sIm5hbWVzIjpbImNvbm4iLCJ1bmkiLCJkYXRhIiwidXNlciIsInB3ZCIsImxvYWRpbmciLCJvbkxvYWQiLCJtZXRob2RzIiwibG9naW4iLCJvcGVuIiwidGhlbiIsInN3aXRjaFRhYiIsInVybCIsImNhdGNoIiwiZSIsImVycm9yX2Rlc2NyaXB0aW9uIiwic2hvd1RvYXN0IiwiaWNvbiIsInRpdGxlIiwiZmluYWxseSJdLCJtYXBwaW5ncyI6IndGQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBTUEsSUFBSSxHQUFHQyxHQUFHLENBQUNELElBQWpCLEM7QUFDZTtBQUNiRSxNQURhLGtCQUNOO0FBQ0wsV0FBTztBQUNMQyxVQUFJLEVBQUUsRUFERDtBQUVMQyxTQUFHLEVBQUUsRUFGQTtBQUdMQyxhQUFPLEVBQUUsS0FISixFQUFQOztBQUtELEdBUFk7QUFRYkMsUUFSYSxvQkFRSixDQUFFLENBUkU7QUFTYkMsU0FBTyxFQUFFO0FBQ1BDLFNBRE8sbUJBQ0M7QUFDTixXQUFLSCxPQUFMLEdBQWUsSUFBZjtBQUNBTCxVQUFJO0FBQ0RTLFVBREgsQ0FDUTtBQUNKTixZQUFJLEVBQUUsS0FBS0EsSUFEUDtBQUVKQyxXQUFHLEVBQUUsS0FBS0EsR0FGTixFQURSOztBQUtHTSxVQUxILENBS1EsWUFBTTtBQUNWVCxXQUFHLENBQUNVLFNBQUosQ0FBYztBQUNaQyxhQUFHLEVBQUUsbUJBRE8sRUFBZDs7QUFHRCxPQVRIO0FBVUdDLFdBVkgsQ0FVUyxVQUFDQyxDQUFELEVBQU87QUFDWixZQUFJQSxDQUFDLENBQUNaLElBQUYsQ0FBT0EsSUFBUCxDQUFZYSxpQkFBWixLQUFrQyxrQkFBdEMsRUFBMEQ7QUFDeERkLGFBQUcsQ0FBQ2UsU0FBSixDQUFjO0FBQ1pDLGdCQUFJLEVBQUUsTUFETTtBQUVaQyxpQkFBSyxFQUFFLFVBRkssRUFBZDs7QUFJRCxTQUxELE1BS087QUFDTGpCLGFBQUcsQ0FBQ2UsU0FBSixDQUFjO0FBQ1pDLGdCQUFJLEVBQUUsTUFETTtBQUVaQyxpQkFBSyxFQUFFLE1BRkssRUFBZDs7QUFJRDtBQUNGLE9BdEJIO0FBdUJHQyxhQXZCSCxDQXVCVyxZQUFNO0FBQ2IsYUFBSSxDQUFDZCxPQUFMLEdBQWUsS0FBZjtBQUNELE9BekJIO0FBMEJELEtBN0JNLEVBVEksRSIsImZpbGUiOiI2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cbmNvbnN0IGNvbm4gPSB1bmkuY29ubjtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXNlcjogXCJcIixcbiAgICAgIHB3ZDogXCJcIixcbiAgICAgIGxvYWRpbmc6IGZhbHNlXG4gICAgfTtcbiAgfSxcbiAgb25Mb2FkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICBsb2dpbigpIHtcbiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XG4gICAgICBjb25uXG4gICAgICAgIC5vcGVuKHtcbiAgICAgICAgICB1c2VyOiB0aGlzLnVzZXIsXG4gICAgICAgICAgcHdkOiB0aGlzLnB3ZFxuICAgICAgICB9KVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgdW5pLnN3aXRjaFRhYih7XG4gICAgICAgICAgICB1cmw6IFwiLi4vY29udGFjdHMvaW5kZXhcIlxuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICBpZiAoZS5kYXRhLmRhdGEuZXJyb3JfZGVzY3JpcHRpb24gPT09IFwiaW52YWxpZCBwYXNzd29yZFwiKSB7XG4gICAgICAgICAgICB1bmkuc2hvd1RvYXN0KHtcbiAgICAgICAgICAgICAgaWNvbjogXCJub25lXCIsXG4gICAgICAgICAgICAgIHRpdGxlOiBcIueUqOaIt+WQjeaIluWvhueggemUmeivr1wiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdW5pLnNob3dUb2FzdCh7XG4gICAgICAgICAgICAgIGljb246IFwibm9uZVwiLFxuICAgICAgICAgICAgICB0aXRsZTogXCLnmbvlvZXlpLHotKVcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 8 */
/*!***********************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/contacts/index.vue?mpType=page ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_vue_vue_type_template_id_e2e8cec2_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=e2e8cec2&scoped=true&mpType=page */ 9);\n/* harmony import */ var _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js&mpType=page */ 11);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 7);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _index_vue_vue_type_template_id_e2e8cec2_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _index_vue_vue_type_template_id_e2e8cec2_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"e2e8cec2\",\n  null,\n  false,\n  _index_vue_vue_type_template_id_e2e8cec2_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/contacts/index.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBeUk7QUFDekk7QUFDb0U7QUFDTDs7O0FBRy9EO0FBQ21OO0FBQ25OLGdCQUFnQixpTkFBVTtBQUMxQixFQUFFLHNGQUFNO0FBQ1IsRUFBRSx1R0FBTTtBQUNSLEVBQUUsZ0hBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMkdBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zLCByZWN5Y2xhYmxlUmVuZGVyLCBjb21wb25lbnRzIH0gZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWUyZThjZWMyJnNjb3BlZD10cnVlJm1wVHlwZT1wYWdlXCJcbnZhciByZW5kZXJqc1xuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIlxuZXhwb3J0ICogZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCJlMmU4Y2VjMlwiLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWdlcy9jb250YWN0cy9pbmRleC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/*!*****************************************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/contacts/index.vue?vue&type=template&id=e2e8cec2&scoped=true&mpType=page ***!
  \*****************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_e2e8cec2_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=e2e8cec2&scoped=true&mpType=page */ 10);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_e2e8cec2_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_e2e8cec2_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_e2e8cec2_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_e2e8cec2_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 10 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/contacts/index.vue?vue&type=template&id=e2e8cec2&scoped=true&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    { staticClass: _vm._$s(0, "sc", "content"), attrs: { _i: 0 } },
    _vm._l(_vm._$s(1, "f", { forItems: _vm.contacts }), function(
      item,
      $10,
      $20,
      $30
    ) {
      return _c(
        "view",
        {
          key: _vm._$s(1, "f", { forIndex: $20, key: item }),
          staticClass: _vm._$s("1-" + $30, "sc", "contact-item"),
          attrs: { _i: "1-" + $30 },
          on: {
            click: function($event) {
              return _vm.toChat(item)
            }
          }
        },
        [
          _c("view", {
            staticClass: _vm._$s("2-" + $30, "sc", "avatar"),
            attrs: { _i: "2-" + $30 }
          }),
          _c("view", [_vm._v(_vm._$s("3-" + $30, "t0-0", _vm._s(item)))])
        ]
      )
    }),
    0
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 11 */
/*!***********************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/contacts/index.vue?vue&type=script&lang=js&mpType=page ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js&mpType=page */ 12);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTR1QixDQUFnQixzdEJBQUcsRUFBQyIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3Z1ZS1jbGktcGx1Z2luLXVuaS9wYWNrYWdlcy93ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stdW5pLWFwcC1sb2FkZXIvdXNpbmctY29tcG9uZW50cy5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/contacts/index.vue?vue&type=script&lang=js&mpType=page ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar conn = uni.conn;var _default =\n{\n  data: function data() {\n    return {\n      contacts: [] };\n\n  },\n  onShow: function onShow() {\n    this.getContacts();\n  },\n  methods: {\n    getContacts: function getContacts() {var _this = this;\n      uni.conn.getContacts().then(function (res) {\n        _this.contacts = res.data;\n        __f__(\"log\", res, \" at pages/contacts/index.vue:29\");\n      });\n    },\n    toChat: function toChat(uid) {\n      uni.navigateTo({\n        url: \"../chat/index?to=\".concat(uid) });\n\n    } } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 13)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvY29udGFjdHMvaW5kZXgudnVlIl0sIm5hbWVzIjpbImNvbm4iLCJ1bmkiLCJkYXRhIiwiY29udGFjdHMiLCJvblNob3ciLCJnZXRDb250YWN0cyIsIm1ldGhvZHMiLCJ0aGVuIiwicmVzIiwidG9DaGF0IiwidWlkIiwibmF2aWdhdGVUbyIsInVybCJdLCJtYXBwaW5ncyI6InFJQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLElBQU1BLElBQUksR0FBR0MsR0FBRyxDQUFDRCxJQUFqQixDO0FBQ2U7QUFDYkUsTUFEYSxrQkFDTjtBQUNMLFdBQU87QUFDTEMsY0FBUSxFQUFFLEVBREwsRUFBUDs7QUFHRCxHQUxZO0FBTWJDLFFBTmEsb0JBTUo7QUFDUCxTQUFLQyxXQUFMO0FBQ0QsR0FSWTtBQVNiQyxTQUFPLEVBQUU7QUFDUEQsZUFETyx5QkFDTztBQUNaSixTQUFHLENBQUNELElBQUosQ0FBU0ssV0FBVCxHQUF1QkUsSUFBdkIsQ0FBNEIsVUFBQ0MsR0FBRCxFQUFTO0FBQ25DLGFBQUksQ0FBQ0wsUUFBTCxHQUFnQkssR0FBRyxDQUFDTixJQUFwQjtBQUNBLHFCQUFZTSxHQUFaO0FBQ0QsT0FIRDtBQUlELEtBTk07QUFPUEMsVUFQTyxrQkFPQUMsR0FQQSxFQU9LO0FBQ1ZULFNBQUcsQ0FBQ1UsVUFBSixDQUFlO0FBQ2JDLFdBQUcsNkJBQXNCRixHQUF0QixDQURVLEVBQWY7O0FBR0QsS0FYTSxFQVRJLEUiLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuXG5jb25zdCBjb25uID0gdW5pLmNvbm47XG5leHBvcnQgZGVmYXVsdCB7XG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNvbnRhY3RzOiBbXVxuICAgIH07XG4gIH0sXG4gIG9uU2hvdygpIHtcbiAgICB0aGlzLmdldENvbnRhY3RzKCk7XG4gIH0sXG4gIG1ldGhvZHM6IHtcbiAgICBnZXRDb250YWN0cygpIHtcbiAgICAgIHVuaS5jb25uLmdldENvbnRhY3RzKCkudGhlbigocmVzKSA9PiB7XG4gICAgICAgIHRoaXMuY29udGFjdHMgPSByZXMuZGF0YTtcbiAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgdG9DaGF0KHVpZCkge1xuICAgICAgdW5pLm5hdmlnYXRlVG8oe1xuICAgICAgICB1cmw6IGAuLi9jaGF0L2luZGV4P3RvPSR7dWlkfWBcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/*!*********************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js ***!
  \*********************************************************************/
/*! exports provided: log, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return formatLog; });
function typof (v) {
  var s = Object.prototype.toString.call(v)
  return s.substring(8, s.length - 1)
}

function isDebugMode () {
  /* eslint-disable no-undef */
  return typeof __channelId__ === 'string' && __channelId__
}

function jsonStringifyReplacer (k, p) {
  switch (typof(p)) {
    case 'Function':
      return 'function() { [native code] }'
    default :
      return p
  }
}

function log (type) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key]
  }
  console[type].apply(console, args)
}

function formatLog () {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key]
  }
  var type = args.shift()
  if (isDebugMode()) {
    args.push(args.pop().replace('at ', 'uni-app:///'))
    return console[type].apply(console, args)
  }

  var msgs = args.map(function (v) {
    var type = Object.prototype.toString.call(v).toLowerCase()

    if (type === '[object object]' || type === '[object array]') {
      try {
        v = '---BEGIN:JSON---' + JSON.stringify(v, jsonStringifyReplacer) + '---END:JSON---'
      } catch (e) {
        v = type
      }
    } else {
      if (v === null) {
        v = '---NULL---'
      } else if (v === undefined) {
        v = '---UNDEFINED---'
      } else {
        var vType = typof(v).toUpperCase()

        if (vType === 'NUMBER' || vType === 'BOOLEAN') {
          v = '---BEGIN:' + vType + '---' + v + '---END:' + vType + '---'
        } else {
          v = String(v)
        }
      }
    }

    return v
  })
  var msg = ''

  if (msgs.length > 1) {
    var lastMsg = msgs.pop()
    msg = msgs.join('---COMMA---')

    if (lastMsg.indexOf(' at ') === 0) {
      msg += lastMsg
    } else {
      msg += '---COMMA---' + lastMsg
    }
  } else {
    msg = msgs[0]
  }

  console[type](msg)
}


/***/ }),
/* 14 */
/*!*****************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/me/index.vue?mpType=page ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_vue_vue_type_template_id_0fe920e4_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=0fe920e4&scoped=true&mpType=page */ 15);\n/* harmony import */ var _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js&mpType=page */ 17);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 7);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _index_vue_vue_type_template_id_0fe920e4_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _index_vue_vue_type_template_id_0fe920e4_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"0fe920e4\",\n  null,\n  false,\n  _index_vue_vue_type_template_id_0fe920e4_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/me/index.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBeUk7QUFDekk7QUFDb0U7QUFDTDs7O0FBRy9EO0FBQ21OO0FBQ25OLGdCQUFnQixpTkFBVTtBQUMxQixFQUFFLHNGQUFNO0FBQ1IsRUFBRSx1R0FBTTtBQUNSLEVBQUUsZ0hBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMkdBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wZmU5MjBlNCZzY29wZWQ9dHJ1ZSZtcFR5cGU9cGFnZVwiXG52YXIgcmVuZGVyanNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMGZlOTIwZTRcIixcbiAgbnVsbCxcbiAgZmFsc2UsXG4gIGNvbXBvbmVudHMsXG4gIHJlbmRlcmpzXG4pXG5cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFnZXMvbWUvaW5kZXgudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/*!***********************************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/me/index.vue?vue&type=template&id=0fe920e4&scoped=true&mpType=page ***!
  \***********************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_0fe920e4_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=0fe920e4&scoped=true&mpType=page */ 16);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_0fe920e4_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_0fe920e4_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_0fe920e4_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_0fe920e4_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 16 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/me/index.vue?vue&type=template&id=0fe920e4&scoped=true&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    { staticClass: _vm._$s(0, "sc", "content"), attrs: { _i: 0 } },
    [
      _c("view", { staticClass: _vm._$s(1, "sc", "me"), attrs: { _i: 1 } }, [
        _vm._v(_vm._$s(1, "t0-0", _vm._s(_vm.user)))
      ]),
      _c(
        "view",
        { staticClass: _vm._$s(2, "sc", "form-item"), attrs: { _i: 2 } },
        [
          _c("text", {
            staticClass: _vm._$s(3, "sc", "form-item-label"),
            attrs: { _i: 3 }
          }),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.uid,
                expression: "uid"
              }
            ],
            staticClass: _vm._$s(4, "sc", "uni-input"),
            attrs: { _i: 4 },
            domProps: { value: _vm._$s(4, "v-model", _vm.uid) },
            on: {
              input: function($event) {
                if ($event.target.composing) {
                  return
                }
                _vm.uid = $event.target.value
              }
            }
          }),
          _c("button", {
            staticClass: _vm._$s(5, "sc", "form-item-btn"),
            attrs: { _i: 5 },
            on: { click: _vm.addContact }
          })
        ]
      ),
      _c("button", {
        staticClass: _vm._$s(6, "sc", "log-out"),
        attrs: { _i: 6 },
        on: { click: _vm.logout }
      })
    ]
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 17 */
/*!*****************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/me/index.vue?vue&type=script&lang=js&mpType=page ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js&mpType=page */ 18);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTR1QixDQUFnQixzdEJBQUcsRUFBQyIsImZpbGUiOiIxNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3Z1ZS1jbGktcGx1Z2luLXVuaS9wYWNrYWdlcy93ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stdW5pLWFwcC1sb2FkZXIvdXNpbmctY29tcG9uZW50cy5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/me/index.vue?vue&type=script&lang=js&mpType=page ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar conn = uni.conn;var _default =\n{\n  data: function data() {\n    return {\n      user: conn === null || conn === void 0 ? void 0 : conn.user,\n      uid: \"\" };\n\n  },\n  onLoad: function onLoad() {},\n  methods: {\n    logout: function logout() {\n      conn.close();\n      uni.redirectTo({\n        url: \"../index/index\" });\n\n    },\n    addContact: function addContact() {\n      conn.addContact(this.uid, \"加个好友吧～\");\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvbWUvaW5kZXgudnVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkEsb0I7QUFDQTtBQUNBLE1BREEsa0JBQ0E7QUFDQTtBQUNBLGlFQURBO0FBRUEsYUFGQTs7QUFJQSxHQU5BO0FBT0EsUUFQQSxvQkFPQSxFQVBBO0FBUUE7QUFDQSxVQURBLG9CQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQURBOztBQUdBLEtBTkE7QUFPQSxjQVBBLHdCQU9BO0FBQ0E7QUFDQSxLQVRBLEVBUkEsRSIsImZpbGUiOiIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cbiAgPHZpZXcgY2xhc3M9XCJjb250ZW50XCI+XG4gICAgPHZpZXcgY2xhc3M9XCJtZVwiPnt7IHVzZXIgfX0gPC92aWV3PlxuICAgIDx2aWV3IGNsYXNzPVwiZm9ybS1pdGVtXCI+XG4gICAgICA8dGV4dCBjbGFzcz1cImZvcm0taXRlbS1sYWJlbFwiPua3u+WKoOWlveWPi++8mjwvdGV4dD5cbiAgICAgIDxpbnB1dCBjbGFzcz1cInVuaS1pbnB1dFwiIHYtbW9kZWw9XCJ1aWRcIiBmb2N1cyBwbGFjZWhvbGRlcj1cIuivt+i+k+WFpeeUqOaIt0lEXCIgLz5cbiAgICAgIDxidXR0b25cbiAgICAgICAgY2xhc3M9XCJmb3JtLWl0ZW0tYnRuXCJcbiAgICAgICAgc2l6ZT1cIm1pbmlcIlxuICAgICAgICB0eXBlPVwicHJpbWFyeVwiXG4gICAgICAgIEB0YXA9XCJhZGRDb250YWN0XCJcbiAgICAgID5cbiAgICAgICAg5re75YqgXG4gICAgICA8L2J1dHRvbj5cbiAgICA8L3ZpZXc+XG4gICAgPGJ1dHRvbiBjbGFzcz1cImxvZy1vdXRcIiBAdGFwPVwibG9nb3V0XCI+6YCA5Ye655m75b2VPC9idXR0b24+XG4gIDwvdmlldz5cbjwvdGVtcGxhdGU+XG48c2NyaXB0PlxuY29uc3QgY29ubiA9IHVuaS5jb25uO1xuZXhwb3J0IGRlZmF1bHQge1xuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICB1c2VyOiBjb25uPy51c2VyLFxuICAgICAgdWlkOiBcIlwiXG4gICAgfTtcbiAgfSxcbiAgb25Mb2FkKCkge30sXG4gIG1ldGhvZHM6IHtcbiAgICBsb2dvdXQoKSB7XG4gICAgICBjb25uLmNsb3NlKCk7XG4gICAgICB1bmkucmVkaXJlY3RUbyh7XG4gICAgICAgIHVybDogXCIuLi9pbmRleC9pbmRleFwiXG4gICAgICB9KTtcbiAgICB9LFxuICAgIGFkZENvbnRhY3QoKSB7XG4gICAgICBjb25uLmFkZENvbnRhY3QodGhpcy51aWQsIFwi5Yqg5Liq5aW95Y+L5ZCn772eXCIpO1xuICAgIH1cbiAgfVxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgc2NvcGVkPlxuLmNvbnRlbnQge1xuICBwYWRkaW5nOiA2MHJweCAyNHJweCAwIDI0cnB4O1xuICBoZWlnaHQ6IDEwMHZoO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQxLCAyNDEsIDI0MSk7XG59XG5cbi5tZSB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTUwcnB4O1xuICBoZWlnaHQ6IDE1MHJweDtcbiAgYmFja2dyb3VuZDogIzM0NzhmNjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBsaW5lLWhlaWdodDogMTUwcnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiAjZmZmO1xuICBtYXJnaW4tYm90dG9tOiAyMDBycHg7XG59XG5cbi5sb2ctb3V0IHtcbiAgbWFyZ2luLXRvcDogMzBycHg7XG59XG5cbi5mb3JtLWl0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nOiAxNnJweCAyNnJweDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC13cmFwOiBub3dyYXA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIG1hcmdpbi1ib3R0b206IDEycnB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmZvcm0taXRlbS1sYWJlbCB7XG4gIGZsZXgtc2hyaW5rOiAwO1xufVxuLmZvcm0taXRlbS1idG4ge1xuICBmbGV4LXNocmluazogMDtcbn1cbjwvc3R5bGU+XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/*!*******************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/chat/index.vue?mpType=page ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_vue_vue_type_template_id_1f920264_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=1f920264&scoped=true&mpType=page */ 20);\n/* harmony import */ var _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js&mpType=page */ 22);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 7);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _index_vue_vue_type_template_id_1f920264_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _index_vue_vue_type_template_id_1f920264_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"1f920264\",\n  null,\n  false,\n  _index_vue_vue_type_template_id_1f920264_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/chat/index.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBeUk7QUFDekk7QUFDb0U7QUFDTDs7O0FBRy9EO0FBQ21OO0FBQ25OLGdCQUFnQixpTkFBVTtBQUMxQixFQUFFLHNGQUFNO0FBQ1IsRUFBRSx1R0FBTTtBQUNSLEVBQUUsZ0hBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMkdBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0xZjkyMDI2NCZzY29wZWQ9dHJ1ZSZtcFR5cGU9cGFnZVwiXG52YXIgcmVuZGVyanNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiMWY5MjAyNjRcIixcbiAgbnVsbCxcbiAgZmFsc2UsXG4gIGNvbXBvbmVudHMsXG4gIHJlbmRlcmpzXG4pXG5cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFnZXMvY2hhdC9pbmRleC52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///19\n");

/***/ }),
/* 20 */
/*!*************************************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/chat/index.vue?vue&type=template&id=1f920264&scoped=true&mpType=page ***!
  \*************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_1f920264_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=1f920264&scoped=true&mpType=page */ 21);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_1f920264_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_1f920264_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_1f920264_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_1f920264_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 21 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/chat/index.vue?vue&type=template&id=1f920264&scoped=true&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    { staticClass: _vm._$s(0, "sc", "content"), attrs: { _i: 0 } },
    [
      _c(
        "view",
        { staticClass: _vm._$s(1, "sc", "msg-content"), attrs: { _i: 1 } },
        _vm._l(_vm._$s(2, "f", { forItems: _vm.chatMsg }), function(
          item,
          $10,
          $20,
          $30
        ) {
          return _c(
            "view",
            {
              key: _vm._$s(2, "f", { forIndex: $20, key: item.id }),
              class: _vm._$s(
                "2-" + $30,
                "c",
                item.from && item.from !== _vm.user
                  ? "msg-item msg-left"
                  : "msg-item msg-right"
              ),
              attrs: { _i: "2-" + $30 }
            },
            [
              _c(
                "view",
                {
                  staticClass: _vm._$s("3-" + $30, "sc", "from"),
                  attrs: { _i: "3-" + $30 }
                },
                [
                  _vm._v(
                    _vm._$s("3-" + $30, "t0-0", _vm._s(item.from || _vm.user))
                  )
                ]
              ),
              _vm._$s("4-" + $30, "i", item.type === "txt")
                ? _c(
                    "view",
                    {
                      staticClass: _vm._$s("4-" + $30, "sc", "msg"),
                      attrs: { _i: "4-" + $30 }
                    },
                    [_vm._v(_vm._$s("4-" + $30, "t0-0", _vm._s(item.msg)))]
                  )
                : _vm._$s("5-" + $30, "e", item.type === "img")
                ? _c("view", [
                    _c("image", {
                      staticClass: _vm._$s("6-" + $30, "sc", "img-msg"),
                      attrs: {
                        src: _vm._$s("6-" + $30, "a-src", item.url),
                        _i: "6-" + $30
                      }
                    })
                  ])
                : _vm._e(),
              _c(
                "view",
                {
                  staticClass: _vm._$s("7-" + $30, "sc", "time"),
                  attrs: { _i: "7-" + $30 }
                },
                [
                  _vm._v(
                    _vm._$s(
                      "7-" + $30,
                      "t0-0",
                      _vm._s(new Date(item.time).toLocaleString())
                    )
                  )
                ]
              )
            ]
          )
        }),
        0
      ),
      _c("view", [
        _c(
          "view",
          { staticClass: _vm._$s(9, "sc", "input-content"), attrs: { _i: 9 } },
          [
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.msg,
                  expression: "msg"
                }
              ],
              staticClass: _vm._$s(10, "sc", "uni-input"),
              attrs: { _i: 10 },
              domProps: { value: _vm._$s(10, "v-model", _vm.msg) },
              on: {
                confirm: _vm.sendTextMsg,
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.msg = $event.target.value
                }
              }
            }),
            _c("view", {
              staticClass: _vm._$s(11, "sc", "select-img"),
              attrs: { _i: 11 },
              on: { click: _vm.selectImg }
            })
          ]
        )
      ])
    ]
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 22 */
/*!*******************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/chat/index.vue?vue&type=script&lang=js&mpType=page ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js&mpType=page */ 23);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTR1QixDQUFnQixzdEJBQUcsRUFBQyIsImZpbGUiOiIyMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3Z1ZS1jbGktcGx1Z2luLXVuaS9wYWNrYWdlcy93ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stdW5pLWFwcC1sb2FkZXIvdXNpbmctY29tcG9uZW50cy5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/chat/index.vue?vue&type=script&lang=js&mpType=page ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _uniappSdk = _interopRequireDefault(__webpack_require__(/*! ../../sdk/uniapp-sdk-4.1.2 */ 24));\nvar _initIm = __webpack_require__(/*! ../../utils/initIm */ 28);\nvar _consts = __webpack_require__(/*! ../../consts */ 31);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = { data: function data() {return { msg: \"\", user: uni.conn.user, to: \"\" };}, onLoad: function onLoad(e) {this.to = e.to;uni.setNavigationBarTitle({ title: e.to });}, computed: { chatMsg: function chatMsg() {return this.$store.state.chatMap[this.to] || [];} }, methods: { selectImg: function selectImg() {var _this = this;var opt = { count: 1, // 默认9\n        sizeType: [\"original\", \"compressed\"], // 可以指定是原图还是压缩图，默认二者都有\n        sourceType: [\"album\"], // 从相册选择\n        success: function success(res) {var tempFilePath = res.tempFilePaths[0];var str = _initIm.IM_CONFIG.appKey.split(\"#\");var token = uni.conn.context.accessToken; // 上传文件\n          uni.uploadFile({ url: \"\".concat(_initIm.IM_CONFIG.apiUrl, \"/\").concat(str[0], \"/\").concat(str[1], \"/chatfiles\"), filePath: tempFilePath, name: \"file\", header: {\n              Authorization: \"Bearer \".concat(token) },\n\n            success: function success(res) {\n              var dt = JSON.parse(res.data);\n              var uuid = dt.entities[0].uuid;\n              var imgUrl = \"\".concat(dt.uri, \"/\").concat(uuid);\n              // Web端需要在 WebIMConfig.js中 设置 useOwnUploadFun: true\n              var imgMsg = _uniappSdk.default.message.create({\n                chatType: \"singleChat\",\n                type: _consts.MSG_TYPE.img,\n                url: imgUrl,\n                to: _this.to });\n\n              uni.conn.send(imgMsg).then(function (res) {\n                _this.$store.commit(\"pushMessage\", {\n                  uid: _this.to,\n                  msg: imgMsg });\n\n              });\n            } });\n\n        } };\n\n\n      uni.chooseImage(opt);\n    },\n    sendTextMsg: function sendTextMsg() {var _this2 = this;\n      var textMsg = _uniappSdk.default.message.create({\n        chatType: \"singleChat\",\n        msg: this.msg,\n        to: this.to,\n        type: _consts.MSG_TYPE.txt });\n\n      uni.conn.send(textMsg).then(function (res) {\n        _this2.$store.commit(\"pushMessage\", {\n          uid: _this2.to,\n          msg: textMsg });\n\n        _this2.msg = \"\";\n      });\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvY2hhdC9pbmRleC52dWUiXSwibmFtZXMiOlsiZGF0YSIsIm1zZyIsInVzZXIiLCJ1bmkiLCJjb25uIiwidG8iLCJvbkxvYWQiLCJlIiwic2V0TmF2aWdhdGlvbkJhclRpdGxlIiwidGl0bGUiLCJjb21wdXRlZCIsImNoYXRNc2ciLCIkc3RvcmUiLCJzdGF0ZSIsImNoYXRNYXAiLCJtZXRob2RzIiwic2VsZWN0SW1nIiwiX3RoaXMiLCJvcHQiLCJjb3VudCIsInNpemVUeXBlIiwic291cmNlVHlwZSIsInN1Y2Nlc3MiLCJyZXMiLCJ0ZW1wRmlsZVBhdGgiLCJ0ZW1wRmlsZVBhdGhzIiwic3RyIiwiSU1fQ09ORklHIiwiYXBwS2V5Iiwic3BsaXQiLCJ0b2tlbiIsImNvbnRleHQiLCJhY2Nlc3NUb2tlbiIsInVwbG9hZEZpbGUiLCJ1cmwiLCJhcGlVcmwiLCJmaWxlUGF0aCIsIm5hbWUiLCJoZWFkZXIiLCJBdXRob3JpemF0aW9uIiwiZHQiLCJKU09OIiwicGFyc2UiLCJ1dWlkIiwiZW50aXRpZXMiLCJpbWdVcmwiLCJ1cmkiLCJpbWdNc2ciLCJ3ZWJJTSIsIm1lc3NhZ2UiLCJjcmVhdGUiLCJjaGF0VHlwZSIsInR5cGUiLCJNU0dfVFlQRSIsImltZyIsInNlbmQiLCJ0aGVuIiwiY29tbWl0IiwidWlkIiwiY2hvb3NlSW1hZ2UiLCJzZW5kVGV4dE1zZyIsInRleHRNc2ciLCJ0eHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFrQ0E7QUFDQTtBQUNBLDBELDhGQXBDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7ZUFNZSxFQUNiQSxJQURhLGtCQUNOLENBQ0wsT0FBTyxFQUNMQyxHQUFHLEVBQUUsRUFEQSxFQUVMQyxJQUFJLEVBQUVDLEdBQUcsQ0FBQ0MsSUFBSixDQUFTRixJQUZWLEVBR0xHLEVBQUUsRUFBRSxFQUhDLEVBQVAsQ0FLRCxDQVBZLEVBUWJDLE1BUmEsa0JBUU5DLENBUk0sRUFRSCxDQUNSLEtBQUtGLEVBQUwsR0FBVUUsQ0FBQyxDQUFDRixFQUFaLENBQ0FGLEdBQUcsQ0FBQ0sscUJBQUosQ0FBMEIsRUFDeEJDLEtBQUssRUFBRUYsQ0FBQyxDQUFDRixFQURlLEVBQTFCLEVBR0QsQ0FiWSxFQWNiSyxRQUFRLEVBQUUsRUFDUkMsT0FEUSxxQkFDRSxDQUNSLE9BQU8sS0FBS0MsTUFBTCxDQUFZQyxLQUFaLENBQWtCQyxPQUFsQixDQUEwQixLQUFLVCxFQUEvQixLQUFzQyxFQUE3QyxDQUNELENBSE8sRUFkRyxFQW1CYlUsT0FBTyxFQUFFLEVBQ1BDLFNBRE8sdUJBQ0ssQ0FDVixJQUFJQyxLQUFLLEdBQUcsSUFBWixDQUNBLElBQU1DLEdBQUcsR0FBRyxFQUNWQyxLQUFLLEVBQUUsQ0FERyxFQUNBO0FBQ1ZDLGdCQUFRLEVBQUUsQ0FBQyxVQUFELEVBQWEsWUFBYixDQUZBLEVBRTRCO0FBQ3RDQyxrQkFBVSxFQUFFLENBQUMsT0FBRCxDQUhGLEVBR2E7QUFDdkJDLGVBQU8sRUFBRSxpQkFBVUMsR0FBVixFQUFlLENBQ3RCLElBQUlDLFlBQVksR0FBR0QsR0FBRyxDQUFDRSxhQUFKLENBQWtCLENBQWxCLENBQW5CLENBQ0EsSUFBSUMsR0FBRyxHQUFHQyxrQkFBVUMsTUFBVixDQUFpQkMsS0FBakIsQ0FBdUIsR0FBdkIsQ0FBVixDQUNBLElBQUlDLEtBQUssR0FBRzNCLEdBQUcsQ0FBQ0MsSUFBSixDQUFTMkIsT0FBVCxDQUFpQkMsV0FBN0IsQ0FIc0IsQ0FJdEI7QUFDQTdCLGFBQUcsQ0FBQzhCLFVBQUosQ0FBZSxFQUNiQyxHQUFHLFlBQUtQLGtCQUFVUSxNQUFmLGNBQXlCVCxHQUFHLENBQUMsQ0FBRCxDQUE1QixjQUFtQ0EsR0FBRyxDQUFDLENBQUQsQ0FBdEMsZUFEVSxFQUViVSxRQUFRLEVBQUVaLFlBRkcsRUFHYmEsSUFBSSxFQUFFLE1BSE8sRUFJYkMsTUFBTSxFQUFFO0FBQ05DLDJCQUFhLG1CQUFZVCxLQUFaLENBRFAsRUFKSzs7QUFPYlIsbUJBUGEsbUJBT0xDLEdBUEssRUFPQTtBQUNYLGtCQUFJaUIsRUFBRSxHQUFHQyxJQUFJLENBQUNDLEtBQUwsQ0FBV25CLEdBQUcsQ0FBQ3ZCLElBQWYsQ0FBVDtBQUNBLGtCQUFJMkMsSUFBSSxHQUFHSCxFQUFFLENBQUNJLFFBQUgsQ0FBWSxDQUFaLEVBQWVELElBQTFCO0FBQ0Esa0JBQUlFLE1BQU0sYUFBTUwsRUFBRSxDQUFDTSxHQUFULGNBQWdCSCxJQUFoQixDQUFWO0FBQ0E7QUFDQSxrQkFBTUksTUFBTSxHQUFHQyxtQkFBTUMsT0FBTixDQUFjQyxNQUFkLENBQXFCO0FBQ2xDQyx3QkFBUSxFQUFFLFlBRHdCO0FBRWxDQyxvQkFBSSxFQUFFQyxpQkFBU0MsR0FGbUI7QUFHbENwQixtQkFBRyxFQUFFVyxNQUg2QjtBQUlsQ3hDLGtCQUFFLEVBQUVZLEtBQUssQ0FBQ1osRUFKd0IsRUFBckIsQ0FBZjs7QUFNQUYsaUJBQUcsQ0FBQ0MsSUFBSixDQUFTbUQsSUFBVCxDQUFjUixNQUFkLEVBQXNCUyxJQUF0QixDQUEyQixVQUFDakMsR0FBRCxFQUFTO0FBQ2xDTixxQkFBSyxDQUFDTCxNQUFOLENBQWE2QyxNQUFiLENBQW9CLGFBQXBCLEVBQW1DO0FBQ2pDQyxxQkFBRyxFQUFFekMsS0FBSyxDQUFDWixFQURzQjtBQUVqQ0oscUJBQUcsRUFBRThDLE1BRjRCLEVBQW5DOztBQUlELGVBTEQ7QUFNRCxhQXhCWSxFQUFmOztBQTBCRCxTQW5DUyxFQUFaOzs7QUFzQ0E1QyxTQUFHLENBQUN3RCxXQUFKLENBQWdCekMsR0FBaEI7QUFDRCxLQTFDTTtBQTJDUDBDLGVBM0NPLHlCQTJDTztBQUNaLFVBQUlDLE9BQU8sR0FBR2IsbUJBQU1DLE9BQU4sQ0FBY0MsTUFBZCxDQUFxQjtBQUNqQ0MsZ0JBQVEsRUFBRSxZQUR1QjtBQUVqQ2xELFdBQUcsRUFBRSxLQUFLQSxHQUZ1QjtBQUdqQ0ksVUFBRSxFQUFFLEtBQUtBLEVBSHdCO0FBSWpDK0MsWUFBSSxFQUFFQyxpQkFBU1MsR0FKa0IsRUFBckIsQ0FBZDs7QUFNQTNELFNBQUcsQ0FBQ0MsSUFBSixDQUFTbUQsSUFBVCxDQUFjTSxPQUFkLEVBQXVCTCxJQUF2QixDQUE0QixVQUFDakMsR0FBRCxFQUFTO0FBQ25DLGNBQUksQ0FBQ1gsTUFBTCxDQUFZNkMsTUFBWixDQUFtQixhQUFuQixFQUFrQztBQUNoQ0MsYUFBRyxFQUFFLE1BQUksQ0FBQ3JELEVBRHNCO0FBRWhDSixhQUFHLEVBQUU0RCxPQUYyQixFQUFsQzs7QUFJQSxjQUFJLENBQUM1RCxHQUFMLEdBQVcsRUFBWDtBQUNELE9BTkQ7QUFPRCxLQXpETSxFQW5CSSxFIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuXG5pbXBvcnQgd2ViSU0gZnJvbSBcIi4uLy4uL3Nkay91bmlhcHAtc2RrLTQuMS4yXCI7XG5pbXBvcnQgeyBJTV9DT05GSUcgfSBmcm9tIFwiLi4vLi4vdXRpbHMvaW5pdEltXCI7XG5pbXBvcnQgeyBNU0dfVFlQRSB9IGZyb20gXCIuLi8uLi9jb25zdHNcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBtc2c6IFwiXCIsXG4gICAgICB1c2VyOiB1bmkuY29ubi51c2VyLFxuICAgICAgdG86IFwiXCJcbiAgICB9O1xuICB9LFxuICBvbkxvYWQoZSkge1xuICAgIHRoaXMudG8gPSBlLnRvO1xuICAgIHVuaS5zZXROYXZpZ2F0aW9uQmFyVGl0bGUoe1xuICAgICAgdGl0bGU6IGUudG9cbiAgICB9KTtcbiAgfSxcbiAgY29tcHV0ZWQ6IHtcbiAgICBjaGF0TXNnKCkge1xuICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmNoYXRNYXBbdGhpcy50b10gfHwgW107XG4gICAgfVxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgc2VsZWN0SW1nKCkge1xuICAgICAgbGV0IF90aGlzID0gdGhpcztcbiAgICAgIGNvbnN0IG9wdCA9IHtcbiAgICAgICAgY291bnQ6IDEsIC8vIOm7mOiupDlcbiAgICAgICAgc2l6ZVR5cGU6IFtcIm9yaWdpbmFsXCIsIFwiY29tcHJlc3NlZFwiXSwgLy8g5Y+v5Lul5oyH5a6a5piv5Y6f5Zu+6L+Y5piv5Y6L57yp5Zu+77yM6buY6K6k5LqM6ICF6YO95pyJXG4gICAgICAgIHNvdXJjZVR5cGU6IFtcImFsYnVtXCJdLCAvLyDku47nm7jlhozpgInmi6lcbiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgIGxldCB0ZW1wRmlsZVBhdGggPSByZXMudGVtcEZpbGVQYXRoc1swXTtcbiAgICAgICAgICB2YXIgc3RyID0gSU1fQ09ORklHLmFwcEtleS5zcGxpdChcIiNcIik7XG4gICAgICAgICAgdmFyIHRva2VuID0gdW5pLmNvbm4uY29udGV4dC5hY2Nlc3NUb2tlbjtcbiAgICAgICAgICAvLyDkuIrkvKDmlofku7ZcbiAgICAgICAgICB1bmkudXBsb2FkRmlsZSh7XG4gICAgICAgICAgICB1cmw6IGAke0lNX0NPTkZJRy5hcGlVcmx9LyR7c3RyWzBdfS8ke3N0clsxXX0vY2hhdGZpbGVzYCxcbiAgICAgICAgICAgIGZpbGVQYXRoOiB0ZW1wRmlsZVBhdGgsXG4gICAgICAgICAgICBuYW1lOiBcImZpbGVcIixcbiAgICAgICAgICAgIGhlYWRlcjoge1xuICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dG9rZW59YFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN1Y2Nlc3MocmVzKSB7XG4gICAgICAgICAgICAgIGxldCBkdCA9IEpTT04ucGFyc2UocmVzLmRhdGEpO1xuICAgICAgICAgICAgICBsZXQgdXVpZCA9IGR0LmVudGl0aWVzWzBdLnV1aWQ7XG4gICAgICAgICAgICAgIGxldCBpbWdVcmwgPSBgJHtkdC51cml9LyR7dXVpZH1gO1xuICAgICAgICAgICAgICAvLyBXZWLnq6/pnIDopoHlnKggV2ViSU1Db25maWcuanPkuK0g6K6+572uIHVzZU93blVwbG9hZEZ1bjogdHJ1ZVxuICAgICAgICAgICAgICBjb25zdCBpbWdNc2cgPSB3ZWJJTS5tZXNzYWdlLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgY2hhdFR5cGU6IFwic2luZ2xlQ2hhdFwiLFxuICAgICAgICAgICAgICAgIHR5cGU6IE1TR19UWVBFLmltZyxcbiAgICAgICAgICAgICAgICB1cmw6IGltZ1VybCxcbiAgICAgICAgICAgICAgICB0bzogX3RoaXMudG9cbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIHVuaS5jb25uLnNlbmQoaW1nTXNnKS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICBfdGhpcy4kc3RvcmUuY29tbWl0KFwicHVzaE1lc3NhZ2VcIiwge1xuICAgICAgICAgICAgICAgICAgdWlkOiBfdGhpcy50byxcbiAgICAgICAgICAgICAgICAgIG1zZzogaW1nTXNnXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICB1bmkuY2hvb3NlSW1hZ2Uob3B0KTtcbiAgICB9LFxuICAgIHNlbmRUZXh0TXNnKCkge1xuICAgICAgbGV0IHRleHRNc2cgPSB3ZWJJTS5tZXNzYWdlLmNyZWF0ZSh7XG4gICAgICAgIGNoYXRUeXBlOiBcInNpbmdsZUNoYXRcIixcbiAgICAgICAgbXNnOiB0aGlzLm1zZyxcbiAgICAgICAgdG86IHRoaXMudG8sXG4gICAgICAgIHR5cGU6IE1TR19UWVBFLnR4dFxuICAgICAgfSk7XG4gICAgICB1bmkuY29ubi5zZW5kKHRleHRNc2cpLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoXCJwdXNoTWVzc2FnZVwiLCB7XG4gICAgICAgICAgdWlkOiB0aGlzLnRvLFxuICAgICAgICAgIG1zZzogdGV4dE1zZ1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5tc2cgPSBcIlwiO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/*!**********************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/sdk/uniapp-sdk-4.1.2.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(wx, __f__) {!function (e, t) { true ? module.exports = t() : undefined;}(this, function () {return function () {var e = { 5491: function _(e, t, r) {var o, n, i;!function (a) {\"use strict\";if (null != t && \"number\" != typeof t.nodeType) e.exports = a();else if (null != r.amdO) n = [], void 0 === (i = \"function\" == typeof (o = a) ? o.apply(t, n) : o) || (e.exports = i);else {var s = a(),c = \"undefined\" != typeof self ? self : $.global;\"function\" != typeof c.btoa && (c.btoa = s.btoa), \"function\" != typeof c.atob && (c.atob = s.atob);}}(function () {\"use strict\";var e = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";function t(e) {this.message = e;}return t.prototype = new Error(), t.prototype.name = \"InvalidCharacterError\", { btoa: function btoa(r) {for (var o, n, i = String(r), a = 0, s = e, c = \"\"; i.charAt(0 | a) || (s = \"=\", a % 1); c += s.charAt(63 & o >> 8 - a % 1 * 8)) {if ((n = i.charCodeAt(a += 3 / 4)) > 255) throw new t(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");o = o << 8 | n;}return c;}, atob: function atob(r) {var o = String(r).replace(/[=]+$/, \"\");if (o.length % 4 == 1) throw new t(\"'atob' failed: The string to be decoded is not correctly encoded.\");for (var n, i, a = 0, s = 0, c = \"\"; i = o.charAt(s++); ~i && (n = a % 4 ? 64 * n + i : i, a++ % 4) ? c += String.fromCharCode(255 & n >> (-2 * a & 6)) : 0) {i = e.indexOf(i);}return c;} };});}, 9168: function _(e) {e.exports = r;var t = null;try {t = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;} catch (e) {}function r(e, t, r) {this.low = 0 | e, this.high = 0 | t, this.unsigned = !!r;}function o(e) {return !0 === (e && e.__isLong__);}r.prototype.__isLong__, Object.defineProperty(r.prototype, \"__isLong__\", { value: !0 }), r.isLong = o;var n = {},i = {};function a(e, t) {var r, o, a;return t ? (a = 0 <= (e >>>= 0) && e < 256) && (o = i[e]) ? o : (r = c(e, (0 | e) < 0 ? -1 : 0, !0), a && (i[e] = r), r) : (a = -128 <= (e |= 0) && e < 128) && (o = n[e]) ? o : (r = c(e, e < 0 ? -1 : 0, !1), a && (n[e] = r), r);}function s(e, t) {if (isNaN(e)) return t ? g : E;if (t) {if (e < 0) return g;if (e >= h) return R;} else {if (e <= -f) return O;if (e + 1 >= f) return v;}return e < 0 ? s(-e, t).neg() : c(e % d | 0, e / d | 0, t);}function c(e, t, o) {return new r(e, t, o);}r.fromInt = a, r.fromNumber = s, r.fromBits = c;var u = Math.pow;function l(e, t, r) {if (0 === e.length) throw Error(\"empty string\");if (\"NaN\" === e || \"Infinity\" === e || \"+Infinity\" === e || \"-Infinity\" === e) return E;if (\"number\" == typeof t ? (r = t, t = !1) : t = !!t, (r = r || 10) < 2 || 36 < r) throw RangeError(\"radix\");var o;if ((o = e.indexOf(\"-\")) > 0) throw Error(\"interior hyphen\");if (0 === o) return l(e.substring(1), t, r).neg();for (var n = s(u(r, 8)), i = E, a = 0; a < e.length; a += 8) {var c = Math.min(8, e.length - a),p = parseInt(e.substring(a, a + c), r);if (c < 8) {var d = s(u(r, c));i = i.mul(d).add(s(p));} else i = (i = i.mul(n)).add(s(p));}return i.unsigned = t, i;}function p(e, t) {return \"number\" == typeof e ? s(e, t) : \"string\" == typeof e ? l(e, t) : c(e.low, e.high, \"boolean\" == typeof t ? t : e.unsigned);}r.fromString = l, r.fromValue = p;var d = 4294967296,h = d * d,f = h / 2,m = a(1 << 24),E = a(0);r.ZERO = E;var g = a(0, !0);r.UZERO = g;var y = a(1);r.ONE = y;var T = a(1, !0);r.UONE = T;var _ = a(-1);r.NEG_ONE = _;var v = c(-1, 2147483647, !1);r.MAX_VALUE = v;var R = c(-1, -1, !0);r.MAX_UNSIGNED_VALUE = R;var O = c(0, -2147483648, !1);r.MIN_VALUE = O;var I = r.prototype;I.toInt = function () {return this.unsigned ? this.low >>> 0 : this.low;}, I.toNumber = function () {return this.unsigned ? (this.high >>> 0) * d + (this.low >>> 0) : this.high * d + (this.low >>> 0);}, I.toString = function (e) {if ((e = e || 10) < 2 || 36 < e) throw RangeError(\"radix\");if (this.isZero()) return \"0\";if (this.isNegative()) {if (this.eq(O)) {var t = s(e),r = this.div(t),o = r.mul(t).sub(this);return r.toString(e) + o.toInt().toString(e);}return \"-\" + this.neg().toString(e);}for (var n = s(u(e, 6), this.unsigned), i = this, a = \"\";;) {var c = i.div(n),l = (i.sub(c.mul(n)).toInt() >>> 0).toString(e);if ((i = c).isZero()) return l + a;for (; l.length < 6;) {l = \"0\" + l;}a = \"\" + l + a;}}, I.getHighBits = function () {return this.high;}, I.getHighBitsUnsigned = function () {return this.high >>> 0;}, I.getLowBits = function () {return this.low;}, I.getLowBitsUnsigned = function () {return this.low >>> 0;}, I.getNumBitsAbs = function () {if (this.isNegative()) return this.eq(O) ? 64 : this.neg().getNumBitsAbs();for (var e = 0 != this.high ? this.high : this.low, t = 31; t > 0 && 0 == (e & 1 << t); t--) {;}return 0 != this.high ? t + 33 : t + 1;}, I.isZero = function () {return 0 === this.high && 0 === this.low;}, I.eqz = I.isZero, I.isNegative = function () {return !this.unsigned && this.high < 0;}, I.isPositive = function () {return this.unsigned || this.high >= 0;}, I.isOdd = function () {return 1 == (1 & this.low);}, I.isEven = function () {return 0 == (1 & this.low);}, I.equals = function (e) {return o(e) || (e = p(e)), (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low;}, I.eq = I.equals, I.notEquals = function (e) {return !this.eq(e);}, I.neq = I.notEquals, I.ne = I.notEquals, I.lessThan = function (e) {return this.comp(e) < 0;}, I.lt = I.lessThan, I.lessThanOrEqual = function (e) {return this.comp(e) <= 0;}, I.lte = I.lessThanOrEqual, I.le = I.lessThanOrEqual, I.greaterThan = function (e) {return this.comp(e) > 0;}, I.gt = I.greaterThan, I.greaterThanOrEqual = function (e) {return this.comp(e) >= 0;}, I.gte = I.greaterThanOrEqual, I.ge = I.greaterThanOrEqual, I.compare = function (e) {if (o(e) || (e = p(e)), this.eq(e)) return 0;var t = this.isNegative(),r = e.isNegative();return t && !r ? -1 : !t && r ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1;}, I.comp = I.compare, I.negate = function () {return !this.unsigned && this.eq(O) ? O : this.not().add(y);}, I.neg = I.negate, I.add = function (e) {o(e) || (e = p(e));var t = this.high >>> 16,r = 65535 & this.high,n = this.low >>> 16,i = 65535 & this.low,a = e.high >>> 16,s = 65535 & e.high,u = e.low >>> 16,l = 0,d = 0,h = 0,f = 0;return h += (f += i + (65535 & e.low)) >>> 16, d += (h += n + u) >>> 16, l += (d += r + s) >>> 16, l += t + a, c((h &= 65535) << 16 | (f &= 65535), (l &= 65535) << 16 | (d &= 65535), this.unsigned);}, I.subtract = function (e) {return o(e) || (e = p(e)), this.add(e.neg());}, I.sub = I.subtract, I.multiply = function (e) {if (this.isZero()) return E;if (o(e) || (e = p(e)), t) return c(t.mul(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);if (e.isZero()) return E;if (this.eq(O)) return e.isOdd() ? O : E;if (e.eq(O)) return this.isOdd() ? O : E;if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();if (e.isNegative()) return this.mul(e.neg()).neg();if (this.lt(m) && e.lt(m)) return s(this.toNumber() * e.toNumber(), this.unsigned);var r = this.high >>> 16,n = 65535 & this.high,i = this.low >>> 16,a = 65535 & this.low,u = e.high >>> 16,l = 65535 & e.high,d = e.low >>> 16,h = 65535 & e.low,f = 0,g = 0,y = 0,T = 0;return y += (T += a * h) >>> 16, g += (y += i * h) >>> 16, y &= 65535, g += (y += a * d) >>> 16, f += (g += n * h) >>> 16, g &= 65535, f += (g += i * d) >>> 16, g &= 65535, f += (g += a * l) >>> 16, f += r * h + n * d + i * l + a * u, c((y &= 65535) << 16 | (T &= 65535), (f &= 65535) << 16 | (g &= 65535), this.unsigned);}, I.mul = I.multiply, I.divide = function (e) {if (o(e) || (e = p(e)), e.isZero()) throw Error(\"division by zero\");var r, n, i;if (t) return this.unsigned || -2147483648 !== this.high || -1 !== e.low || -1 !== e.high ? c((this.unsigned ? t.div_u : t.div_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned) : this;if (this.isZero()) return this.unsigned ? g : E;if (this.unsigned) {if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return g;if (e.gt(this.shru(1))) return T;i = g;} else {if (this.eq(O)) return e.eq(y) || e.eq(_) ? O : e.eq(O) ? y : (r = this.shr(1).div(e).shl(1)).eq(E) ? e.isNegative() ? y : _ : (n = this.sub(e.mul(r)), i = r.add(n.div(e)));if (e.eq(O)) return this.unsigned ? g : E;if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();if (e.isNegative()) return this.div(e.neg()).neg();i = E;}for (n = this; n.gte(e);) {r = Math.max(1, Math.floor(n.toNumber() / e.toNumber()));for (var a = Math.ceil(Math.log(r) / Math.LN2), l = a <= 48 ? 1 : u(2, a - 48), d = s(r), h = d.mul(e); h.isNegative() || h.gt(n);) {h = (d = s(r -= l, this.unsigned)).mul(e);}d.isZero() && (d = y), i = i.add(d), n = n.sub(h);}return i;}, I.div = I.divide, I.modulo = function (e) {return o(e) || (e = p(e)), t ? c((this.unsigned ? t.rem_u : t.rem_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned) : this.sub(this.div(e).mul(e));}, I.mod = I.modulo, I.rem = I.modulo, I.not = function () {return c(~this.low, ~this.high, this.unsigned);}, I.and = function (e) {return o(e) || (e = p(e)), c(this.low & e.low, this.high & e.high, this.unsigned);}, I.or = function (e) {return o(e) || (e = p(e)), c(this.low | e.low, this.high | e.high, this.unsigned);}, I.xor = function (e) {return o(e) || (e = p(e)), c(this.low ^ e.low, this.high ^ e.high, this.unsigned);}, I.shiftLeft = function (e) {return o(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? c(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : c(0, this.low << e - 32, this.unsigned);}, I.shl = I.shiftLeft, I.shiftRight = function (e) {return o(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? c(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : c(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);}, I.shr = I.shiftRight, I.shiftRightUnsigned = function (e) {if (o(e) && (e = e.toInt()), 0 == (e &= 63)) return this;var t = this.high;return e < 32 ? c(this.low >>> e | t << 32 - e, t >>> e, this.unsigned) : c(32 === e ? t : t >>> e - 32, 0, this.unsigned);}, I.shru = I.shiftRightUnsigned, I.shr_u = I.shiftRightUnsigned, I.toSigned = function () {return this.unsigned ? c(this.low, this.high, !1) : this;}, I.toUnsigned = function () {return this.unsigned ? this : c(this.low, this.high, !0);}, I.toBytes = function (e) {return e ? this.toBytesLE() : this.toBytesBE();}, I.toBytesLE = function () {var e = this.high,t = this.low;return [255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24];}, I.toBytesBE = function () {var e = this.high,t = this.low;return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t];}, r.fromBytes = function (e, t, o) {return o ? r.fromBytesLE(e, t) : r.fromBytesBE(e, t);}, r.fromBytesLE = function (e, t) {return new r(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, t);}, r.fromBytesBE = function (e, t) {return new r(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], t);};}, 8939: function _(e, t, r) {\"use strict\";r.r(t), r.d(t, { addUsersToChatRoom: function addUsersToChatRoom() {return y;}, addUsersToChatRoomAllowlist: function addUsersToChatRoomAllowlist() {return V;}, addUsersToChatRoomWhitelist: function addUsersToChatRoomWhitelist() {return K;}, blockChatRoomMember: function blockChatRoomMember() {return P;}, blockChatRoomMembers: function blockChatRoomMembers() {return D;}, chatRoomBlockMulti: function chatRoomBlockMulti() {return L;}, chatRoomBlockSingle: function chatRoomBlockSingle() {return w;}, createChatRoom: function createChatRoom() {return l;}, deleteChatRoomSharedFile: function deleteChatRoomSharedFile() {return ne;}, destroyChatRoom: function destroyChatRoom() {return p;}, disableSendChatRoomMsg: function disableSendChatRoomMsg() {return Z;}, enableSendChatRoomMsg: function enableSendChatRoomMsg() {return q;}, fetchChatRoomAnnouncement: function fetchChatRoomAnnouncement() {return te;}, fetchChatRoomSharedFileList: function fetchChatRoomSharedFileList() {return ie;}, getChatRoomAdmin: function getChatRoomAdmin() {return I;}, getChatRoomAllowlist: function getChatRoomAllowlist() {return Q;}, getChatRoomAttributes: function getChatRoomAttributes() {return se;}, getChatRoomBlacklist: function getChatRoomBlacklist() {return F;}, getChatRoomBlacklistNew: function getChatRoomBlacklistNew() {return H;}, getChatRoomBlocklist: function getChatRoomBlocklist() {return W;}, getChatRoomDetails: function getChatRoomDetails() {return d;}, getChatRoomMuteList: function getChatRoomMuteList() {return U;}, getChatRoomMuted: function getChatRoomMuted() {return M;}, getChatRoomMutelist: function getChatRoomMutelist() {return k;}, getChatRoomSharedFilelist: function getChatRoomSharedFilelist() {return ae;}, getChatRoomWhitelist: function getChatRoomWhitelist() {return Y;}, getChatRooms: function getChatRooms() {return u;}, isChatRoomWhiteUser: function isChatRoomWhiteUser() {return $;}, isInChatRoomAllowlist: function isInChatRoomAllowlist() {return ee;}, joinChatRoom: function joinChatRoom() {return T;}, leaveChatRoom: function leaveChatRoom() {return v;}, listChatRoomMember: function listChatRoomMember() {return R;}, listChatRoomMembers: function listChatRoomMembers() {return O;}, modifyChatRoom: function modifyChatRoom() {return h;}, muteChatRoomMember: function muteChatRoomMember() {return C;}, quitChatRoom: function quitChatRoom() {return _;}, removeChatRoomAdmin: function removeChatRoomAdmin() {return N;}, removeChatRoomAllowlistMember: function removeChatRoomAllowlistMember() {return X;}, removeChatRoomAttribute: function removeChatRoomAttribute() {return pe;}, removeChatRoomAttributes: function removeChatRoomAttributes() {return le;}, removeChatRoomBlockMulti: function removeChatRoomBlockMulti() {return x;}, removeChatRoomBlockSingle: function removeChatRoomBlockSingle() {return G;}, removeChatRoomMember: function removeChatRoomMember() {return m;}, removeChatRoomMembers: function removeChatRoomMembers() {return g;}, removeChatRoomWhitelistMember: function removeChatRoomWhitelistMember() {return z;}, removeMultiChatRoomMember: function removeMultiChatRoomMember() {return E;}, removeMuteChatRoomMember: function removeMuteChatRoomMember() {return A;}, removeSingleChatRoomMember: function removeSingleChatRoomMember() {return f;}, rmUsersFromChatRoomWhitelist: function rmUsersFromChatRoomWhitelist() {return J;}, setChatRoomAdmin: function setChatRoomAdmin() {return S;}, setChatRoomAttribute: function setChatRoomAttribute() {return ue;}, setChatRoomAttributes: function setChatRoomAttributes() {return ce;}, unblockChatRoomMember: function unblockChatRoomMember() {return j;}, unblockChatRoomMembers: function unblockChatRoomMembers() {return B;}, unmuteChatRoomMember: function unmuteChatRoomMember() {return b;}, updateChatRoomAnnouncement: function updateChatRoomAnnouncement() {return re;}, uploadChatRoomSharedFile: function uploadChatRoomSharedFile() {return oe;} });var o = r(8185),n = r(1560),i = r(4605),a = r(5888),s = r(1972),c = r(5699);function u(e) {var t = this;if (\"number\" != typeof e.pagenum || \"number\" != typeof e.pagesize) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var r = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(r);}var u = { pagenum: e.pagenum || 1, pagesize: e.pagesize || 20 },l = this.context,p = l.orgName,d = l.appName,h = l.accessToken,f = { url: this.apiUrl + \"/\" + p + \"/\" + d + \"/chatrooms\", dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + h }, data: u, success: function success(t) {\"function\" == typeof e.success && e.success(t);}, error: function error(r) {r.error && r.error_description && t.onError && t.onError({ type: o.E.WEBIM_CONNCTION_LOAD_CHATROOM_ERROR, message: r.error_description, data: r }), \"function\" == typeof e.error && e.error(r);} };return s.kg.debug(\"Call getChatRooms\", e), i.hj.call(this, f, c.fI.GET_CHATROOM_LIST);}function l(e) {if (\"string\" != typeof e.name) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = { name: e.name, description: e.description, maxusers: e.maxusers, owner: this.user, members: e.members },u = this.context,l = u.orgName,p = u.appName,d = (u.accessToken, u.jid),h = { url: \"\".concat(this.apiUrl, \"/\").concat(l, \"/\").concat(p, \"/chatrooms?resource=\").concat(d.clientResource), dataType: \"json\", type: \"POST\", data: JSON.stringify(r), headers: { Authorization: \"Bearer \" + e.token || false, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call createChatRoom\", e), i.hj.call(this, h, c.fI.CREATE_CHATROOM);}function p(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = (r.accessToken, r.jid),d = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(e.chatRoomId, \"?resource=\").concat(p.clientResource), dataType: \"json\", type: \"DELETE\", headers: { Authorization: \"Bearer \" + e.token || false }, success: e.success, error: e.error };return s.kg.debug(\"Call destroyChatRoom\", e), i.hj.call(this, d, c.fI.DESTROY_CHATROOM);}function d(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatrooms/\" + e.chatRoomId, dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getChatRoomDetails\", e), i.hj.call(this, d, c.fI.GET_CHATROOM_DETAIL);}function h(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = { groupname: e.chatRoomName, description: e.description, maxusers: e.maxusers },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"?resource=\").concat(d.clientResource), type: \"PUT\", data: JSON.stringify(f), dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call modifyChatRoom\", e), i.hj.call(this, m, c.fI.MODIFY_CHATROOM);}function f(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId || \"string\" != typeof e.username) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = e.username,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/users/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call removeChatRoomMember\", e), i.hj.call(this, m, c.fI.REMOVE_CHATROOM_MEMBER);}var m = f;function E(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId || !Array.isArray(e.users)) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = e.chatRoomId,u = e.users.join(\",\"),l = this.context,p = l.orgName,d = l.appName,h = l.accessToken,f = l.jid,m = { url: \"\".concat(this.apiUrl, \"/\").concat(p, \"/\").concat(d, \"/chatrooms/\").concat(r, \"/users/\").concat(u, \"?resource=\").concat(f.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + h, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call removeChatRoomMembers\", e), i.hj.call(this, m, c.fI.MULTI_REMOVE_CHATROOM_MEMBER);}var g = E;function y(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId || !Array.isArray(e.users)) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = e.chatRoomId,u = { usernames: e.users },l = this.context,p = l.orgName,d = l.appName,h = l.accessToken,f = l.jid,m = { url: \"\".concat(this.apiUrl, \"/\").concat(p, \"/\").concat(d, \"/chatrooms/\").concat(r, \"/users?resource=\").concat(f.clientResource), type: \"POST\", data: JSON.stringify(u), dataType: \"json\", headers: { Authorization: \"Bearer \" + h, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call addUsersToChatRoom\", e), i.hj.call(this, m, c.fI.ADD_USERS_TO_CHATROOM);}function T(e) {if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(e.roomId, \"/apply?resource=\").concat(d.clientResource), dataType: \"json\", type: \"POST\", data: JSON.stringify({ message: e.message || \"\" }), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call joinChatRoom\", e), i.hj.call(this, h, c.fI.JOIN_CHATROOM);}function _(e) {var t = this;if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var r = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(r);}var u = this.context,l = u.orgName,p = u.appName,d = u.accessToken,h = u.jid,f = { url: \"\".concat(this.apiUrl, \"/\").concat(l, \"/\").concat(p, \"/chatrooms/\").concat(e.roomId, \"/quit?resource=\").concat(h.clientResource), dataType: \"json\", type: \"DELETE\", headers: { Authorization: \"Bearer \" + d }, success: function success(r) {t._load_msg_cache = t._load_msg_cache.filter(function (t) {return (!t.isGroup || t.to !== e.roomId) && t;}), \"function\" == typeof e.success && e.success(r);}, error: e.error };return s.kg.debug(\"Call leaveChatRoom\", e), i.hj.call(this, f, c.fI.QUIT_CHATROOM);}var v = _;function R(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (isNaN(e.pageNum) || e.pageNum <= 0) throw Error('The parameter \"pageNum\" should be a positive number');if (isNaN(e.pageSize) || e.pageSize <= 0) throw Error('The parameter \"pageSize\" should be a positive number');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = { pagenum: e.pageNum, pagesize: e.pageSize },u = this.context,l = u.orgName,p = u.appName,d = u.accessToken,h = { url: this.apiUrl + \"/\" + l + \"/\" + p + \"/chatrooms/\" + e.chatRoomId + \"/users\", dataType: \"json\", type: \"GET\", data: r, headers: { Authorization: \"Bearer \" + d, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call listChatRoomMembers\", e), i.hj.call(this, h, c.fI.LIST_CHATROOM_MEMBERS);}var O = R;function I(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.chatRoomId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatrooms/\" + d + \"/admin\", dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getChatRoomAdmin\", e), i.hj.call(this, h, c.fI.GET_CHATROOM_ADMIN);}function S(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = { newadmin: e.username },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/admin?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify(f), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call setChatRoomAdmin\", e), i.hj.call(this, m, c.fI.SET_CHATROOM_ADMIN);}function N(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = e.username,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/admin/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call removeChatRoomAdmin\", e), i.hj.call(this, m, c.fI.REMOVE_CHATROOM_ADMIN);}function C(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (\"number\" != typeof e.muteDuration) throw Error('Invalid parameter: \"muteDuration\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = { usernames: [e.username], mute_duration: e.muteDuration },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/mute?resource=\").concat(d.clientResource), dataType: \"json\", type: \"POST\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, data: JSON.stringify(f), success: e.success, error: e.error };return s.kg.debug(\"Call muteChatRoomMember\", e), i.hj.call(this, m, c.fI.MUTE_CHATROOM_MEMBER);}function A(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = e.username,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/mute/\").concat(f, \"?resource=\").concat(d.clientResource), dataType: \"json\", type: \"DELETE\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call unmuteChatRoomMember\", e), i.hj.call(this, m, c.fI.REMOVE_MUTE_CHATROOM_MEMBER);}var b = A;function M(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.chatRoomId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatrooms/\" + d + \"/mute\", dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getChatRoomMutelist\", e), i.hj.call(this, h, c.fI.GET_MUTE_CHATROOM_MEMBERS);}var U = M,k = M;function w(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = e.username,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/blocks/users/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call blockChatRoomMember\", e), i.hj.call(this, m, c.fI.SET_CHATROOM_MEMBER_TO_BLACK);}var P = w;function L(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = { usernames: e.usernames },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/blocks/users?resource=\").concat(d.clientResource), data: JSON.stringify(f), type: \"POST\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Chat blockChatRoomMembers:\", m), i.hj.call(this, m, c.fI.MULTI_SET_CHATROOM_MEMBER_TO_BLACK);}var D = L;function G(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = e.username,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/blocks/users/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call unblockChatRoomMember\", e), i.hj.call(this, m, c.fI.REMOVE_CHATROOM_MEMBER_BLACK);}var j = G;function x(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = e.usernames.join(\",\"),m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/blocks/users/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call unblockChatRoomMembers\", e), i.hj.call(this, m, c.fI.MULTI_REMOVE_CHATROOM_MEMBER_BLACK);}var B = x;function H(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.chatRoomId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatrooms/\" + d + \"/blocks/users\", type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getChatRoomBlocklist\", e), i.hj.call(this, h, c.fI.GET_CHATROOM_BLOCK_MEMBERS);}var F = H,W = H;function Z(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/ban?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call disableSendChatRoomMsg\", e), i.hj.call(this, f, c.fI.DISABLED_CHATROOM_SEND_MSG);}function q(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/ban?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call enableSendChatRoomMsg\", e), i.hj.call(this, f, c.fI.ENABLE_CHATROOM_SEND_MSG);}function K(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (!Array.isArray(e.users)) throw Error('Invalid parameter: \"users\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = { usernames: e.users },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/white/users?resource=\").concat(d.clientResource), type: \"POST\", data: JSON.stringify(f), dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call addUsersToChatRoomWhitelist\", e), i.hj.call(this, m, c.fI.ADD_USERS_TO_CHATROOM);}var V = K;function J(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (\"string\" != typeof e.userName || \"\" === e.userName) throw Error('Invalid parameter: \"userName\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.chatRoomId,f = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/white/users/\").concat(e.userName, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call removeChatRoomAllowlistMember\", e), i.hj.call(this, f, c.fI.REMOVE_CHATROOM_WHITE_USERS);}var z = J,X = J;function Y(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.chatRoomId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatrooms/\" + d + \"/white/users\", type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getChatRoomAllowlist\", e), i.hj.call(this, h, c.fI.GET_CHATROOM_WHITE_USERS);}var Q = Y;function $(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error('Invalid parameter: \"chatRoomId\"');if (\"string\" != typeof e.userName || \"\" === e.userName) throw Error('Invalid parameter: \"userName\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.chatRoomId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatrooms/\" + d + \"/white/users/\" + e.userName, type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call isInChatRoomAllowlist\", e), i.hj.call(this, h, c.fI.CHECK_CHATROOM_WHITE_USER);}var ee = $;function te(e) {if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.roomId,h = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(d, \"/announcement\"), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call fetchChatRoomAnnouncement\", e), i.hj.call(this, h, c.fI.GET_CHATROOM_ANN);}function re(e) {if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');if (\"string\" != typeof e.announcement) throw Error('Invalid parameter: \"announcement\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.roomId,f = { announcement: e.announcement },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/announcement?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify(f), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call updateChatRoomAnnouncement:\", e), i.hj.call(this, m, c.fI.UPDATE_CHATROOM_ANN);}function oe(e) {if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');if (\"object\" != typeof e.file) throw Error('Invalid parameter: \"file\"');if (a.XZ.call(this)) {var t = this.context,r = t.orgName,o = t.appName,n = t.accessToken,u = t.jid,l = e.roomId;i.cT.call(this, { uploadUrl: \"\".concat(this.apiUrl, \"/\").concat(r, \"/\").concat(o, \"/chatrooms/\").concat(l, \"/share_files?resource=\").concat(u.clientResource), onFileUploadProgress: e.onFileUploadProgress, onFileUploadComplete: e.onFileUploadComplete, onFileUploadError: e.onFileUploadError, onFileUploadCanceled: e.onFileUploadCanceled, accessToken: n, apiUrl: this.apiUrl, file: e.file, appKey: this.context.appKey }, c.fI.UPLOAD_CHATROOM_FILE), s.kg.debug(\"Call uploadChatRoomSharedFile\", e);}}function ne(e) {if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');if (\"string\" != typeof e.fileId || \"\" === e.fileId) throw Error('Invalid parameter: \"fileId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.roomId,f = e.fileId,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(h, \"/share_files/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call deleteChatRoomSharedFile\", e), i.hj.call(this, m, c.fI.DELETE_CHATROOM_FILE);}function ie(e) {if (\"string\" != typeof e.roomId || \"\" === e.roomId) throw Error('Invalid parameter: \"roomId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.roomId,h = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatrooms/\").concat(d, \"/share_files\"), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\", accept: \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call fetchChatRoomSharedFileList\", e), i.hj.call(this, h, c.fI.GET_CHATROOM_FILES);}var ae = ie;function se(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);if (e.attributeKeys && !Array.isArray(e.attributeKeys)) throw Error('\"Invalid parameter attributeKeys\": ' + e.attributeKeys);if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.orgName,u = r.appName,l = r.accessToken,p = (r.jid, e.chatRoomId),d = { keys: e.attributeKeys },h = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/metadata/chatroom/\").concat(p), type: \"POST\", dataType: \"json\", data: JSON.stringify(d), headers: { Authorization: \"Bearer \" + l, \"Content-Type\": \"application/json\" } };return s.kg.debug(\"Call getChatRoomAttributes:\", e), i.hj.call(this, h).then(function (e) {return { data: e.data, type: e.type };});}function ce(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);if (\"object\" != typeof e.attributes) throw Error(\"Invalid parameter attributes: \" + e.attributes);if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.orgName,u = r.appName,l = r.accessToken,p = r.userId,d = e.chatRoomId,h = e.attributes,f = e.autoDelete,m = void 0 === f || f,E = e.isForced ? \"/forced\" : \"\",g = { metaData: h, autoDelete: m ? \"DELETE\" : \"NO_DELETE\" },y = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/metadata/chatroom/\").concat(d, \"/user/\").concat(p) + E, type: \"PUT\", dataType: \"json\", data: JSON.stringify(g), headers: { Authorization: \"Bearer \" + l, \"Content-Type\": \"application/json\" } };return s.kg.debug(\"Call setChatRoomAttributes:\", e), i.hj.call(this, y).then(function (e) {return (0, a._W)(e);});}function ue(e) {var t;if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);if (\"string\" != typeof e.attributeKey || \"\" === e.attributeKey) throw Error(\"Invalid parameter attributeKey: \" + e.attributeKey);if (\"string\" != typeof e.attributeValue || \"\" === e.attributeValue) throw Error(\"Invalid parameter attributeValue: \" + e.attributeValue);if (!a.XZ.call(this)) {var r = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(r);}var c = this.context,u = c.orgName,l = c.appName,p = c.accessToken,d = c.userId,h = e.chatRoomId,f = e.attributeKey,m = e.attributeValue,E = e.autoDelete,g = void 0 === E || E,y = e.isForced ? \"/forced\" : \"\",T = { metaData: (t = {}, t[f] = m, t), autoDelete: g ? \"DELETE\" : \"NO_DELETE\" },_ = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/metadata/chatroom/\").concat(h, \"/user/\").concat(d) + y, type: \"PUT\", dataType: \"json\", data: JSON.stringify(T), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" } };return s.kg.debug(\"Call setChatRoomAttribute:\", e), i.hj.call(this, _).then(function (e) {var t = (0, a.H7)(e);if (t) throw t;});}function le(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);if (!Array.isArray(e.attributeKeys)) throw Error('\"Invalid parameter attributes\": ' + e.attributeKeys);if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.orgName,u = r.appName,l = r.accessToken,p = r.userId,d = e.chatRoomId,h = e.attributeKeys,f = e.isForced ? \"/forced\" : \"\",m = { keys: h },E = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/metadata/chatroom/\").concat(d, \"/user/\").concat(p) + f, type: \"DELETE\", dataType: \"json\", data: JSON.stringify(m), headers: { Authorization: \"Bearer \" + l, \"Content-Type\": \"application/json\" } };return s.kg.debug(\"Call removeChatRoomAttributes:\", e), i.hj.call(this, E).then(function (e) {return (0, a._W)(e);});}function pe(e) {if (\"string\" != typeof e.chatRoomId || \"\" === e.chatRoomId) throw Error(\"Invalid parameter chatRoomId: \" + e.chatRoomId);if (\"string\" != typeof e.attributeKey || \"\" === e.attributeKey) throw Error('\"Invalid parameter attributeKey\": ' + e.attributeKey);if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.orgName,u = r.appName,l = r.accessToken,p = r.userId,d = e.chatRoomId,h = e.attributeKey,f = e.isForced ? \"/forced\" : \"\",m = { keys: [h] },E = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/metadata/chatroom/\").concat(d, \"/user/\").concat(p) + f, type: \"DELETE\", dataType: \"json\", data: JSON.stringify(m), headers: { Authorization: \"Bearer \" + l, \"Content-Type\": \"application/json\" } };return s.kg.debug(\"Call removeChatRoomAttribute:\", e), i.hj.call(this, E).then(function (e) {var t = (0, a.H7)(e);if (t) throw t;});}}, 1541: function _(e, t, r) {\"use strict\";r.d(t, { w: function w() {return i;} });var o = r(1972),_n = function n() {return _n = Object.assign || function (e) {for (var t, r = 1, o = arguments.length; r < o; r++) {for (var n in t = arguments[r]) {Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);}}return e;}, _n.apply(this, arguments);};function i(e) {var t,r,i = e.id,a = e.payload,s = e.timestamp,c = e.to,u = a.bodies && a.bodies.length > 0 ? a.bodies[0] : {},l = {},p = {},d = a.type ? a.type : c.indexOf(\"@conference.easemob.com\") > -1 ? \"groupChat\" : \"singleChat\";switch (u.type) {case \"txt\":l = { id: i, type: \"txt\", chatType: d, msg: u.msg || \"\", to: a.to || \"\", from: a.from, time: s, ext: a.ext };break;case \"img\":l = { id: i, type: \"img\", chatType: d, to: a.to, from: a.from, time: s, ext: a.ext, width: (null === (t = u.size) || void 0 === t ? void 0 : t.width) || 0, height: (null === (r = u.size) || void 0 === r ? void 0 : r.height) || 0, secret: u.secret || \"\", url: (null == u ? void 0 : u.url) || \"\", file: {} };break;case \"video\":l = { id: i, type: \"video\", chatType: d, from: a.from, to: a.to, url: (null == u ? void 0 : u.url) || \"\", secret: u.secret || \"\", filename: u.filename, length: u.length || 0, file: {}, file_length: u.fileLength || 0, filetype: a.ext.file_type || \"\", ext: a.ext, time: s };break;case \"loc\":l = { id: i, type: \"loc\", chatType: d, from: a.from, to: a.to, buildingName: u.buildingName || \"\", addr: u.addr, lat: u.lat, lng: u.lng, ext: a.ext, time: s };break;case \"audio\":l = { id: i, type: \"audio\", chatType: d, from: a.from, to: a.to, secret: u.secret || \"\", ext: a.ext, time: s, url: (null == u ? void 0 : u.url) || \"\", file: {}, filename: u.filename, length: a.ext.duration || 0, file_length: u.fileLength || 0, filetype: a.ext.file_type || \"\" };break;case \"file\":l = { id: i, type: \"file\", chatType: d, from: a.from, to: a.to, ext: a.ext, time: s, url: (null == u ? void 0 : u.url) || \"\", secret: u.secret || \"\", file: {}, filename: u.filename || \"\", length: u.length || 0, file_length: u.file_length || 0, filetype: a.ext.file_type || \"\" };break;case \"cmd\":l = { id: i, type: \"cmd\", chatType: d, from: a.from, to: a.to, ext: a.ext, time: s, action: u.action || \"\" };break;case \"custom\":l = { id: i, type: \"custom\", chatType: d, from: a.from, to: a.to, ext: a.ext, time: s, customEvent: u.customEvent || \"\" };break;default:o.kg.error(\"unexpected message: \".concat(e));}if (a.msgConfig && (p.msgConfig = a.msgConfig), null == a ? void 0 : a.meta) {var h = a.meta;h.thread && (p.chatThread = { messageId: h.thread.msg_parent_id, parentId: h.thread.muc_parent_id, chatThreadName: h.thread.thread_name }), h.reactions && (p.reactions = h.reactions), h.translations && (p.translations = h.translations);}return _n(_n({}, l), p);}}, 5759: function _(e, t, r) {\"use strict\";r.r(t), r.d(t, { acceptGroupInvite: function acceptGroupInvite() {return B;}, acceptGroupJoinRequest: function acceptGroupJoinRequest() {return D;}, addUsersToGroupAllowlist: function addUsersToGroupAllowlist() {return fe;}, addUsersToGroupWhitelist: function addUsersToGroupWhitelist() {return he;}, agreeInviteIntoGroup: function agreeInviteIntoGroup() {return x;}, agreeJoinGroup: function agreeJoinGroup() {return L;}, blockGroup: function blockGroup() {return p;}, blockGroupMember: function blockGroupMember() {return te;}, blockGroupMembers: function blockGroupMembers() {return oe;}, blockGroupMessages: function blockGroupMessages() {return d;}, changeGroupOwner: function changeGroupOwner() {return y;}, changeOwner: function changeOwner() {return g;}, createGroup: function createGroup() {return l;}, createGroupNew: function createGroupNew() {return u;}, deleteGroupSharedFile: function deleteGroupSharedFile() {return Ce;}, destroyGroup: function destroyGroup() {return b;}, disableSendGroupMsg: function disableSendGroupMsg() {return pe;}, dissolveGroup: function dissolveGroup() {return A;}, downloadGroupSharedFile: function downloadGroupSharedFile() {return Me;}, enableSendGroupMsg: function enableSendGroupMsg() {return de;}, fetchGroupAnnouncement: function fetchGroupAnnouncement() {return Ie;}, fetchGroupSharedFileList: function fetchGroupSharedFileList() {return Ae;}, getGroup: function getGroup() {return m;}, getGroupAdmin: function getGroupAdmin() {return O;}, getGroupAllowlist: function getGroupAllowlist() {return Te;}, getGroupBlacklist: function getGroupBlacklist() {return ue;}, getGroupBlacklistNew: function getGroupBlacklistNew() {return ce;}, getGroupBlocklist: function getGroupBlocklist() {return le;}, getGroupInfo: function getGroupInfo() {return T;}, getGroupMsgReadUser: function getGroupMsgReadUser() {return Oe;}, getGroupMuteList: function getGroupMuteList() {return Q;}, getGroupMutelist: function getGroupMutelist() {return $;}, getGroupSharedFilelist: function getGroupSharedFilelist() {return be;}, getGroupWhitelist: function getGroupWhitelist() {return ye;}, getJoinedGroups: function getJoinedGroups() {return E;}, getMuted: function getMuted() {return Y;}, getPublicGroups: function getPublicGroups() {return f;}, groupBlockMulti: function groupBlockMulti() {return re;}, groupBlockSingle: function groupBlockSingle() {return ee;}, inviteToGroup: function inviteToGroup() {return k;}, inviteUsersToGroup: function inviteUsersToGroup() {return w;}, isGroupWhiteUser: function isGroupWhiteUser() {return _e;}, isInGroupAllowlist: function isInGroupAllowlist() {return Re;}, isInGroupWhiteList: function isInGroupWhiteList() {return ve;}, joinGroup: function joinGroup() {return P;}, leaveGroup: function leaveGroup() {return U;}, listGroupMember: function listGroupMember() {return v;}, listGroupMembers: function listGroupMembers() {return R;}, listGroups: function listGroups() {return h;}, modifyGroup: function modifyGroup() {return _;}, mute: function mute() {return V;}, muteGroupMember: function muteGroupMember() {return J;}, quitGroup: function quitGroup() {return M;}, rejectGroupInvite: function rejectGroupInvite() {return F;}, rejectGroupJoinRequest: function rejectGroupJoinRequest() {return j;}, rejectInviteIntoGroup: function rejectInviteIntoGroup() {return H;}, rejectJoinGroup: function rejectJoinGroup() {return G;}, removeAdmin: function removeAdmin() {return N;}, removeGroupAdmin: function removeGroupAdmin() {return C;}, removeGroupAllowlistMember: function removeGroupAllowlistMember() {return ge;}, removeGroupBlockMulti: function removeGroupBlockMulti() {return ae;}, removeGroupBlockSingle: function removeGroupBlockSingle() {return ne;}, removeGroupMember: function removeGroupMember() {return Z;}, removeGroupMembers: function removeGroupMembers() {return K;}, removeGroupWhitelistMember: function removeGroupWhitelistMember() {return Ee;}, removeMultiGroupMember: function removeMultiGroupMember() {return q;}, removeMute: function removeMute() {return z;}, removeSingleGroupMember: function removeSingleGroupMember() {return W;}, rmUsersFromGroupWhitelist: function rmUsersFromGroupWhitelist() {return me;}, setAdmin: function setAdmin() {return I;}, setGroupAdmin: function setGroupAdmin() {return S;}, unblockGroupMember: function unblockGroupMember() {return ie;}, unblockGroupMembers: function unblockGroupMembers() {return se;}, unmuteGroupMember: function unmuteGroupMember() {return X;}, updateGroupAnnouncement: function updateGroupAnnouncement() {return Se;}, uploadGroupSharedFile: function uploadGroupSharedFile() {return Ne;} });var o = r(8185),n = r(1560),i = r(4605),a = r(5888),s = r(1972),c = r(5699);function u(e) {if (!e || !e.data) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups?resource=\").concat(d.clientResource), dataType: \"json\", type: \"POST\", data: JSON.stringify({ owner: this.user, groupname: e.data.groupname, desc: e.data.desc, members: e.data.members, public: e.data.public, approval: e.data.approval, allowinvites: e.data.allowinvites, invite_need_confirm: e.data.inviteNeedConfirm, maxusers: e.data.maxusers, custom: e.data.ext }), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: function success(t) {e.success && e.success(t);}, error: e.error };return s.kg.debug(\"Call createGroup:\", e), i.hj.call(this, h, c.fI.CREATE_GROUP);}var l = u;function p(e) {var t;if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var r = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(r);}var u = this.context,l = u.orgName,p = u.appName,d = u.accessToken,h = u.jid,f = { entities: [(t = {}, t[\"notification_ignore_\" + e.groupId] = !0, t)] },m = { type: \"PUT\", url: \"\".concat(this.apiUrl, \"/\").concat(l, \"/\").concat(p, \"/users/\").concat(this.user, \"?resource=\").concat(h.clientResource), data: JSON.stringify(f), dataType: \"json\", headers: { Authorization: \"Bearer \" + d, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call blockGroupMessages\", e), i.hj.call(this, m, c.fI.BLOCK_GROUP);}var d = p;function h(e) {if (\"number\" != typeof e.limit) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = { limit: e.limit, cursor: e.cursor };e.cursor || delete d.cursor;var h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/publicchatgroups\", type: \"GET\", dataType: \"json\", data: d, headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call listGroups\", e), i.hj.call(this, h, c.fI.LIST_GROUP);}var f = h;function m(e) {if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/users/\" + this.user + \"/joined_chatgroups\", dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e && (null == e ? void 0 : e.success), error: e && (null == e ? void 0 : e.error) };return s.kg.debug(\"Call getJoinedGroups\", e), i.hj.call(this, d, c.fI.GET_USER_GROUP);}function E(e) {if (\"number\" != typeof e.pageNum || \"number\" != typeof e.pageSize) throw Error('Invalid parameter: \"pageNum or pageSize\"');if (e.pageNum < 0 || e.pageSize < 0) throw Error('\"pageNum\" should >= 0 and \"pageSize\" should >= 0');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.needAffiliations || e.needRole ? \"/chatgroups/user/\".concat(this.user, \"?pagenum=\").concat(e.pageNum, \"&pagesize=\").concat(e.pageSize, \"&needAffiliations=\").concat(e.needAffiliations, \"&needRole=\").concat(e.needRole) : \"/users/\".concat(this.user, \"/joined_chatgroups?pagenum=\").concat(e.pageNum, \"&pagesize=\").concat(e.pageSize),h = { url: this.apiUrl + \"/\" + u + \"/\" + l + d, dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e && (null == e ? void 0 : e.success), error: e && (null == e ? void 0 : e.error) };return s.kg.debug(\"Call getGroup\", e), i.hj.call(this, h, c.fI.GET_USER_GROUP).then(function (e) {var t = e.uri,r = e.entities,o = [];return t.includes(\"joined_chatgroups\") || (r.forEach(function (e) {var t = { affiliationsCount: e.affiliations_count, groupName: e.name, groupId: e.groupId, role: e.permission, disabled: e.disabled, approval: e.membersonly, allowInvites: e.allowinvites, description: e.description, maxUsers: e.maxusers, public: e.public };o.push(t);}), e.entities = o), e;});}function g(e) {if (\"string\" != typeof e.groupId || \"string\" != typeof e.newOwner) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = { newowner: e.newOwner },u = this.context,l = u.orgName,p = u.appName,d = u.accessToken,h = u.jid,f = { url: \"\".concat(this.apiUrl, \"/\").concat(l, \"/\").concat(p, \"/chatgroups/\").concat(e.groupId, \"?resource=\").concat(h.clientResource), type: \"PUT\", dataType: \"json\", headers: { Authorization: \"Bearer \" + d, \"Content-Type\": \"application/json\" }, data: JSON.stringify(r), success: e.success, error: e.error };return s.kg.debug(\"Call changeOwner\", e), i.hj.call(this, f, c.fI.CHANGE_OWNER);}var y = g;function T(e) {if (\"string\" != typeof e.groupId && !Array.isArray(e.groupId)) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatgroups/\" + e.groupId + \"?joined_time=true\", type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getGroupInfo\", e), i.hj.call(this, d, c.fI.GET_GROUP_INFO);}function _(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error(\"Invalid parameter\");if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { groupname: e.groupName, description: e.description, custom: e.ext },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"?resource=\").concat(d.clientResource), type: \"PUT\", data: JSON.stringify(f), dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call modifyGroup\", e), i.hj.call(this, m, c.fI.MODIFY_GROUP);}function v(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (isNaN(e.pageNum) || e.pageNum <= 0) throw Error('The parameter \"pageNum\" should be a positive number');if (isNaN(e.pageSize) || e.pageSize <= 0) throw Error('The parameter \"pageSize\" should be a positive number');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = { pagenum: e.pageNum, pagesize: e.pageSize },u = this.context,l = u.orgName,p = u.appName,d = u.accessToken,h = { url: this.apiUrl + \"/\" + l + \"/\" + p + \"/chatgroups/\" + e.groupId + \"/users\", dataType: \"json\", type: \"GET\", data: r, headers: { Authorization: \"Bearer \" + d, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call listGroupMember\", e), i.hj.call(this, h, c.fI.LIST_GROUP_MEMBER);}var R = v;function O(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.groupId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatgroups/\" + d + \"/admin\", dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getGroupAdmin\", e), i.hj.call(this, h, c.fI.GET_GROUP_ADMIN);}function I(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { newadmin: e.username },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/admin?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify(f), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call setGroupAdmin\", e), i.hj.call(this, m, c.fI.SET_GROUP_ADMIN);}var S = I;function N(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = e.username,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/admin/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call removeAdmin\", e), i.hj.call(this, m, c.fI.REMOVE_GROUP_ADMIN);}var C = N;function A(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"?version=v3&resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call destroyGroup\", e), i.hj.call(this, f, c.fI.DISSOLVE_GROUP);}var b = A;function M(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/quit?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call quitGroup\", e), i.hj.call(this, f, c.fI.QUIT_GROUP);}var U = M;function k(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!Array.isArray(e.users)) throw Error('Invalid parameter: \"users\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = e.groupId,u = { usernames: e.users },l = this.context,p = l.orgName,d = l.appName,h = l.accessToken,f = l.jid,m = { url: \"\".concat(this.apiUrl, \"/\").concat(p, \"/\").concat(d, \"/chatgroups/\").concat(r, \"/invite?resource=\").concat(f.clientResource), type: \"POST\", data: JSON.stringify(u), dataType: \"json\", headers: { Authorization: \"Bearer \" + h, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call inviteUsersToGroup\", e), i.hj.call(this, m, c.fI.INVITE_TO_GROUP);}var w = k;function P(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(e.groupId, \"/apply?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify({ message: e.message || \"\" }), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call joinGroup\", e), i.hj.call(this, h, c.fI.JOIN_GROUP);}function L(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.applicant || \"\" === e.applicant) throw Error('Invalid parameter: \"applicant\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { applicant: e.applicant, verifyResult: !0, reason: \"no clue\" },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/apply_verify?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify(f), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call agreeJoinGroup\", e), i.hj.call(this, m, c.fI.AGREE_JOIN_GROUP);}var D = L;function G(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.applicant || \"\" === e.applicant) throw Error('Invalid parameter: \"applicant\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { applicant: e.applicant, verifyResult: !1, reason: e.reason || \"\" },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/apply_verify?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify(f), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call rejectGroupJoinRequest\", e), i.hj.call(this, m, c.fI.REJECT_JOIN_GROUP);}var j = G;function x(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.invitee || \"\" === e.invitee) throw Error('Invalid parameter: \"invitee\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { invitee: e.invitee, verifyResult: !0 },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/invite_verify?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify(f), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call acceptGroupInvite\", e), i.hj.call(this, m, c.fI.AGREE_INVITE_GROUP);}var B = x;function H(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.invitee || \"\" === e.invitee) throw Error('Invalid parameter: \"invitee\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { invitee: e.invitee, verifyResult: !1 },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/invite_verify?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify(f), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call rejectGroupInvite\", e), i.hj.call(this, m, c.fI.REJECT_INVITE_GROUP);}var F = H;function W(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = e.groupId,u = e.username,l = this.context,p = l.orgName,d = l.appName,h = l.accessToken,f = l.jid,m = { url: \"\".concat(this.apiUrl, \"/\").concat(p, \"/\").concat(d, \"/chatgroups/\").concat(r, \"/users/\").concat(u, \"?resource=\").concat(f.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + h, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call removeGroupMember\", e), i.hj.call(this, m, c.fI.REMOVE_GROUP_MEMBER);}var Z = W;function q(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!Array.isArray(e.users)) throw Error('Invalid parameter: \"users\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = e.users.join(\",\"),m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/users/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call removeGroupMembers\", e), i.hj.call(this, m, c.fI.MULTI_REMOVE_GROUP_MEMBER);}var K = q;function V(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!(Array.isArray(e.username) || \"string\" == typeof e.username && \"\" !== e.username)) throw Error('Invalid parameter: \"username\"');if (\"number\" != typeof e.muteDuration) throw Error('Invalid parameter: \"muteDuration\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { usernames: \"string\" == typeof e.username ? [e.username] : e.username, mute_duration: e.muteDuration },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/mute?resource=\").concat(d.clientResource), dataType: \"json\", type: \"POST\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, data: JSON.stringify(f), success: e.success, error: e.error };return s.kg.debug(\"Call muteGroupMember\", e), i.hj.call(this, m, c.fI.MUTE_GROUP_MEMBER);}var J = V;function z(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!(Array.isArray(e.username) || \"string\" == typeof e.username && \"\" !== e.username)) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = e.username,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/mute/\").concat(f, \"?resource=\").concat(d.clientResource), dataType: \"json\", type: \"DELETE\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call unmuteGroupMember\", e), i.hj.call(this, m, c.fI.UNMUTE_GROUP_MEMBER);}var X = z;function Y(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.groupId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatgroups/\" + d + \"/mute\", dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getGroupMuteList\", e), i.hj.call(this, h, c.fI.GET_GROUP_MUTE_LIST);}var Q = Y,$ = Y;function ee(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = e.username,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/blocks/users/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call blockGroupMember\", e), i.hj.call(this, m, c.fI.BLOCK_GROUP_MEMBER);}var te = ee;function re(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { usernames: e.usernames },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/blocks/users?resource=\").concat(d.clientResource), data: JSON.stringify(f), type: \"POST\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call blockGroupMembers\", e), i.hj.call(this, m, c.fI.BLOCK_GROUP_MEMBERS);}var oe = re;function ne(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.username || \"\" === e.username) throw Error('Invalid parameter: \"username\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = e.username,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/blocks/users/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call unblockGroupMember\", e), i.hj.call(this, m, c.fI.UNBLOCK_GROUP_MEMBER);}var ie = ne;function ae(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = e.usernames.join(\",\"),m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/blocks/users/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call unblockGroupMembers\", e), i.hj.call(this, m, c.fI.UNBLOCK_GROUP_MEMBERS);}var se = ae;function ce(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.groupId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatgroups/\" + d + \"/blocks/users\", type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getGroupBlacklist\", e), i.hj.call(this, h, c.fI.GET_GROUP_BLACK_LIST);}var ue = ce,le = ce;function pe(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/ban?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call disableSendGroupMsg\", e), i.hj.call(this, f, c.fI.DISABLED_SEND_GROUP_MSG);}function de(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/ban?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call enableSendGroupMsg\", e), i.hj.call(this, f, c.fI.ENABLE_SEND_GROUP_MSG);}function he(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!Array.isArray(e.users)) throw Error('Invalid parameter: \"users\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { usernames: e.users },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/white/users?resource=\").concat(d.clientResource), type: \"POST\", data: JSON.stringify(f), dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call addUsersToGroupWhitelist\", e), i.hj.call(this, m, c.fI.ADD_USERS_TO_GROUP_WHITE);}var fe = he;function me(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.userName || \"\" === e.userName) throw Error('Invalid parameter: \"userName\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/white/users/\").concat(e.userName, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call removeGroupAllowlistMember\", e), i.hj.call(this, f, c.fI.REMOVE_GROUP_WHITE_MEMBER);}var Ee = me,ge = me;function ye(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.groupId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatgroups/\" + d + \"/white/users\", type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getGroupAllowlist\", e), i.hj.call(this, h, c.fI.GET_GROUP_WHITE_LIST);}var Te = ye;function _e(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.userName || \"\" === e.userName) throw Error('Invalid parameter: \"userName\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.groupId,h = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatgroups/\" + d + \"/white/users/\" + e.userName, type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call isInGroupAllowlist\", e), i.hj.call(this, h, c.fI.IS_IN_GROUP_WHITE_LIST);}var ve = _e,Re = _e;function Oe(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.msgId || \"\" === e.msgId) throw Error('Invalid parameter: \"msgId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = { url: this.apiUrl + \"/\" + u + \"/\" + l + \"/chatgroups/\" + e.groupId + \"/acks/\" + e.msgId, dataType: \"json\", type: \"GET\", data: { limit: 500, key: void 0 }, headers: { Authorization: \"Bearer \" + p }, success: e.success, error: e.error };return s.kg.debug(\"Call getGroupMsgReadUser\", e), i.hj.call(this, d, c.fI.GET_GROUP_MSG_READ_USER);}function Ie(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.groupId,h = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(d, \"/announcement\"), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call fetchGroupAnnouncement\", e), i.hj.call(this, h, c.fI.GET_GROUP_ANN);}function Se(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.announcement) throw Error('Invalid parameter: \"announcement\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = { announcement: e.announcement },m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/announcement?resource=\").concat(d.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify(f), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call updateGroupAnnouncement\", e), i.hj.call(this, m, c.fI.UPDATE_GROUP_ANN);}function Ne(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"object\" != typeof e.file) throw Error('Invalid parameter: \"file\"');if (a.XZ.call(this)) {var t = this.context,r = t.orgName,o = t.appName,n = t.accessToken,u = t.jid,l = e.groupId;i.cT.call(this, { uploadUrl: \"\".concat(this.apiUrl, \"/\").concat(r, \"/\").concat(o, \"/chatgroups/\").concat(l, \"/share_files?resource=\").concat(u.clientResource), onFileUploadProgress: e.onFileUploadProgress, onFileUploadComplete: e.onFileUploadComplete, onFileUploadError: e.onFileUploadError, onFileUploadCanceled: e.onFileUploadCanceled, accessToken: n, apiUrl: this.apiUrl, file: e.file, appKey: this.context.appKey }, c.fI.UPLOAD_GROUP_FILE), s.kg.debug(\"Call uploadGroupSharedFile\", e);}}function Ce(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (\"string\" != typeof e.fileId || \"\" === e.fileId) throw Error('Invalid parameter: \"file\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = r.jid,h = e.groupId,f = e.fileId,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(h, \"/share_files/\").concat(f, \"?resource=\").concat(d.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call deleteGroupSharedFile\", e), i.hj.call(this, m, c.fI.DELETE_GROUP_FILE);}function Ae(e) {if (\"string\" != typeof e.groupId || \"\" === e.groupId) throw Error('Invalid parameter: \"groupId\"');if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,u = r.orgName,l = r.appName,p = r.accessToken,d = e.pageNum || 1,h = e.pageSize || 10,f = e.groupId,m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/chatgroups/\").concat(f, \"/share_files?pagenum=\").concat(d, \"&pagesize=\").concat(h), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getGroupSharedFilelist\", e), i.hj.call(this, m, c.fI.GET_GROUP_FILE_LIST);}var be = Ae;function Me(e) {var t = this.context,r = t.orgName,o = t.appName,n = t.accessToken,a = this.apiUrl,u = e.groupId,l = e.fileId;i.LR.call(this, { url: \"\".concat(a, \"/\").concat(r, \"/\").concat(o, \"/chatgroups/\").concat(u, \"/share_files/\").concat(l), onFileDownloadComplete: e.onFileDownloadComplete, onFileDownloadError: e.onFileDownloadError, accessToken: n, id: l, secret: e.secret }, c.fI.DOWN_GROUP_FILE), s.kg.debug(\"Call downloadGroupSharedFile\", e);}}, 9855: function _(e, t, r) {\"use strict\";r.r(t), r.d(t, { acceptContactInvite: function acceptContactInvite() {return x;}, acceptInvitation: function acceptInvitation() {return j;}, addContact: function addContact() {return L;}, addReaction: function addReaction() {return z;}, addToBlackList: function addToBlackList() {return F;}, addUsersToBlacklist: function addUsersToBlacklist() {return W;}, addUsersToBlocklist: function addUsersToBlocklist() {return Z;}, declineContactInvite: function declineContactInvite() {return H;}, declineInvitation: function declineInvitation() {return B;}, deleteContact: function deleteContact() {return G;}, deleteConversation: function deleteConversation() {return N;}, deleteReaction: function deleteReaction() {return X;}, deleteSession: function deleteSession() {return S;}, fetchHistoryMessages: function fetchHistoryMessages() {return k;}, fetchUserInfoById: function fetchUserInfoById() {return b;}, getBlacklist: function getBlacklist() {return g;}, getBlocklist: function getBlocklist() {return y;}, getChatToken: function getChatToken() {return U;}, getContacts: function getContacts() {return _;}, getConversationlist: function getConversationlist() {return I;}, getHistoryMessages: function getHistoryMessages() {return P;}, getReactionDetail: function getReactionDetail() {return $;}, getReactionList: function getReactionList() {return Y;}, getReactionlist: function getReactionlist() {return Q;}, getRoster: function getRoster() {return T;}, getSessionList: function getSessionList() {return O;}, recallMessage: function recallMessage() {return J;}, removeFromBlackList: function removeFromBlackList() {return q;}, removeHistoryMessages: function removeHistoryMessages() {return te;}, removeRoster: function removeRoster() {return D;}, removeUserFromBlackList: function removeUserFromBlackList() {return K;}, removeUserFromBlocklist: function removeUserFromBlocklist() {return V;}, reportMessage: function reportMessage() {return ee;}, updateCurrentUserNick: function updateCurrentUserNick() {return M;}, updateOwnUserInfo: function updateOwnUserInfo() {return C;}, updateUserInfo: function updateUserInfo() {return A;}, uploadPushToken: function uploadPushToken() {return R;}, uploadToken: function uploadToken() {return v;} });var o = r(5888),n = r(8185),i = r(1560),a = r(4605),s = r(3886),c = r(5719),u = r(5491),l = r.n(u),p = r(1972),d = r(5699),h = r(1541),_f = function f() {return _f = Object.assign || function (e) {for (var t, r = 1, o = arguments.length; r < o; r++) {for (var n in t = arguments[r]) {Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);}}return e;}, _f.apply(this, arguments);},m = function m(e, t, r, o) {return new (r || (r = Promise))(function (n, i) {function a(e) {try {c(o.next(e));} catch (e) {i(e);}}function s(e) {try {c(o.throw(e));} catch (e) {i(e);}}function c(e) {var t;e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {e(t);})).then(a, s);}c((o = o.apply(e, t || [])).next());});},E = function E(e, t) {var r,o,n,i,a = { label: 0, sent: function sent() {if (1 & n[0]) throw n[1];return n[1];}, trys: [], ops: [] };return i = { next: s(0), throw: s(1), return: s(2) }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {return this;}), i;function s(i) {return function (s) {return function (i) {if (r) throw new TypeError(\"Generator is already executing.\");for (; a;) {try {if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {case 0:case 1:n = i;break;case 4:return a.label++, { value: i[1], done: !1 };case 5:a.label++, o = i[1], i = [0];continue;case 7:i = a.ops.pop(), a.trys.pop();continue;default:if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {a = 0;continue;}if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {a.label = i[1];break;}if (6 === i[0] && a.label < n[1]) {a.label = n[1], n = i;break;}if (n && a.label < n[2]) {a.label = n[2], a.ops.push(i);break;}n[2] && a.ops.pop(), a.trys.pop();continue;}i = t.call(e, a);} catch (e) {i = [6, e], o = 0;} finally {r = n = 0;}}if (5 & i[0]) throw i[1];return { value: i[0] ? i[1] : void 0, done: !0 };}([i, s]);};}};function g(e) {if (!o.XZ.call(this)) {var t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = { url: this.apiUrl + \"/\" + s + \"/\" + c + \"/users/\" + this.user + \"/blocks/users\", dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + u }, success: function success(t) {var r = {};t.data.forEach(function (e) {r[e] = { name: e };}), \"function\" == typeof (null == e ? void 0 : e.success) && e.success(t);}, error: function error(t) {\"function\" == typeof (null == e ? void 0 : e.error) && e.error(t);} };return p.kg.debug(\"Call getBlocklist\"), a.hj.call(this, l, d.fI.GET_BLACK_LIST);}var y = g,T = _;function _(e) {var t = this;if (!o.XZ.call(this)) {var r = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(r);}var s = this.context,c = s.orgName,u = s.appName,l = s.accessToken,h = { url: this.apiUrl + \"/\" + c + \"/\" + u + \"/users/\" + this.user + \"/contacts/users\", dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + l }, success: function success(r) {var o = [];r.data.forEach(function (e) {o.push({ name: e, subscription: \"both\", jid: t.context.jid });}), \"function\" == typeof (null == e ? void 0 : e.success) && e.success(o);}, error: function error(t) {\"function\" == typeof (null == e ? void 0 : e.error) && e.error(t);} };return p.kg.debug(\"Call getContacts\"), a.hj.call(this, h, d.fI.GET_CONTACTS);}function v(e) {if (\"string\" != typeof e.deviceId || \"\" === e.deviceId) throw Error('Invalid parameter: \"deviceId\"');if (\"string\" != typeof e.deviceToken || \"\" === e.deviceToken) throw Error('Invalid parameter: \"deviceToken\"');if (\"string\" != typeof e.notifierName || \"\" === e.notifierName) throw Error('Invalid parameter: \"notifierName\"');if (!o.XZ.call(this)) {var t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/users/\").concat(this.user), type: \"PUT\", data: JSON.stringify({ device_id: e.deviceId, device_token: e.deviceToken, notifier_name: e.notifierName }), dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return p.kg.debug(\"Call uploadPushToken\", e), a.hj.call(this, l, d.fI.UPLOAD_PUSH_TOKEN);}var R = v;function O(e) {if (!o.XZ.call(this)) {var t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/users/\").concat(this.user, \"/user_channels\"), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" }, success: e && (null == e ? void 0 : e.success), error: e && (null == e ? void 0 : e.error) };return p.kg.debug(\"Call getSessionList\"), a.hj.call(this, l, d.fI.GET_SESSION_LIST);}function I(e) {if (!o.XZ.call(this)) {var t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/users/\").concat(this.user, \"/user_channels\"), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" }, success: e && (null == e ? void 0 : e.success), error: e && (null == e ? void 0 : e.error) };return p.kg.debug(\"Call getConversationlist\"), a.hj.call(this, l, d.fI.GET_SESSION_LIST).then(function (e) {return function (e) {var t = e.data.channel_infos;return null == t || t.forEach(function (e) {e.meta && \"{}\" !== JSON.stringify(e.meta) ? (e.meta.payload = JSON.parse(e.meta.payload), e.lastMessage = (0, h.w)(e.meta)) : e.lastMessage = e.meta, delete e.meta;}), e;}(e);});}function S(e) {if (e && \"string\" != typeof e.channel) throw Error(\"Invalid parameter channel: \".concat(e.channel));if (e && \"singleChat\" !== e.chatType && \"groupChat\" !== e.chatType) throw Error(\"Invalid parameter chatType: \".concat(e.chatType));if (e && \"boolean\" != typeof e.deleteRoam) throw Error(\"Invalid parameter deleteRoam: \".concat(e.deleteRoam));if (!o.XZ.call(this)) {var t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r,s = this.context,c = s.orgName,u = s.appName,l = s.accessToken;r = \"singleChat\" === e.chatType ? \"chat\" : \"groupChat\";var h = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/users/\").concat(this.user, \"/user_channel\"), dataType: \"json\", type: \"DELETE\", data: JSON.stringify({ channel: e.channel, type: r, delete_roam: e.deleteRoam }), headers: { Authorization: \"Bearer \" + l, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return p.kg.debug(\"Call deleteSession\", e), a.hj.call(this, h, d.fI.DELETE_SESSION);}var N = S;function C(e, t) {if (!o.XZ.call(this)) {var r = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(r);}var s = this.context,c = s.orgName,u = s.appName,l = s.accessToken,h = [\"nickname\", \"avatarurl\", \"mail\", \"phone\", \"gender\", \"sign\", \"birth\", \"ext\"],f = {};if (\"undefined\" != typeof wx || \"undefined\" != typeof qq) {if (\"string\" == typeof e && void 0 !== t) {if (!h.includes(e)) throw new Error(\"illegal key, only these keys: nickname, avatarurl, mail, phone, gender, sign, birth, ext are allowed\");f[e] = t;} else {if (\"[object Object]\" !== Object.prototype.toString.call(e)) throw new Error(\"illegal params\");h.forEach(function (t) {h.includes(t) && void 0 !== e[t] && (f[t] = e[t]);});}} else if (\"string\" == typeof e) {if (!h.includes(e)) throw new Error(\"illegal key, only these keys: nickname, avatarurl, mail, phone, gender, sign, birth, ext are allowed\");f = e + \"=\" + t;} else {if (\"[object Object]\" !== Object.prototype.toString.call(e)) throw new Error(\"illegal params\");var m = [];h.forEach(function (t) {if (h.includes(t) && void 0 !== e[t]) {var r = encodeURIComponent(t),o = encodeURIComponent(e[t]);m.push(r + \"=\" + o);}}), f = m.join(\"&\");}var E = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/metadata/user/\").concat(this.user), type: \"PUT\", data: f, dataType: \"json\", headers: { Authorization: \"Bearer \" + l, \"Content-Type\": \"application/x-www-form-urlencoded\" } };return p.kg.debug(\"Call updateOwnUserInfo\", e), a.hj.call(this, E, d.fI.UPDATE_USER_INFO);}var A = C;function b(e, t) {if (!o.XZ.call(this)) {var r = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(r);}var s,c = this.context,u = c.orgName,l = c.appName,h = c.accessToken,f = [];if (\"string\" == typeof e) f = [e];else {if (\"[object Array]\" !== Object.prototype.toString.call(e)) throw new Error(\"illegal params\");f = e;}s = \"string\" == typeof t ? [t] : t && \"[object Array]\" === Object.prototype.toString.call(t) ? t : [\"nickname\", \"avatarurl\", \"mail\", \"phone\", \"gender\", \"sign\", \"birth\", \"ext\"];var m = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/metadata/user/get\"), type: \"POST\", data: JSON.stringify({ targets: f, properties: s }), dataType: \"json\", headers: { Authorization: \"Bearer \" + h, \"Content-Type\": \"application/json\" } };return p.kg.debug(\"Call fetchUserInfoById\", e), a.hj.call(this, m, d.fI.GET_USER_INFO);}function M(e) {if (!o.XZ.call(this)) {var t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/users/\").concat(this.user), type: \"PUT\", dataType: \"json\", data: JSON.stringify({ nickname: e }), headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return p.kg.debug(\"Call updateCurrentUserNick\", e), a.hj.call(this, l);}function U(e) {if (\"string\" != typeof e || \"\" === e) throw Error('Invalid parameter: \"agoraToken\"');var t = this.context,r = t.orgName,o = t.appName,n = { url: this.apiUrl + \"/\" + r + \"/\" + o + \"/token\", dataType: \"json\", type: \"POST\", data: JSON.stringify({ grant_type: \"agora\" }), headers: { Authorization: \"Bearer \" + e, \"Content-Type\": \"application/json\" } };return p.kg.debug(\"Call getChatToken\", e), a.hj.call(this, n, d.fI.SDK_INTERNAL);}function k(e) {var t = this;return new Promise(function (r, a) {if (!e.queue) throw Error('Invalid parameter: \"specified\"');if (!o.XZ.call(t)) {var s = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(s);}(function e(t) {var o = this,n = t.count || 20;w.call(this, { count: n, isGroup: !!t.isGroup, queue: t.queue, start: t.start, format: t.format, success: function success(i) {if (i.msgs.length >= n || i.is_last) {var a = i.msgs.splice(0, n).reverse();t.success && t.success(a), r(a);} else e.call(o, _f(_f({}, t), { start: null }));}, fail: function fail(e) {a(e), t.fail && t.fail(e);} });}).call(t, e), p.kg.debug(\"Call fetchHistoryMessages\", e);});}function w(e) {var t = this,r = e.queue,o = this.mr_cache[r] || (this.mr_cache[r] = { msgs: [] }),c = this.context.userId,u = e.start || -1,p = e.count || 20;if (o.msgs.length >= p || o.is_last) \"function\" == typeof e.success && e.success(o);else {o && o.next_key && (u = o.next_key), e.start && (u = e.start);var h = { queue: r + (e.isGroup ? \"@conference.easemob.com\" : \"@easemob.com\"), start: u, end: -1 },f = this.context,m = f.orgName,E = f.appName,g = function g(r) {if (r.error && r.error_description) {var o = i.Z.create({ type: n.E.WEBIM_CONNCTION_LOAD_CHATROOM_ERROR, message: \"fetch history messages error\", data: r });t.onError && t.onError(o);}\"function\" == typeof e.fail && e.fail(g);},y = { url: this.apiUrl + \"/\" + m + \"/\" + E + \"/users/\" + c + \"/messageroaming\", dataType: \"json\", type: \"POST\", headers: { Authorization: \"Bearer \" + this.token, \"Content-Type\": \"application/json\" }, data: JSON.stringify(h), success: function success(r) {var n = null == r ? void 0 : r.data;if (!r.data.msgs) return \"function\" == typeof e.success && e.success(o), o.is_last = !0, void (o.next_key = \"\");var i = n.msgs,a = i.length;o.is_last = n.is_last, o.next_key = n.next_key;for (var c = function c(r) {for (var o = [], n = 0, i = (r = l().atob(r)).length; n < i; ++n) {o.push(r.charCodeAt(n));}var a = t.context.root.lookup(\"easemob.pb.Meta\");if (1 === (a = a.decode(o)).ns) return s.Z.call(t, a, { errorCode: 0, reason: \"\" }, !0, e.format);}, u = 0; u < a; u++) {var p = c(i[u].msg);p && o.msgs.push(p);}\"function\" == typeof e.success && e.success(o);}, error: g };a.hj.call(this, y, d.fI.GET_HISTORY_MSG);}}function P(e) {var t = this;return new Promise(function (r, c) {if (\"string\" != typeof e.targetId || \"\" === e.targetId) throw Error('\"Invalid parameter\": \"targetId\"');if (!o.XZ.call(t)) return c(i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" }));var u = t.context,d = u.orgName,h = u.appName,f = u.userId,m = \"groupChat\" === e.chatType || \"chatRoom\" === e.chatType ? \"@conference.easemob.com\" : \"@easemob.com\",E = { queue: e.targetId + m, start: e.cursor || -1, pull_number: e.pageSize || 20, isGroup: \"groupChat\" === e.chatType || \"chatRoom\" === e.chatType || !1, is_positive: \"down\" === e.searchDirection, end: -1 },g = { url: t.apiUrl + \"/\" + d + \"/\" + h + \"/users/\" + f + \"/messageroaming\", dataType: \"json\", type: \"POST\", headers: { Authorization: \"Bearer \" + t.token, \"Content-Type\": \"application/json\" }, data: JSON.stringify(E), success: function success(e) {for (var o = null == e ? void 0 : e.data, n = o.msgs || [], i = function i(e) {for (var r = [], o = 0, n = (e = l().atob(e)).length; o < n; ++o) {r.push(e.charCodeAt(o));}var i = t.context.root.lookup(\"easemob.pb.Meta\");if (1 === (i = i.decode(r)).ns) return s.Z.call(t, i, { errorCode: 0, reason: \"\" }, !0, !0);}, a = [], c = 0; c < n.length; c++) {var u = i(n[c].msg);u && a.push(u);}o.msgs = a;var p = { cursor: o.next_key, messages: a };r(p);}, error: e.fail };a.hj.call(t, g), p.kg.debug(\"Call getHistoryMessages\", e);});}function L(e, t) {var r = { id: this.getUniqueId(), to: e, message: t };c.Z.operatRoster.call(this, r, \"add\"), p.kg.debug(\"Call addContact\", r);}var D = G;function G(e) {var t = { id: this.getUniqueId(), to: e };c.Z.operatRoster.call(this, t, \"remove\"), p.kg.debug(\"Call deleteContact\", t);}function j(e) {var t = { id: this.getUniqueId(), to: e };c.Z.operatRoster.call(this, t, \"accept\"), p.kg.debug(\"Call acceptInvitation\", t);}var x = j;function B(e) {var t = { id: this.getUniqueId(), to: e };c.Z.operatRoster.call(this, t, \"decline\"), p.kg.debug(\"Call declineContactInvite\", t);}var H = B;function F(e) {c.Z.operatRoster.call(this, { to: e.name }, \"ban\"), p.kg.debug(\"Call addUsersToBlocklist\", e);}var W = F,Z = F;function q(e) {c.Z.operatRoster.call(this, { to: e.name }, \"allow\"), p.kg.debug(\"Call removeUserFromBlocklist\", e);}var K = q,V = q;function J(e) {var t = this.getUniqueId(),r = { id: t, to: e.to };this._msgHash[t] = _f({}, r);var o = \"\";void 0 !== e.chatType ? o = e.chatType : void 0 !== e.type && (o = \"chat\" === e.type ? \"singleChat\" : e.type);var n = { id: t, type: \"recall\", chatType: o, ackId: e.mid, to: e.to, isChatThread: e.isChatThread || !1, success: e.success, fail: e.fail };return p.kg.debug(\"Call recallMessage\", e), this.mSync.send(n, this);}function z(e) {return m(this, void 0, void 0, function () {var t, r, s, c, u, l, p, d, h;return E(this, function (f) {switch (f.label) {case 0:if (\"string\" != typeof e.messageId || !e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));if (\"string\" != typeof e.reaction || !e.reaction) throw Error(\"Invalid parameter reaction: \".concat(e.reaction));return o.XZ.call(this) ? (r = this.context, s = r.orgName, c = r.appName, u = r.accessToken, l = e.reaction, p = e.messageId, d = { msgId: p, message: l }, h = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/reaction/user/\").concat(this.user), type: \"POST\", data: JSON.stringify(d), dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } }, [4, a.hj.call(this, h)]) : (t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" }), [2, Promise.reject(t)]);case 1:return f.sent(), [2];}});});}function X(e) {return m(this, void 0, void 0, function () {var t, r, s, c, u, l, p, d;return E(this, function (h) {switch (h.label) {case 0:if (\"string\" != typeof e.reaction || !e.reaction) throw Error(\"Invalid parameter reactionId: \".concat(e.reaction));return o.XZ.call(this) ? (r = this.context, s = r.orgName, c = r.appName, u = r.accessToken, l = e.messageId, p = e.reaction, d = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/reaction/user/\").concat(this.user, \"?msgId=\").concat(l, \"&message=\").concat(p), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } }, [4, a.hj.call(this, d)]) : (t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" }), [2, Promise.reject(t)]);case 1:return h.sent(), [2];}});});}function Y(e) {if (\"string\" != typeof e.chatType || !e.chatType) throw Error(\"Invalid parameter chatType: \".concat(e.chatType));if (!e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));if (!o.XZ.call(this)) {var t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = e.chatType,p = e.messageId,d = { msgIdList: \"string\" == typeof p ? [p] : p, msgType: \"singleChat\" === l ? \"chat\" : \"groupchat\", groupId: e.groupId || null },h = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/reaction/user/\").concat(this.user), type: \"GET\", data: d, dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return a.hj.call(this, h).then(function (e) {var t = e.data;return null == t || t.forEach(function (e) {null == e || e.reactionList.forEach(function (e) {e.isAddedBySelf = e.state, delete e.state, delete e.reactionId;});}), e;});}var Q = Y;function $(e) {if (\"string\" != typeof e.reaction || !e.reaction) throw Error(\"Invalid parameter reaction: \".concat(e.reaction));if (\"string\" != typeof e.messageId || !e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));if (!o.XZ.call(this)) {var t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = e.cursor,p = e.pageSize,d = { msgId: e.messageId, message: e.reaction, currentPage: l || null, pageSize: p || 20 },h = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/reaction/user/\").concat(this.user, \"/detail\"), type: \"GET\", data: d, dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return a.hj.call(this, h).then(function (e) {return e.data.isAddedBySelf = e.data.state, delete e.data.state, delete e.data.reactionId, e;});}function ee(e) {return m(this, void 0, void 0, function () {var t, r, s, c, u, l, p, d, h, f, m;return E(this, function (E) {switch (E.label) {case 0:if (\"string\" != typeof e.reportType || !e.reportType) throw Error(\"Invalid parameter reportType: \".concat(e.reportType));if (\"string\" != typeof e.messageId || !e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));if (\"string\" != typeof e.reportReason || !e.reportReason) throw Error(\"Invalid parameter messageId: \".concat(e.reportReason));return o.XZ.call(this) ? (r = this.context, s = r.orgName, c = r.appName, u = r.accessToken, l = e.reportType, p = e.reportReason, d = e.messageId, h = { username: this.user, reportType: l, reportReason: p }, f = \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/user/\").concat(this.user, \"/moderation/report/message/\").concat(d), m = { url: f, type: \"POST\", data: JSON.stringify(h), dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } }, [4, a.hj.call(this, m)]) : (t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" }), [2, Promise.reject(t)]);case 1:return E.sent(), [2];}});});}function te(e) {var t;return m(this, void 0, void 0, function () {var r, s, c, u, l, d, h, f, m;return E(this, function (E) {switch (E.label) {case 0:if (\"string\" != typeof e.targetId || \"\" === e.targetId) throw Error('\"Invalid parameter targetId\": ' + e.targetId);if (![\"singleChat\", \"groupChat\"].includes(e.chatType)) throw Error('\"Invalid parameter chatType\": ' + e.chatType);if (e.beforeTimeStamp && (\"number\" != typeof e.beforeTimeStamp || e.beforeTimeStamp < 0 || (null === (t = e.beforeTimeStamp) || void 0 === t ? void 0 : t.toString().length) > 18)) throw Error('\"Invalid parameter beforeTimeStamp\": ' + e.beforeTimeStamp);if (e.messageIds && !(Array.isArray(e.messageIds) && e.messageIds.length > 0 && e.messageIds.length <= 20)) throw Error('\"Invalid parameter messageIds\": ' + e.messageIds);if (!e.messageIds && !e.beforeTimeStamp) throw Error(\"messageIds or beforeTimeStamp field is required.\");return o.XZ.call(this) ? (s = this.context, c = s.orgName, u = s.appName, l = s.userId, d = \"singleChat\" === e.chatType ? \"userId\" : \"groupId\", h = \"singleChat\" === e.chatType ? \"chat\" : \"group\", f = e.messageIds ? \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/sdk/message/roaming/\").concat(h, \"/user/\").concat(l, \"?\").concat(d, \"=\").concat(e.targetId, \"&msgIdList=\").concat(e.messageIds, \"&resource=\").concat(this.clientResource) : \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/sdk/message/roaming/\").concat(h, \"/user/\").concat(l, \"/time?\").concat(d, \"=\").concat(e.targetId, \"&delTime=\").concat(e.beforeTimeStamp, \"&&resource=\").concat(this.clientResource), m = { url: f, dataType: \"json\", type: \"DELETE\", headers: { Authorization: \"Bearer \" + this.token, \"Content-Type\": \"application/json\" } }, p.kg.debug(\"Call removeHistoryMessages\", e), [4, a.hj.call(this, m)]) : (r = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" }), [2, Promise.reject(r)]);case 1:return E.sent(), [2];}});});}}, 8633: function _(e, t, r) {\"use strict\";r.r(t), r.d(t, { getPresenceStatus: function getPresenceStatus() {return m;}, getSubscribedPresenceList: function getSubscribedPresenceList() {return h;}, getSubscribedPresencelist: function getSubscribedPresencelist() {return f;}, publishPresence: function publishPresence() {return l;}, subscribePresence: function subscribePresence() {return p;}, unsubscribePresence: function unsubscribePresence() {return d;} });var o = r(4605),n = r(5888),i = r(1560),a = r(8185),s = r(1972),c = function c(e, t, r, o) {return new (r || (r = Promise))(function (n, i) {function a(e) {try {c(o.next(e));} catch (e) {i(e);}}function s(e) {try {c(o.throw(e));} catch (e) {i(e);}}function c(e) {var t;e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {e(t);})).then(a, s);}c((o = o.apply(e, t || [])).next());});},u = function u(e, t) {var r,o,n,i,a = { label: 0, sent: function sent() {if (1 & n[0]) throw n[1];return n[1];}, trys: [], ops: [] };return i = { next: s(0), throw: s(1), return: s(2) }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {return this;}), i;function s(i) {return function (s) {return function (i) {if (r) throw new TypeError(\"Generator is already executing.\");for (; a;) {try {if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {case 0:case 1:n = i;break;case 4:return a.label++, { value: i[1], done: !1 };case 5:a.label++, o = i[1], i = [0];continue;case 7:i = a.ops.pop(), a.trys.pop();continue;default:if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {a = 0;continue;}if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {a.label = i[1];break;}if (6 === i[0] && a.label < n[1]) {a.label = n[1], n = i;break;}if (n && a.label < n[2]) {a.label = n[2], a.ops.push(i);break;}n[2] && a.ops.pop(), a.trys.pop();continue;}i = t.call(e, a);} catch (e) {i = [6, e], o = 0;} finally {r = n = 0;}}if (5 & i[0]) throw i[1];return { value: i[0] ? i[1] : void 0, done: !0 };}([i, s]);};}};function l(e) {return c(this, void 0, void 0, function () {var t, r, c, l, p, d, h, f, m;return u(this, function (u) {switch (u.label) {case 0:if (\"string\" != typeof e.description) throw Error('Invalid parameter: \"description\"');return n.XZ.call(this) ? (r = this.context, c = r.accessToken, l = r.orgName, p = r.appName, d = r.userId, h = this.context.jid.clientResource, f = { ext: e.description }, m = { url: \"\".concat(this.apiUrl, \"/\").concat(l, \"/\").concat(p, \"/users/\").concat(d, \"/presence/\").concat(h, \"/1\"), type: \"POST\", dataType: \"json\", data: JSON.stringify(f), headers: { Authorization: \"Bearer \" + c, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error }, s.kg.debug(\"Call publishPresence:\", e), [4, o.hj.call(this, m)]) : (t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" }), [2, Promise.reject(t)]);case 1:return u.sent(), [2];}});});}function p(e) {if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');if (!e.usernames.length) throw Error('\"usernames\" can not be empty');if (\"number\" != typeof e.expiry) throw Error('Invalid parameter: \"expiry\"');if (!n.XZ.call(this)) {var t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.orgName,u = r.appName,l = r.userId,p = r.accessToken,d = { usernames: e.usernames },h = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/users/\").concat(l, \"/presence/\").concat(e.expiry), type: \"POST\", dataType: \"json\", data: JSON.stringify(d), headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call subscribePresence:\", e), o.hj.call(this, h).then(function (e) {return e.data = { result: null == e ? void 0 : e.result }, e;});}function d(e) {return c(this, void 0, void 0, function () {var t, r, c, l, p, d, h;return u(this, function (u) {switch (u.label) {case 0:if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');if (!e.usernames.length) throw Error('\"usernames\" can not be empty');return n.XZ.call(this) ? (r = this.context, c = r.orgName, l = r.appName, p = r.userId, d = r.accessToken, h = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(l, \"/users/\").concat(p, \"/presence\"), type: \"DELETE\", dataType: \"json\", data: JSON.stringify(e.usernames), headers: { Authorization: \"Bearer \" + d, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error }, s.kg.debug(\"Call unsubscribePresence:\", e), [4, o.hj.call(this, h)]) : (t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" }), [2, Promise.reject(t)]);case 1:return u.sent(), [2];}});});}function h(e) {if (\"number\" != typeof e.pageNum || \"number\" != typeof e.pageSize) throw Error('Invalid parameter: \"pageNum or pageSize\"');if (e.pageNum < 0 || e.pageSize < 0) throw Error('\"pageNum\" should >= 0 and \"pageSize\" should >= 0');if (!n.XZ.call(this)) {var t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.orgName,u = r.appName,l = r.userId,p = r.accessToken,d = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/users/\").concat(l, \"/presence/sublist?pageNum=\").concat(e.pageNum, \"&pageSize=\").concat(e.pageSize), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + p, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getSubscribedPresenceList:\", e), o.hj.call(this, d).then(function (e) {return e.data = { result: null == e ? void 0 : e.result }, e;});}var f = h;function m(e) {if (!Array.isArray(e.usernames)) throw Error('Invalid parameter: \"usernames\"');if (!e.usernames.length) throw Error('\"usernames\" can not be empty');if (!n.XZ.call(this)) {var t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = { usernames: e.usernames },c = this.context,u = c.orgName,l = c.appName,p = c.userId,d = c.accessToken,h = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/users/\").concat(p, \"/presence\"), type: \"POST\", dataType: \"json\", data: JSON.stringify(r), headers: { Authorization: \"Bearer \" + d, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getPresenceStatus:\", e), o.hj.call(this, h).then(function (e) {return e.data = { result: null == e ? void 0 : e.result }, e;});}}, 5339: function _(e, t, r) {\"use strict\";r.r(t), r.d(t, { clearRemindTypeForConversation: function clearRemindTypeForConversation() {return p;}, getPushPerformLanguage: function getPushPerformLanguage() {return m;}, getSilentModeForAll: function getSilentModeForAll() {return u;}, getSilentModeForConversation: function getSilentModeForConversation() {return d;}, getSilentModeForConversations: function getSilentModeForConversations() {return h;}, setPushPerformLanguage: function setPushPerformLanguage() {return f;}, setSilentModeForAll: function setSilentModeForAll() {return c;}, setSilentModeForConversation: function setSilentModeForConversation() {return l;} });var o = r(4605),n = r(5888),i = r(1560),a = r(8185),s = r(1972);function c(e) {if (!(e.options instanceof Object)) throw Error('Invalid parameter: \"options\"');var t = e.options.paramType;if (\"number\" != typeof t || t < 0 || t > 2) throw Error('Invalid parameter: \"options of paramType\"');if (0 === t) {if (\"string\" != typeof e.options.remindType) throw Error('Invalid parameter: \"options of remindType\"');} else if (1 === t) {if (\"number\" != typeof e.options.duration) throw Error('Invalid parameter: \"options of duration\"');} else if (2 === t) {var r = e.options,c = r.startTime,u = r.endTime;if (!(c instanceof Object && Object.keys(c).length)) throw Error('Invalid parameter: \"options of startTime\"');if (!c.hours || \"number\" != typeof c.hours || !c.minutes || \"number\" != typeof c.minutes) throw Error('Invalid parameter: \"options of startTime of hours or minutes\"');if (!(u instanceof Object && Object.keys(u).length)) throw Error('Invalid parameter: \"options of endTime\"');if (!u.hours || \"number\" != typeof u.hours || !u.minutes || \"number\" != typeof u.minutes) throw Error('Invalid parameter: \"options of endTime of hours or minutes\"');}if (!n.XZ.call(this)) {var l = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(l);}var p = this.context,d = p.accessToken,h = p.orgName,f = p.appName,m = p.userId,E = {};switch (t) {case 0:E = { type: e.options.remindType };break;case 1:E = { ignoreDuration: e.options.duration };break;case 2:var g = e.options;c = g.startTime, u = g.endTime, E = { ignoreInterval: \"\".concat(c.hours, \":\").concat(c.minutes, \"-\").concat(u.hours, \":\").concat(u.minutes) };}var y = { url: \"\".concat(this.apiUrl, \"/\").concat(h, \"/\").concat(f, \"/users/\").concat(m, \"/notification/user/\").concat(m), type: \"PUT\", dataType: \"json\", data: JSON.stringify(E), headers: { Authorization: \"Bearer \" + d, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call setSilentModeForAll:\", e), o.hj.call(this, y);}function u(e) {if (!n.XZ.call(this)) {var t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.accessToken,u = r.orgName,l = r.appName,p = r.userId,d = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/users/\").concat(p, \"/notification/user/\").concat(p), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + c, \"Content-Type\": \"application/json\" }, success: null == e ? void 0 : e.success, error: null == e ? void 0 : e.error };return s.kg.debug(\"Call getSilentModeForAll:\", e), o.hj.call(this, d);}function l(e) {if (\"string\" != typeof e.conversationId || !e.conversationId) throw Error('Invalid parameter: \"conversationId\"');if (\"string\" != typeof e.type || !e.type) throw Error('Invalid parameter: \"type\"');if (!(e.options instanceof Object)) throw Error('Invalid parameter: \"options\"');var t = e.options.paramType;if (\"number\" != typeof t || t < 0 || t > 2) throw Error('Invalid parameter: \"options of paramType\"');if (0 === t) {if (\"string\" != typeof e.options.remindType) throw Error('Invalid parameter: \"options of remindType\"');} else if (1 === t) {if (\"number\" != typeof e.options.duration) throw Error('Invalid parameter: \"options of duration\"');} else if (2 === t) {var r = e.options,c = r.startTime,u = r.endTime;if (!(c instanceof Object && Object.keys(c).length)) throw Error('Invalid parameter: \"options of startTime\"');if (!c.hours || \"number\" != typeof c.hours || !c.minutes || \"number\" != typeof c.minutes) throw Error('Invalid parameter: \"options of startTime of hours or minutes\"');if (!(u instanceof Object && Object.keys(u).length)) throw Error('Invalid parameter: \"options of endTime\"');if (!u.hours || \"number\" != typeof u.hours || !u.minutes || \"number\" != typeof u.minutes) throw Error('Invalid parameter: \"options of endTime of hours or minutes\"');}if (!n.XZ.call(this)) {var l = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(l);}var p = this.context,d = p.accessToken,h = p.orgName,f = p.appName,m = p.userId,E = \"chatgroup\",g = {};switch (t) {case 0:g = { type: e.options.remindType };break;case 1:g = { ignoreDuration: e.options.duration };break;case 2:var y = e.options;c = y.startTime, u = y.endTime, g = { ignoreInterval: \"\".concat(c.hours, \":\").concat(c.minutes, \"-\").concat(u.hours, \":\").concat(u.minutes) };}\"singleChat\" === e.type && (E = \"user\");var T = { url: \"\".concat(this.apiUrl, \"/\").concat(h, \"/\").concat(f, \"/users/\").concat(m, \"/notification/\").concat(E, \"/\").concat(e.conversationId), type: \"PUT\", dataType: \"json\", data: JSON.stringify(g), headers: { Authorization: \"Bearer \" + d, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call setSilentModeForConversation:\", e), o.hj.call(this, T);}function p(e) {if (\"string\" != typeof e.conversationId || !e.conversationId) throw Error('Invalid parameter: \"conversationId\"');if (\"string\" != typeof e.type || !e.type) throw Error('Invalid parameter: \"type\"');if (!n.XZ.call(this)) {var t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.accessToken,u = r.orgName,l = r.appName,p = r.userId,d = \"chatgroup\";\"singleChat\" === e.type && (d = \"user\");var h = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/users/\").concat(p, \"/notification/\").concat(d, \"/\").concat(e.conversationId), type: \"PUT\", dataType: \"json\", data: JSON.stringify({ type: \"DEFAULT\" }), headers: { Authorization: \"Bearer \" + c, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call clearRemindTypeForConversation:\", e), o.hj.call(this, h);}function d(e) {if (\"string\" != typeof e.conversationId || !e.conversationId) throw Error('Invalid parameter: \"conversationId\"');if (\"string\" != typeof e.type || !e.type) throw Error('Invalid parameter: \"type\"');if (!n.XZ.call(this)) {var t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.accessToken,u = r.orgName,l = r.appName,p = r.userId,d = \"chatgroup\";\"singleChat\" === e.type && (d = \"user\");var h = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/users/\").concat(p, \"/notification/\").concat(d, \"/\").concat(e.conversationId), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + c, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getSilentModeForConversation:\", e), o.hj.call(this, h);}function h(e) {if (!Array.isArray(e.conversationList)) throw Error('Invalid parameter: \"conversationList\"');if (!n.XZ.call(this)) {var t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.accessToken,u = r.orgName,l = r.appName,p = r.userId,d = [],h = [];e.conversationList.forEach(function (e) {\"singleChat\" === e.type ? d.push(e.id) : h.push(e.id);});var f = d.length ? d.join(\",\") : \"\",m = h.length ? h.join(\",\") : \"\",E = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/users/\").concat(p, \"/notification?user=\").concat(f, \"&group=\").concat(m), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + c, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call getSilentModeForConversations:\", e), o.hj.call(this, E);}function f(e) {if (\"string\" != typeof e.language || !e.language) throw Error('Invalid parameter: \"language\"');if (!n.XZ.call(this)) {var t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = { translationLanguage: e.language },c = this.context,u = c.accessToken,l = c.orgName,p = c.appName,d = c.userId,h = { url: \"\".concat(this.apiUrl, \"/\").concat(l, \"/\").concat(p, \"/users/\").concat(d, \"/notification/language\"), type: \"PUT\", dataType: \"json\", data: JSON.stringify(r), headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" }, success: e.success, error: e.error };return s.kg.debug(\"Call setPushPerformLanguage:\", e), o.hj.call(this, h);}function m(e) {if (!n.XZ.call(this)) {var t = i.Z.create({ type: a.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.accessToken,u = r.orgName,l = r.appName,p = r.userId,d = { url: \"\".concat(this.apiUrl, \"/\").concat(u, \"/\").concat(l, \"/users/\").concat(p, \"/notification/language\"), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + c, \"Content-Type\": \"application/json\" }, success: null == e ? void 0 : e.success, error: null == e ? void 0 : e.error };return s.kg.debug(\"Call getPushPerformLanguage:\", e), o.hj.call(this, d);}}, 3595: function _(e, t, r) {\"use strict\";r.r(t), r.d(t, { changeChatThreadName: function changeChatThreadName() {return f;}, createChatThread: function createChatThread() {return l;}, destroyChatThread: function destroyChatThread() {return h;}, getChatThreadDetail: function getChatThreadDetail() {return _;}, getChatThreadLastMessage: function getChatThreadLastMessage() {return T;}, getChatThreadMembers: function getChatThreadMembers() {return m;}, getChatThreads: function getChatThreads() {return y;}, getJoinedChatThreads: function getJoinedChatThreads() {return g;}, joinChatThread: function joinChatThread() {return p;}, leaveChatThread: function leaveChatThread() {return d;}, removeChatThreadMember: function removeChatThreadMember() {return E;} });var o = r(8185),n = r(1560),i = r(4605),a = r(5888),s = r(1541),c = function c(e, t, r, o) {return new (r || (r = Promise))(function (n, i) {function a(e) {try {c(o.next(e));} catch (e) {i(e);}}function s(e) {try {c(o.throw(e));} catch (e) {i(e);}}function c(e) {var t;e.done ? n(e.value) : (t = e.value, t instanceof r ? t : new r(function (e) {e(t);})).then(a, s);}c((o = o.apply(e, t || [])).next());});},u = function u(e, t) {var r,o,n,i,a = { label: 0, sent: function sent() {if (1 & n[0]) throw n[1];return n[1];}, trys: [], ops: [] };return i = { next: s(0), throw: s(1), return: s(2) }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {return this;}), i;function s(i) {return function (s) {return function (i) {if (r) throw new TypeError(\"Generator is already executing.\");for (; a;) {try {if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {case 0:case 1:n = i;break;case 4:return a.label++, { value: i[1], done: !1 };case 5:a.label++, o = i[1], i = [0];continue;case 7:i = a.ops.pop(), a.trys.pop();continue;default:if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {a = 0;continue;}if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {a.label = i[1];break;}if (6 === i[0] && a.label < n[1]) {a.label = n[1], n = i;break;}if (n && a.label < n[2]) {a.label = n[2], a.ops.push(i);break;}n[2] && a.ops.pop(), a.trys.pop();continue;}i = t.call(e, a);} catch (e) {i = [6, e], o = 0;} finally {r = n = 0;}}if (5 & i[0]) throw i[1];return { value: i[0] ? i[1] : void 0, done: !0 };}([i, s]);};}};function l(e) {if (\"string\" != typeof e.name || \"\" === e.name) throw Error(\"Invalid parameter name: \".concat(e.name));if (\"string\" != typeof e.messageId || \"\" === e.messageId) throw Error(\"Invalid parameter messageId: \".concat(e.messageId));if (\"string\" != typeof e.parentId || \"\" === e.parentId) throw Error(\"Invalid parameter parentId: \".concat(e.parentId));if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = r.jid,p = { name: e.name, msg_id: e.messageId, group_id: e.parentId, owner: this.user },d = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/thread?resource=\").concat(l.clientResource), type: \"POST\", dataType: \"json\", data: JSON.stringify(p), headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return i.hj.call(this, d).then(function (e) {var t = e.data.thread_id;return e.data = { chatThreadId: t }, e;});}function p(e) {if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = r.jid,p = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/thread/\").concat(e.chatThreadId, \"/user/\").concat(this.user, \"/join?resource=\").concat(l.clientResource), type: \"POST\", dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return i.hj.call(this, p).then(function (e) {var t = e.data.detail;return t.messageId = t.msgId, t.parentId = t.groupId, delete t.msgId, delete t.groupId, e;});}function d(e) {return c(this, void 0, void 0, function () {var t, r, s, c, l, p, d;return u(this, function (u) {switch (u.label) {case 0:if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));return a.XZ.call(this) ? (r = this.context, s = r.orgName, c = r.appName, l = r.accessToken, p = r.jid, d = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/thread/\").concat(e.chatThreadId, \"/user/\").concat(this.user, \"/quit?resource=\").concat(p.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + l, \"Content-Type\": \"application/json\" } }, [4, i.hj.call(this, d)]) : (t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" }), [2, Promise.reject(t)]);case 1:return u.sent(), [2];}});});}function h(e) {return c(this, void 0, void 0, function () {var t, r, s, c, l, p, d;return u(this, function (u) {switch (u.label) {case 0:if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));return a.XZ.call(this) ? (r = this.context, s = r.orgName, c = r.appName, l = r.accessToken, p = r.jid, d = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/thread/\").concat(e.chatThreadId, \"?resource=\").concat(p.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + l, \"Content-Type\": \"application/json\" } }, [4, i.hj.call(this, d)]) : (t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" }), [2, Promise.reject(t)]);case 1:return u.sent(), [2];}});});}function f(e) {if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));if (\"string\" != typeof e.name || \"\" === e.name) throw Error(\"Invalid parameter name: \".concat(e.name));if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = r.jid,p = { name: e.name },d = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/thread/\").concat(e.chatThreadId, \"?resource=\").concat(l.clientResource), type: \"PUT\", dataType: \"json\", data: JSON.stringify(p), headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return i.hj.call(this, d);}function m(e) {if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = { limit: e.pageSize || 20, cursor: e.cursor || \"\" },p = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/thread/\").concat(e.chatThreadId, \"/users\"), type: \"GET\", dataType: \"json\", data: l, headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return i.hj.call(this, p);}function E(e) {if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));if (\"string\" != typeof e.username || \"\" === e.username) throw Error(\"Invalid parameter username: \".concat(e.username));if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = r.jid,p = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/thread/\").concat(e.chatThreadId, \"/users/\").concat(e.username, \"?resource=\").concat(l.clientResource), type: \"DELETE\", dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return i.hj.call(this, p);}function g(e) {if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = { limit: e.pageSize || 20, cursor: e.cursor || \"\" },p = { url: e.parentId ? \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/threads/chatgroups/\").concat(e.parentId, \"/user/\").concat(this.user) : \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/threads/user/\").concat(this.user), type: \"GET\", dataType: \"json\", data: l, headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return i.hj.call(this, p).then(function (e) {var t = e.entities;return null == t || t.forEach(function (e) {e.parentId = e.groupId, e.messageId = e.msgId, delete e.groupId, delete e.msgId;}), e;});}function y(e) {if (\"string\" != typeof e.parentId || \"\" === e.parentId) throw Error(\"Invalid parameter parentId: \".concat(e.parentId));if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = { cursor: e.cursor || \"\", limit: e.pageSize || 20 },p = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/threads/chatgroups/\").concat(e.parentId), type: \"GET\", dataType: \"json\", data: l, headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return i.hj.call(this, p).then(function (e) {var t = e.entities;return null == t || t.forEach(function (e) {e.parentId = e.groupId, e.messageId = e.msgId, delete e.groupId, delete e.msgId;}), e;});}function T(e) {if (!Array.isArray(e.chatThreadIds)) throw Error(\"Invalid parameter chatThreadIds: \".concat(e.chatThreadIds));if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.orgName,u = r.appName,l = r.accessToken,p = { threadIds: e.chatThreadIds },d = { url: \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/thread/message\"), type: \"POST\", dataType: \"json\", data: JSON.stringify(p), headers: { Authorization: \"Bearer \" + l, \"Content-Type\": \"application/json\" } };return i.hj.call(this, d).then(function (e) {return function (e) {var t = e.entities;return null == t || t.forEach(function (e) {e.chatThreadId = e.thread_id, e.last_message && \"{}\" !== JSON.stringify(e.last_message) ? e.lastMessage = (0, s.w)(e.last_message) : e.lastMessage = e.last_message, delete e.thread_id, delete e.last_message;}), e;}(e);});}function _(e) {if (\"string\" != typeof e.chatThreadId || \"\" === e.chatThreadId) throw Error(\"Invalid parameter chatThreadId: \".concat(e.chatThreadId));if (!a.XZ.call(this)) {var t = n.Z.create({ type: o.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,s = r.orgName,c = r.appName,u = r.accessToken,l = { url: \"\".concat(this.apiUrl, \"/\").concat(s, \"/\").concat(c, \"/thread/\").concat(e.chatThreadId), type: \"GET\", dataType: \"json\", headers: { Authorization: \"Bearer \" + u, \"Content-Type\": \"application/json\" } };return i.hj.call(this, l).then(function (e) {return e.data.affiliationsCount = e.data.affiliations_count, e.data.messageId = e.data.msgId, e.data.parentId = e.data.groupId, delete e.data.affiliations_count, delete e.data.msgId, delete e.data.groupId, e;});}}, 9590: function _(e, t, r) {\"use strict\";r.r(t), r.d(t, { getSupportedLanguages: function getSupportedLanguages() {return c;}, translateMessage: function translateMessage() {return u;} });var o = r(5888),n = r(8185),i = r(1560),a = r(1972),s = r(4605);function c() {if (!o.XZ.call(this)) {var e = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(e);}var t = this.context,r = t.orgName,c = t.appName,u = t.accessToken,l = { url: \"\".concat(this.apiUrl, \"/\").concat(r, \"/\").concat(c, \"/users/\").concat(this.user, \"/translate/support/language\"), dataType: \"json\", type: \"GET\", headers: { Authorization: \"Bearer \" + u } };return a.kg.debug(\"Call getSupportedLanguages\"), s.hj.call(this, l);}function u(e) {if (\"string\" != typeof e.text || \"\" === e.text) throw Error('Invalid parameter: \"text\"');if (!Array.isArray(e.languages)) throw Error('Invalid parameter: \"language\"');if (!o.XZ.call(this)) {var t = i.Z.create({ type: n.E.REST_PARAMS_STATUS, message: \"appkey or token error\" });return Promise.reject(t);}var r = this.context,c = r.orgName,u = r.appName,l = r.accessToken,p = \"\".concat(this.apiUrl, \"/\").concat(c, \"/\").concat(u, \"/users/\").concat(this.user, \"/translate\"),d = { text: e.text, to: e.languages },h = { url: p, dataType: \"json\", type: \"POST\", data: JSON.stringify(d), headers: { Authorization: \"Bearer \" + l } };return a.kg.debug(\"Call translateMessage\"), s.hj.call(this, h);}}, 5888: function _(e, t, r) {\"use strict\";r.d(t, { H7: function H7() {return u;}, XZ: function XZ() {return s;}, _W: function _W() {return c;} });var o = r(8185),n = r(1560);function i() {var e = this.context.appName,t = this.context.orgName;return !(!e || !t) || (this.onError && this.onError({ type: o.E.WEBIM_CONNCTION_AUTH_ERROR, message: \"appName or orgName is illegal\" }), !1);}function a() {var e;if (!this.context.accessToken) {var t = n.Z.create({ type: o.E.WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR, message: \"token not assign error\" });return this.onError && this.onError(t), null === (e = this.eventHandler) || void 0 === e || e.dispatch(\"onError\", t), !1;}return !0;}function s() {return a.call(this) && i.call(this);}function c(e) {var t = e.data,r = e.type;return { data: { status: Object.keys(t.errorKeys).length > 0 ? \"fail\" : \"success\", errorKeys: t.errorKeys, successKeys: t.successKeys }, type: r };}function u(e) {var t = e.data,r = void 0;return Object.keys(t.errorKeys).length > 0 && Object.keys(t.errorKeys).forEach(function (e) {var i = t.errorKeys[e];r = i.includes(\"is not part of you\") ? n.Z.create({ type: o.E.NO_PERMISSION, message: i }) : i.includes(\"size of metadata for this single chatroom exceeds the user defined limit\") || i.includes(\"total size of chatroom metadata for this app exceeds the user defined limit\") || i.includes(\"is exceeding maximum limit\") ? n.Z.create({ type: o.E.MAX_LIMIT, message: i }) : i.includes(\"is not Legal\") ? n.Z.create({ type: o.E.REQUEST_PARAMETER_ERROR, message: i }) : i.includes(\"Failed to update userMetadata. Concurrent updates not allowed\") ? n.Z.create({ type: o.E.OPERATION_NOT_ALLOWED, message: i }) : n.Z.create({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, message: i });}), r;}}, 6887: function _(e, t, r) {\"use strict\";r.d(t, { $x: function $x() {return s;}, F3: function F3() {return c;}, Nl: function Nl() {return n;}, TJ: function TJ() {return i;}, Wc: function Wc() {return o;}, el: function el() {return a;}, iB: function iB() {return u;}, yK: function yK() {return l;} });var o = 7,n = new Map(),i = new Map(),a = \"im\",s = \"32f24ab2ddb74f508aa9286c356cec84\",c = 1e3,u = { INIT: 9674, API: 9675 },l = \"direct\";}, 5699: function _(e, t, r) {\"use strict\";var o, n, i, a, s, c;r.d(t, { C8: function C8() {return o;}, aC: function aC() {return c;}, c: function c() {return i;}, dd: function dd() {return s;}, fI: function fI() {return n;}, td: function td() {return a;} }), function (e) {e[e.UNKNOWOPERATION = -1] = \"UNKNOWOPERATION\", e[e.REST_GET_SESSION_LIST = 1] = \"REST_GET_SESSION_LIST\", e[e.REST_DEL_SESSION = 2] = \"REST_DEL_SESSION\", e[e.REST_GET_HISTORY_MESSAGE = 3] = \"REST_GET_HISTORY_MESSAGE\", e[e.REST_OPERATE = 10] = \"REST_OPERATE\", e[e.MSYNC_SENDMESSAGE = 11] = \"MSYNC_SENDMESSAGE\", e[e.MSYNC_RECALLMESSAGE = 12] = \"MSYNC_RECALLMESSAGE\", e[e.MSYNC_OPERATE = 20] = \"MSYNC_OPERATE\", e[e.ROSTER_ADD = 21] = \"ROSTER_ADD\", e[e.ROSTER_REMOVE = 22] = \"ROSTER_REMOVE\", e[e.ROSTER_ACCEPT = 23] = \"ROSTER_ACCEPT\", e[e.ROSTER_DECLINE = 24] = \"ROSTER_DECLINE\", e[e.ROSTER_BAN = 25] = \"ROSTER_BAN\", e[e.ROSTER_ALLOW = 26] = \"ROSTER_ALLOW\", e[e.ROSTER_BLACKLIST = 27] = \"ROSTER_BLACKLIST\", e[e.ROSTER_CONTACTS = 28] = \"ROSTER_CONTACTS\", e[e.ROSTER_OPERATE = 30] = \"ROSTER_OPERATE\", e[e.USER_LOGIN = 31] = \"USER_LOGIN\", e[e.USER_CREATE = 32] = \"USER_CREATE\", e[e.USER_UPDATE_USERINFO = 33] = \"USER_UPDATE_USERINFO\", e[e.USER_FETCH_USERINFO = 34] = \"USER_FETCH_USERINFO\", e[e.USER_UPDATE_NICK = 35] = \"USER_UPDATE_NICK\", e[e.USER_UPLOAD_PUSH_TOKEN = 36] = \"USER_UPLOAD_PUSH_TOKEN\", e[e.USER_OPERATE = 40] = \"USER_OPERATE\", e[e.GROUP_CREATEGROUP = 41] = \"GROUP_CREATEGROUP\", e[e.GROUP_BLOCK_MESSAGE = 42] = \"GROUP_BLOCK_MESSAGE\", e[e.GROUP_FETCH_PUBLICGROUPS_WITHCURSOR = 43] = \"GROUP_FETCH_PUBLICGROUPS_WITHCURSOR\", e[e.GROUP_FETCH_USERS_GROUP = 44] = \"GROUP_FETCH_USERS_GROUP\", e[e.GROUP_CHANGE_OWNER = 45] = \"GROUP_CHANGE_OWNER\", e[e.GROUP_FETCH_SPECIFICATION = 46] = \"GROUP_FETCH_SPECIFICATION\", e[e.GROUP_CHANGE_GROUPATTRIBUTE = 47] = \"GROUP_CHANGE_GROUPATTRIBUTE\", e[e.GROUP_FETCH_MEMEBERS = 48] = \"GROUP_FETCH_MEMEBERS\", e[e.GROUP_GET_ADMIN = 49] = \"GROUP_GET_ADMIN\", e[e.GROUP_SET_ADMIN = 50] = \"GROUP_SET_ADMIN\", e[e.GROUP_REMOVE_ADMIN = 51] = \"GROUP_REMOVE_ADMIN\", e[e.GROUP_DESTOTYGROUP = 52] = \"GROUP_DESTOTYGROUP\", e[e.GROUP_LEAVEGROUP = 53] = \"GROUP_LEAVEGROUP\", e[e.GROUP_INVITE_TO_GROUP = 54] = \"GROUP_INVITE_TO_GROUP\", e[e.GROUP_JOIN_PUBLICGROUP = 55] = \"GROUP_JOIN_PUBLICGROUP\", e[e.GROUP_ACCEPT_JOINPUBLICGROUPAPPL = 56] = \"GROUP_ACCEPT_JOINPUBLICGROUPAPPL\", e[e.GROUP_DECLINE_JOINPUBLICGROUPAPPL = 57] = \"GROUP_DECLINE_JOINPUBLICGROUPAPPL\", e[e.GROUP_ACCEPT_INVITATION = 58] = \"GROUP_ACCEPT_INVITATION\", e[e.GROUP_DECLINE_INVITATION = 59] = \"GROUP_DECLINE_INVITATION\", e[e.GROUP_REMOVE_MEMBER = 60] = \"GROUP_REMOVE_MEMBER\", e[e.GROUP_REMOVE_MEMBERS = 61] = \"GROUP_REMOVE_MEMBERS\", e[e.GROUP_MUTE_MEMBERS = 62] = \"GROUP_MUTE_MEMBERS\", e[e.GROUP_UNMUTE_MEMBERS = 63] = \"GROUP_UNMUTE_MEMBERS\", e[e.GROUP_FETCH_MUTES = 64] = \"GROUP_FETCH_MUTES\", e[e.GROUP_BLOCK_MEMBER = 65] = \"GROUP_BLOCK_MEMBER\", e[e.GROUP_BLOCK_MEMBERS = 66] = \"GROUP_BLOCK_MEMBERS\", e[e.GROUP_UNBLOCK_MEMBER = 67] = \"GROUP_UNBLOCK_MEMBER\", e[e.GROUP_UNBLOCK_MEMBERS = 68] = \"GROUP_UNBLOCK_MEMBERS\", e[e.GROUP_GET_BLOCK_LIST = 69] = \"GROUP_GET_BLOCK_LIST\", e[e.GROUP_MUTE_ALLMEMBERS = 70] = \"GROUP_MUTE_ALLMEMBERS\", e[e.GROUP_UNMUTE_ALLMEMBERS = 71] = \"GROUP_UNMUTE_ALLMEMBERS\", e[e.GROUP_ADD_WHITELIST = 72] = \"GROUP_ADD_WHITELIST\", e[e.GROUP_REMOVE_WHITELIST = 73] = \"GROUP_REMOVE_WHITELIST\", e[e.GROUP_FETCH_WHITELIST = 74] = \"GROUP_FETCH_WHITELIST\", e[e.GROUP_IS_IN_WHITELIST = 75] = \"GROUP_IS_IN_WHITELIST\", e[e.GROUP_GET_READ_USERS = 76] = \"GROUP_GET_READ_USERS\", e[e.GROUP_FETCH_ANNOUNCEMENT = 77] = \"GROUP_FETCH_ANNOUNCEMENT\", e[e.GROUP_UPDATE_ANNOUNCEMENT = 78] = \"GROUP_UPDATE_ANNOUNCEMENT\", e[e.GROUP_UPLOAD_SHAREDFILE = 79] = \"GROUP_UPLOAD_SHAREDFILE\", e[e.GROUP_DELETE_SHAREDFILE = 80] = \"GROUP_DELETE_SHAREDFILE\", e[e.GROUP_FETCH_SHAREDFILE = 81] = \"GROUP_FETCH_SHAREDFILE\", e[e.GROUP_DOWNLOAD_SHAREDFILE = 82] = \"GROUP_DOWNLOAD_SHAREDFILE\", e[e.GROUP_OPERATE = 100] = \"GROUP_OPERATE\", e[e.CHATROOM_FETCH_CHATROOMSWITHPAGE = 101] = \"CHATROOM_FETCH_CHATROOMSWITHPAGE\", e[e.CHATROOM_CREATECHATROOM = 102] = \"CHATROOM_CREATECHATROOM\", e[e.CHATROOM_DESTORYCHATROOM = 103] = \"CHATROOM_DESTORYCHATROOM\", e[e.CHATROOM_FETCH_SPECIFICATION = 104] = \"CHATROOM_FETCH_SPECIFICATION\", e[e.CHATROOM_CHANGE_ATTRIBUTE = 105] = \"CHATROOM_CHANGE_ATTRIBUTE\", e[e.CHATROOM_REMOVE_MEMBER = 106] = \"CHATROOM_REMOVE_MEMBER\", e[e.CHATROOM_REMOVE_MEMBERS = 107] = \"CHATROOM_REMOVE_MEMBERS\", e[e.CHATROOM_ADD_MEMBERS = 108] = \"CHATROOM_ADD_MEMBERS\", e[e.CHATROOM_JOINCAHTROOM = 109] = \"CHATROOM_JOINCAHTROOM\", e[e.CHATROOM_LEAVECAHTROOM = 110] = \"CHATROOM_LEAVECAHTROOM\", e[e.CHATROOM_FETCH_MEMBERS = 111] = \"CHATROOM_FETCH_MEMBERS\", e[e.CHATROOM_GET_ADMIN = 112] = \"CHATROOM_GET_ADMIN\", e[e.CHATROOM_SET_ADMIN = 113] = \"CHATROOM_SET_ADMIN\", e[e.CHATROOM_REMOVE_ADMIN = 114] = \"CHATROOM_REMOVE_ADMIN\", e[e.CHATROOM_MUTE_USER = 115] = \"CHATROOM_MUTE_USER\", e[e.CHATROOM_UNMUTE_USER = 116] = \"CHATROOM_UNMUTE_USER\", e[e.CHATROOM_FETCH_MUTES = 117] = \"CHATROOM_FETCH_MUTES\", e[e.CHATROOM_BLOCK_USER = 118] = \"CHATROOM_BLOCK_USER\", e[e.CHATROOM_BLOCK_USERS = 119] = \"CHATROOM_BLOCK_USERS\", e[e.CHATROOM_UNBLOCK_USER = 120] = \"CHATROOM_UNBLOCK_USER\", e[e.CHATROOM_UNBLOCK_USERS = 121] = \"CHATROOM_UNBLOCK_USERS\", e[e.CHATROOM_FETCH_BANS = 122] = \"CHATROOM_FETCH_BANS\", e[e.CHATROOM_MUTE_ALLMEMEBERS = 123] = \"CHATROOM_MUTE_ALLMEMEBERS\", e[e.CHATROOM_UNMUTE_ALLMEMEBERS = 124] = \"CHATROOM_UNMUTE_ALLMEMEBERS\", e[e.CHATROOM_ADD_WHITELIST = 125] = \"CHATROOM_ADD_WHITELIST\", e[e.CHATROOM_REMOVE_WHITELIST = 126] = \"CHATROOM_REMOVE_WHITELIST\", e[e.CHATROOM_FETCH_WHITELIST = 127] = \"CHATROOM_FETCH_WHITELIST\", e[e.CHATROOM_FETCH_MEMBERIN_WHITELIST = 128] = \"CHATROOM_FETCH_MEMBERIN_WHITELIST\", e[e.CHATROOM_FETCH_ANNOUNCEMENT = 129] = \"CHATROOM_FETCH_ANNOUNCEMENT\", e[e.CHATROOM_UPDATE_ANNOUNCEMENT = 130] = \"CHATROOM_UPDATE_ANNOUNCEMENT\", e[e.CHATROOM_REMOVE_SHARE_FILE = 131] = \"CHATROOM_REMOVE_SHARE_FILE\", e[e.CHATROOM_GET_SHARE_FILE_LIST = 132] = \"CHATROOM_GET_SHARE_FILE_LIST\", e[e.CHATROOM_UPLOAD_FILE = 133] = \"CHATROOM_UPLOAD_FILE\", e[e.CHATROOM_OPERATE = 150] = \"CHATROOM_OPERATE\";}(o || (o = {})), function (e) {e.SDK_INTERNAL = \"SDK_INTERNAL\", e.LOGIN = \"USER_LOGIN\", e.REGISTER = \"USER_CREATE\", e.GET_CHATROOM_LIST = \"CHATROOM_FETCH_CHATROOMSWITHPAGE\", e.CREATE_CHATROOM = \"CHATROOM_CREATECHATROOM\", e.DESTROY_CHATROOM = \"CHATROOM_DESTORYCHATROOM\", e.GET_CHATROOM_DETAIL = \"CHATROOM_FETCH_SPECIFICATION\", e.MODIFY_CHATROOM = \"CHATROOM_CHANGE_ATTRIBUTE\", e.REMOVE_CHATROOM_MEMBER = \"CHATROOM_REMOVE_MEMBER\", e.MULTI_REMOVE_CHATROOM_MEMBER = \"CHATROOM_REMOVE_MEMBERS\", e.ADD_USERS_TO_CHATROOM = \"CHATROOM_ADD_MEMBERS\", e.JOIN_CHATROOM = \"CHATROOM_JOINCAHTROOM\", e.QUIT_CHATROOM = \"CHATROOM_LEAVECAHTROOM\", e.LIST_CHATROOM_MEMBERS = \"CHATROOM_FETCH_MEMBERS\", e.GET_CHATROOM_ADMIN = \"CHATROOM_GET_ADMIN\", e.SET_CHATROOM_ADMIN = \"CHATROOM_SET_ADMIN\", e.REMOVE_CHATROOM_ADMIN = \"CHATROOM_REMOVE_ADMIN\", e.MUTE_CHATROOM_MEMBER = \"CHATROOM_MUTE_USER\", e.REMOVE_MUTE_CHATROOM_MEMBER = \"CHATROOM_UNMUTE_USER\", e.GET_MUTE_CHATROOM_MEMBERS = \"CHATROOM_FETCH_MUTES\", e.SET_CHATROOM_MEMBER_TO_BLACK = \"CHATROOM_BLOCK_USER\", e.MULTI_SET_CHATROOM_MEMBER_TO_BLACK = \"CHATROOM_BLOCK_USERS\", e.REMOVE_CHATROOM_MEMBER_BLACK = \"CHATROOM_UNBLOCK_USER\", e.MULTI_REMOVE_CHATROOM_MEMBER_BLACK = \"CHATROOM_UNBLOCK_USERS\", e.GET_CHATROOM_BLOCK_MEMBERS = \"CHATROOM_FETCH_BANS\", e.DISABLED_CHATROOM_SEND_MSG = \"CHATROOM_MUTE_ALLMEMEBERS\", e.ENABLE_CHATROOM_SEND_MSG = \"CHATROOM_UNMUTE_ALLMEMEBERS\", e.ADD_CHATROOM_WHITE_USERS = \"CHATROOM_ADD_WHITELIST\", e.REMOVE_CHATROOM_WHITE_USERS = \"CHATROOM_REMOVE_WHITELIST\", e.GET_CHATROOM_WHITE_USERS = \"CHATROOM_FETCH_WHITELIST\", e.CHECK_CHATROOM_WHITE_USER = \"CHATROOM_FETCH_MEMBERIN_WHITELIST\", e.GET_CHATROOM_ANN = \"CHATROOM_FETCH_ANNOUNCEMENT\", e.UPDATE_CHATROOM_ANN = \"CHATROOM_UPDATE_ANNOUNCEMENT\", e.DELETE_CHATROOM_FILE = \"CHATROOM_REMOVE_SHARE_FILE\", e.GET_CHATROOM_FILES = \"CHATROOM_GET_SHARE_FILE_LIST\", e.UPLOAD_CHATROOM_FILE = \"CHATROOM_UPLOAD_FILE\", e.CREATE_GROUP = \"GROUP_CREATEGROUP\", e.BLOCK_GROUP = \"GROUP_BLOCK_MESSAGE\", e.LIST_GROUP = \"GROUP_FETCH_PUBLICGROUPS_WITHCURSOR\", e.GET_USER_GROUP = \"GROUP_FETCH_USERS_GROUP\", e.CHANGE_OWNER = \"GROUP_CHANGE_OWNER\", e.GET_GROUP_INFO = \"GROUP_FETCH_SPECIFICATION\", e.MODIFY_GROUP = \"GROUP_CHANGE_GROUPATTRIBUTE\", e.LIST_GROUP_MEMBER = \"GROUP_FETCH_MEMEBERS\", e.GET_GROUP_ADMIN = \"GROUP_GET_ADMIN\", e.SET_GROUP_ADMIN = \"GROUP_SET_ADMIN\", e.REMOVE_GROUP_ADMIN = \"GROUP_REMOVE_ADMIN\", e.DISSOLVE_GROUP = \"GROUP_DESTOTYGROUP\", e.QUIT_GROUP = \"GROUP_LEAVEGROUP\", e.INVITE_TO_GROUP = \"GROUP_INVITE_TO_GROUP\", e.JOIN_GROUP = \"GROUP_JOIN_PUBLICGROUP\", e.AGREE_JOIN_GROUP = \"GROUP_ACCEPT_JOINPUBLICGROUPAPPL\", e.REJECT_JOIN_GROUP = \"GROUP_DECLINE_JOINPUBLICGROUPAPPL\", e.AGREE_INVITE_GROUP = \"GROUP_ACCEPT_INVITATION\", e.REJECT_INVITE_GROUP = \"GROUP_DECLINE_INVITATION\", e.REMOVE_GROUP_MEMBER = \"GROUP_REMOVE_MEMBER\", e.MULTI_REMOVE_GROUP_MEMBER = \"GROUP_REMOVE_MEMBERS\", e.MUTE_GROUP_MEMBER = \"GROUP_MUTE_MEMBERS\", e.UNMUTE_GROUP_MEMBER = \"GROUP_UNMUTE_MEMBERS\", e.GET_GROUP_MUTE_LIST = \"GROUP_FETCH_MUTES\", e.BLOCK_GROUP_MEMBER = \"GROUP_BLOCK_MEMBER\", e.BLOCK_GROUP_MEMBERS = \"GROUP_BLOCK_MEMBERS\", e.UNBLOCK_GROUP_MEMBER = \"GROUP_UNBLOCK_MEMBER\", e.UNBLOCK_GROUP_MEMBERS = \"GROUP_UNBLOCK_MEMBERS\", e.GET_GROUP_BLACK_LIST = \"GROUP_GET_BLOCK_LIST\", e.DISABLED_SEND_GROUP_MSG = \"GROUP_MUTE_ALLMEMBERS\", e.ENABLE_SEND_GROUP_MSG = \"GROUP_UNMUTE_ALLMEMBERS\", e.ADD_USERS_TO_GROUP_WHITE = \"GROUP_ADD_WHITELIST\", e.REMOVE_GROUP_WHITE_MEMBER = \"GROUP_REMOVE_WHITELIST\", e.GET_GROUP_WHITE_LIST = \"GROUP_FETCH_WHITELIST\", e.IS_IN_GROUP_WHITE_LIST = \"GROUP_IS_IN_WHITELIST\", e.GET_GROUP_MSG_READ_USER = \"GROUP_GET_READ_USERS\", e.GET_GROUP_ANN = \"GROUP_FETCH_ANNOUNCEMENT\", e.UPDATE_GROUP_ANN = \"GROUP_UPDATE_ANNOUNCEMENT\", e.UPLOAD_GROUP_FILE = \"GROUP_UPLOAD_SHAREDFILE\", e.DELETE_GROUP_FILE = \"GROUP_DELETE_SHAREDFILE\", e.GET_GROUP_FILE_LIST = \"GROUP_FETCH_SHAREDFILE\", e.DOWN_GROUP_FILE = \"GROUP_DOWNLOAD_SHAREDFILE\", e.GET_SESSION_LIST = \"REST_GET_SESSION_LIST\", e.DELETE_SESSION = \"REST_DEL_SESSION\", e.GET_HISTORY_MSG = \"REST_GET_HISTORY_MESSAGE\", e.UPDATE_USER_INFO = \"USER_UPDATE_USERINFO\", e.GET_USER_INFO = \"USER_FETCH_USERINFO\", e.UPDATE_USER_NICK = \"USER_UPDATE_NICK\", e.UPLOAD_PUSH_TOKEN = \"USER_UPLOAD_PUSH_TOKEN\", e.GET_BLACK_LIST = \"ROSTER_BLACKLIST\", e.GET_CONTACTS = \"ROSTER_CONTACTS\", e.add = \"ROSTER_ADD\", e.remove = \"ROSTER_REMOVE\", e.accept = \"ROSTER_ACCEPT\", e.decline = \"ROSTER_DECLINE\", e.ban = \"ROSTER_BAN\", e.allow = \"ROSTER_ALLOW\", e.SEND_MSG = \"MSYNC_SENDMESSAGE\", e.UPLOAD_MSG_ATTACH = \"UPLOAD_MSG_ATTACH\", e.SEND_RECALL_MSG = \"MSYNC_RECALLMESSAGE\";}(n || (n = {})), function (e) {e.GET_DNS = \"REST_DNSLIST\", e.LOGIN_BY_AGORA_TOKEN = \"LOGIN_BY_AGORA_TOKEN\", e.LOGIN_BY_PWD = \"LOGIN_BY_PWD\", e.RESISTER = \"REGISTER\";}(i || (i = {})), function (e) {e[e[\"5G\"] = 7] = \"5G\", e[e[\"4G\"] = 7] = \"4G\", e[e[\"3G\"] = 7] = \"3G\", e[e[\"2G\"] = 7] = \"2G\", e[e[\"SLOW-2G\"] = 7] = \"SLOW-2G\", e[e.WIFI = 2] = \"WIFI\", e[e.LAN = 1] = \"LAN\", e[e.DISCONNECTED = 0] = \"DISCONNECTED\", e[e.NONE = 0] = \"NONE\", e[e.UNKNOWN = -1] = \"UNKNOWN\", e[e[\"WEBIM UNABLE TO GET\"] = -2] = \"WEBIM UNABLE TO GET\";}(a || (a = {})), function (e) {e[e.success = 200] = \"success\", e[e.failed = 500] = \"failed\";}(s || (s = {})), function (e) {e[e.web = 0] = \"web\", e[e.native = 1] = \"native\";}(c || (c = {}));}, 1560: function _(e, t) {\"use strict\";var r = function () {function e(e) {this.type = e.type, this.message = e.message, this.data = e.data;}return e.create = function (t) {return new e(t);}, e;}();t.Z = r;}, 3886: function _(e, t, r) {\"use strict\";var o = r(9168),n = r.n(o),i = r(1541),a = r(4605),s = r(1972),c = r(2824),u = { 0: \"TEXT\", 1: \"IMAGE\", 2: \"VIDEO\", 3: \"LOCATION\", 4: \"VOICE\", 5: \"FILE\", 6: \"COMMAND\", 7: \"CUSTOM\" };function l(e) {for (var t = {}, r = 0; r < e.length; r++) {if (8 === e[r].type) t[e[r].key] = JSON.parse(e[r].stringValue);else if (7 === e[r].type) t[e[r].key] = e[r].stringValue;else if (6 === e[r].type) t[e[r].key] = e[r].doubleValue;else if (5 === e[r].type) t[e[r].key] = e[r].floatValue;else if (1 === e[r].type) {var o = e[r].varintValue,i = new (n())(o.low, o.high, o.unsigned).toString();t[e[r].key] = 0 !== Number(i);} else 2 !== e[r].type && 3 !== e[r].type && 4 !== e[r].type || (o = e[r].varintValue, i = new (n())(o.low, o.high, o.unsigned).toString(), t[e[r].key] = Number(i));}return t;}function p(e, t, r) {if (this.delivery && e !== t) {var o = this.getUniqueId(),n = new c.Message(\"delivery\", o);n.set({ ackId: r, to: e }), s.kg.debug(\"send delivery ack\"), this.send(n.body);}}t.Z = function (e, t, r, o) {var c,d,h,f,m,E,g,y = new (n())(e.timestamp.low, e.timestamp.high, e.timestamp.unsigned).toString(),T = this.root.lookup(\"easemob.pb.MessageBody\").decode(e.payload),_ = 1;if (e.meta && e.meta.length) switch (a.P6.parseNotify(e.meta).is_online) {case 0:_ = 0;break;case 1:_ = 1;break;default:_ = 2;} else _ = 3;var v = new (n())(e.id.low, e.id.high, e.id.unsigned).toString(),R = T.ackMessageId ? new (n())(T.ackMessageId.low, T.ackMessageId.high, T.ackMessageId.unsigned).toString() : \"\",O = \"\",I = T.from && T.from.name,S = T.to && T.to.name;switch (s.kg.debug(\"thirdMessage:\", T), T.type) {case 1:O = \"chat\", \"agoraToken\" === this.grantType && (O = \"singleChat\"), this.delivery && p.call(this, I, S, v);break;case 2:O = \"groupchat\", \"agoraToken\" === this.grantType && (O = \"groupChat\");break;case 3:O = \"chatroom\", \"agoraToken\" === this.grantType && (O = \"chatRoom\"), _ = 1;break;case 4:O = \"read_ack\";var N = void 0;return T.ext[0] && JSON.parse(T.ext[0].stringValue) ? (N = { id: v, type: \"read\", from: I, to: S, mid: R, groupReadCount: T.ext[0] && JSON.parse(T.ext[0].stringValue), ackContent: T.ackContent, onlineState: _ }, this.onReadMessage && this.onReadMessage(N), void (null === (c = this.eventHandler) || void 0 === c || c.dispatch(\"onReadMessage\", N))) : (N = { id: v, type: \"read\", from: I, to: S, mid: R, onlineState: _ }, this.onReadMessage && this.onReadMessage(N), void (null === (d = this.eventHandler) || void 0 === d || d.dispatch(\"onReadMessage\", N)));case 5:O = \"deliver_ack\", this.onDeliveredMessage && this.onDeliveredMessage({ id: v, type: \"delivery\", from: I, to: S, mid: R, onlineState: _ });var C = { id: v, type: \"delivery\", from: I, to: S, mid: R, onlineState: _ };return void (null === (h = this.eventHandler) || void 0 === h || h.dispatch(\"onDeliveredMessage\", C));case 6:O = \"recall\";var A = { id: v, from: I || \"admin\", to: S, mid: R, onlineState: _ };return this.onRecallMessage && this.onRecallMessage(A), void (null === (f = this.eventHandler) || void 0 === f || f.dispatch(\"onRecallMessage\", A));case 7:this.onChannelMessage && this.onChannelMessage({ id: v, type: \"channel\", chatType: \"singleChat\", from: I, to: S, time: Number(y), onlineState: _ });var b = { id: v, type: \"channel\", chatType: \"singleChat\", from: I, to: S, time: Number(y), onlineState: _ };return void (null === (m = this.eventHandler) || void 0 === m || m.dispatch(\"onChannelMessage\", b));default:return void s.kg.error(\"unexpected message type: \".concat(T.type));}var M,U = \"normal\";if (\"chat\" === O.toLowerCase() || \"singleChat\" === O) M = \"singleChat\";else if (\"groupchat\" === O.toLowerCase() || \"groupChat\" === O) M = \"groupChat\";else if (M = \"chatRoom\", _ = 1, e.ext) {var k = l([e.ext]);U = 0 === k.chatroom_msg_tag ? \"high\" : 2 === k.chatroom_msg_tag ? \"low\" : \"normal\";}for (var w = 0; w < T.contents.length; w++) {var P = {},L = {},D = t.errorCode > 0,G = t.errorCode,j = t.reason,x = T.contents[w],B = {},H = [],F = [],W = null,Z = null,q = void 0;if (T.ext && (B = l(T.ext)), T.meta && \"string\" == typeof T.meta) {var K = JSON.parse(T.meta);K.reaction && (H = K.reaction).forEach(function (e) {e.isAddedBySelf = e.state, delete e.state;}), K.translations && (F = K.translations), K.thread && \"{}\" !== JSON.stringify(K.thread) && (W = { messageId: K.thread.msg_parent_id, parentId: K.thread.muc_parent_id, chatThreadName: K.thread.thread_name }), K.thread_overview && \"{}\" !== JSON.stringify(K.thread_overview) && (Z = { id: K.thread_overview.id, parentId: K.thread_overview.muc_parent_id, name: K.thread_overview.name, lastMessage: (0, i.w)(K.thread_overview.last_message), createTimestamp: K.thread_overview.create_timestamp, updateTimestamp: K.thread_overview.update_timestamp, messageCount: K.thread_overview.message_count });}switch (x.type) {case 0:!(P = { id: v, type: O, contentsType: u[x.type], from: I, to: S, data: x.text, ext: B, sourceMsg: x.text, time: y, msgConfig: T.msgConfig, onlineState: _ }).msgConfig && delete T.msgConfig, P.error = D, P.errorText = j, P.errorCode = G, !r && this.onTextMessage && this.onTextMessage(P);var V = { id: v, type: \"txt\", chatType: M, msg: x.text, to: S, from: I, ext: B, time: Number(y), onlineState: _ };P.msgConfig && (V.msgConfig = P.msgConfig), H.length > 0 && (V.reactions = H), W && (V.chatThread = W), Z && (V.chatThreadOverview = Z), F.length > 0 && (V.translations = F), \"chatRoom\" === M && (V.priority = U), L = V, !r && this.eventHandler && this.eventHandler.dispatch(\"onTextMessage\", V);break;case 1:var J = (null === (E = null == x ? void 0 : x.size) || void 0 === E ? void 0 : E.width) || 0,z = (null === (g = null == x ? void 0 : x.size) || void 0 === g ? void 0 : g.height) || 0;q = this.useOwnUploadFun ? x.remotePath : (x.remotePath && this.apiUrl + x.remotePath.substr(x.remotePath.indexOf(\"/\", 9))) + \"?em-redirect=true\", x.secretKey && !this.useOwnUploadFun && (q = \"\".concat(q, \"&share-secret=\").concat(x.secretKey)), !(P = { id: v, type: O, contentsType: u[x.type], from: I, to: S, url: q, secret: x.secretKey, filename: x.displayName, thumb: this.useOwnUploadFun ? \"\" : \"\".concat(q, \"&thumbnail=true\"), thumb_secret: x.secretKey, file_length: x.fileLength || \"\", width: J, height: z, filetype: x.filetype || \"\", accessToken: this.token, ext: B, time: y, msgConfig: T.msgConfig, onlineState: _ }).delay && delete P.delay, !P.msgConfig && delete T.msgConfig, P.error = D, P.errorText = j, P.errorCode = G, !r && this.onPictureMessage && this.onPictureMessage(P);var X = { id: v, type: \"img\", chatType: M, from: I, to: S, url: q || \"\", file: {}, width: J, height: z, secret: x.secretKey || \"\", thumb: this.useOwnUploadFun ? \"\" : \"\".concat(q, \"&thumbnail=true\"), thumb_secret: x.secretKey, file_length: x.fileLength || 0, ext: B, time: Number(y), onlineState: _ };P.msgConfig && (X.msgConfig = P.msgConfig), H.length > 0 && (X.reactions = H), W && (X.chatThread = W), Z && (X.chatThreadOverview = Z), \"chatRoom\" === M && (X.priority = U), L = X, !r && this.eventHandler && this.eventHandler.dispatch(\"onImageMessage\", X);break;case 2:q = this.useOwnUploadFun ? x.remotePath : (x.remotePath && this.apiUrl + x.remotePath.substr(x.remotePath.indexOf(\"/\", 9))) + \"?em-redirect=true\", x.secretKey && !this.useOwnUploadFun && (q = \"\".concat(q, \"&share-secret=\").concat(x.secretKey)), !(P = { id: v, type: O, contentsType: u[x.type], from: I, to: S, url: q, secret: x.secretKey, filename: x.displayName, length: x.duration || \"\", file_length: x.fileLength || \"\", filetype: x.filetype || \"\", accessToken: this.token || \"\", ext: B, time: y, msgConfig: T.msgConfig, onlineState: _ }).delay && delete P.delay, !P.msgConfig && delete T.msgConfig, P.error = D, P.errorText = j, P.errorCode = G, !r && this.onVideoMessage && this.onVideoMessage(P);var Y = { id: v, type: \"video\", chatType: M, from: I, to: S, url: q, secret: x.secretKey, filename: x.displayName, length: x.duration || 0, file: {}, file_length: x.fileLength || 0, filetype: x.filetype || \"\", accessToken: this.token || \"\", ext: B, time: Number(y), onlineState: _ };P.msgConfig && (Y.msgConfig = P.msgConfig), H.length > 0 && (Y.reactions = H), W && (Y.chatThread = W), Z && (Y.chatThreadOverview = Z), \"chatRoom\" === M && (Y.priority = U), L = Y, !r && this.eventHandler && this.eventHandler.dispatch(\"onVideoMessage\", Y);break;case 3:!(P = { id: v, type: O, contentsType: u[x.type], from: I, to: S, addr: x.address, buildingName: x.buildingName, lat: x.latitude, lng: x.longitude, ext: B, time: y, msgConfig: T.msgConfig, onlineState: _ }).delay && delete P.delay, !P.msgConfig && delete T.msgConfig, P.error = D, P.errorText = j, P.errorCode = G, !r && this.onLocationMessage && this.onLocationMessage(P);var Q = { id: v, type: \"loc\", chatType: M, from: I, to: S, buildingName: x.buildingName, addr: x.address, lat: x.latitude, lng: x.longitude, ext: B, time: Number(y), onlineState: _ };P.msgConfig && (Q.msgConfig = P.msgConfig), H.length > 0 && (Q.reactions = H), W && (Q.chatThread = W), Z && (Q.chatThreadOverview = Z), \"chatRoom\" === M && (Q.priority = U), L = Q, !r && this.eventHandler && this.eventHandler.dispatch(\"onLocationMessage\", Q);break;case 4:q = this.useOwnUploadFun ? x.remotePath : (x.remotePath && this.apiUrl + x.remotePath.substr(x.remotePath.indexOf(\"/\", 9))) + \"?em-redirect=true\", x.secretKey && !this.useOwnUploadFun && (q = \"\".concat(q, \"&share-secret=\").concat(x.secretKey)), !(P = { id: v, type: O, contentsType: u[x.type], from: I, to: S, url: q, secret: x.secretKey, filename: x.displayName, file_length: x.fileLength || \"\", accessToken: this.token || \"\", ext: B, length: x.duration, time: y, msgConfig: T.msgConfig, onlineState: _ }).delay && delete P.delay, !P.msgConfig && delete T.msgConfig, P.error = D, P.errorText = j, P.errorCode = G, !r && this.onAudioMessage && this.onAudioMessage(P);var $ = { id: v, type: \"audio\", chatType: M, from: I, to: S, url: q, secret: x.secretKey, file: {}, filename: x.displayName, length: x.duration || 0, file_length: x.fileLength || 0, filetype: x.filetype || \"\", accessToken: this.token || \"\", ext: B, time: Number(y), onlineState: _ };P.msgConfig && ($.msgConfig = P.msgConfig), H.length > 0 && ($.reactions = H), W && ($.chatThread = W), Z && ($.chatThreadOverview = Z), \"chatRoom\" === M && ($.priority = U), L = $, !r && this.eventHandler && this.eventHandler.dispatch(\"onAudioMessage\", $);break;case 5:q = this.useOwnUploadFun ? x.remotePath : (x.remotePath && this.apiUrl + x.remotePath.substr(x.remotePath.indexOf(\"/\", 9))) + \"?em-redirect=true\", x.secretKey && !this.useOwnUploadFun && (q = \"\".concat(q, \"&share-secret=\").concat(x.secretKey)), !(P = { id: v, type: O, contentsType: u[x.type], from: I, to: S, url: q, secret: x.secretKey, filename: x.displayName, file_length: x.fileLength, accessToken: this.token || \"\", ext: B, time: y, msgConfig: T.msgConfig, onlineState: _ }).delay && delete P.delay, !P.msgConfig && delete T.msgConfig, P.error = D, P.errorText = j, P.errorCode = G, !r && this.onFileMessage && this.onFileMessage(P);var ee = { id: v, type: \"file\", chatType: M, from: I, to: S, url: q, secret: x.secretKey, file: {}, filename: x.displayName, length: x.duration || 0, file_length: x.fileLength || 0, filetype: x.filetype || \"\", accessToken: this.token || \"\", ext: B, time: Number(y), onlineState: _ };P.msgConfig && (ee.msgConfig = P.msgConfig), H.length > 0 && (ee.reactions = H), W && (ee.chatThread = W), Z && (ee.chatThreadOverview = Z), \"chatRoom\" === M && (ee.priority = U), L = ee, !r && this.eventHandler && this.eventHandler.dispatch(\"onFileMessage\", ee);break;case 6:!(P = { id: v, type: O, contentsType: u[x.type], from: I, to: S, action: x.action, ext: B, time: y, msgConfig: T.msgConfig, onlineState: _ }).msgConfig && delete T.msgConfig, P.error = D, P.errorText = j, P.errorCode = G, !r && this.onCmdMessage && this.onCmdMessage(P);var te = { id: v, type: \"cmd\", chatType: M, from: I, to: S, action: x.action, ext: B, time: Number(y), onlineState: _ };P.msgConfig && (te.msgConfig = P.msgConfig), H.length > 0 && (te.reactions = H), W && (te.chatThread = W), Z && (te.chatThreadOverview = Z), \"chatRoom\" === M && (te.priority = U), L = te, !r && this.eventHandler && this.eventHandler.dispatch(\"onCmdMessage\", te);break;case 7:var re = {},oe = {};T.contents[0].customExts && (re = l(T.contents[0].customExts)), T.contents[0].params && (oe = l(T.contents[0].params)), P = { id: v, type: O, contentsType: u[x.type], from: I, to: S, customEvent: x.customEvent, params: oe, customExts: re, ext: B, time: y, onlineState: _ }, !r && this.onCustomMessage && this.onCustomMessage(P);var ne = { id: v, type: \"custom\", chatType: M, from: I, to: S, customEvent: x.customEvent, params: oe, customExts: re, ext: B, time: Number(y), onlineState: _ };P.msgConfig && (ne.msgConfig = P.msgConfig), H.length > 0 && (ne.reactions = H), W && (ne.chatThread = W), Z && (ne.chatThreadOverview = Z), \"chatRoom\" === M && (ne.priority = U), L = ne, !r && this.eventHandler && this.eventHandler.dispatch(\"onCustomMessage\", ne);break;default:s.kg.error(\"Unknow message type, message:\", x);}return o ? L : P;}};}, 5719: function _(e, t, r) {\"use strict\";var o,n = r(1972),i = r(6887),a = r(5699);!function (e) {e[e.Add = 2] = \"Add\", e[e.Remove = 3] = \"Remove\", e[e.Accept = 4] = \"Accept\", e[e.Decline = 5] = \"Decline\", e[e.Ban = 6] = \"Ban\", e[e.Allow = 7] = \"Allow\";}(o || (o = {}));var s = { operatRoster: function operatRoster(e, t) {var r = [],s = this.root.lookup(\"easemob.pb.RosterBody\"),c = s.decode(r);switch (t) {case \"add\":c.operation = o.Add;break;case \"remove\":c.operation = o.Remove;break;case \"accept\":c.operation = o.Accept;break;case \"decline\":c.operation = o.Decline;break;case \"ban\":c.operation = o.Ban;break;case \"allow\":c.operation = o.Allow;break;default:n.kg.error(\"operatRoster:\", t);}c.from = this.context.jid;var u = [];if (\"string\" == typeof e.to) u.push({ appKey: this.appKey || this.context.appKey, name: e.to, domain: \"easemob.com\" });else if (e.to instanceof Array) for (var l = 0; l < e.to.length; l++) {u.push({ appKey: this.appKey, name: e.to[l], domain: \"easemob.com\" });}c.to = u, c.reason = e.message || \"\", c = s.encode(c).finish();var p = this.root.lookup(\"easemob.pb.Meta\").decode(r);p.id = e.id || this.getUniqueId();var d = this.dataReport.geOperateFun({ operationName: a.fI[t] });i.Nl.size <= i.F3 && i.Nl.set(p.id, { rpt: d, requestName: a.fI[t] }), p.from = this.context.jid, p.to = { domain: \"@easemob.com\" }, p.ns = 3, p.payload = c;var h = this.root.lookup(\"easemob.pb.CommSyncUL\"),f = h.decode(r);f.meta = p, f = h.encode(f).finish();var m = this.root.lookup(\"easemob.pb.MSync\"),E = m.decode(r);if (E.version = this.version, E.encryptType = [0], E.command = 0, E.guid = this.jid, E.payload = f, E = m.encode(E).finish(), \"miniCore\" === this.name) this.sock.send(E);else {var g = this.mSync.base64transform(E);this.sock.send(g);}}, handleRosterMsg: function handleRosterMsg(e) {var t,r,o,i,a,s,c = this.root.lookup(\"easemob.pb.RosterBody\").decode(e.payload),u = { type: \"\", to: c.to[0].name, from: c.from.name, status: c.reason };switch (c.operation) {case 2:u.type = \"subscribe\", this.onContactInvited && this.onContactInvited(u), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onContactInvited\", u);break;case 3:u.type = \"unsubscribed\", this.onContactDeleted && this.onContactDeleted(u), null === (r = this.eventHandler) || void 0 === r || r.dispatch(\"onContactDeleted\", u);break;case 4:u.type = \"subscribed\", this.onContactAdded && this.onContactAdded(u), null === (o = this.eventHandler) || void 0 === o || o.dispatch(\"onContactAdded\", u);break;case 5:u.type = \"unsubscribed\", this.onContactRefuse && this.onContactRefuse(u), null === (i = this.eventHandler) || void 0 === i || i.dispatch(\"onContactRefuse\", u);break;case 6:case 7:this.getBlacklist();break;case 8:u.type = \"subscribed\", this.onContactAgreed && this.onContactAgreed(u), null === (a = this.eventHandler) || void 0 === a || a.dispatch(\"onContactAgreed\", u);break;case 9:u.type = \"unsubscribed\", this.onContactRefuse && this.onContactRefuse(u), null === (s = this.eventHandler) || void 0 === s || s.dispatch(\"onContactRefuse\", u);break;default:n.kg.error(\"handleRosterMsg:\", c);}this.onPresence && u.type && this.onPresence(u);} };t.Z = s;}, 1972: function _(e, t, r) {\"use strict\";function o() {console.log && (console.log.apply ? console.log.apply(console, Array.prototype.slice.call(arguments)) : Function.prototype.apply.apply(console.log, [console, arguments])), console.trace && console.trace();}r.d(t, { kg: function kg() {return h;} });var n,i = \"undefined\" != typeof window && void 0 !== window.navigator && /Trident\\/|MSIE /.test(window.navigator.userAgent),a = function a(e, t, r) {if (r || 2 === arguments.length) for (var o, n = 0, i = t.length; n < i; n++) {!o && n in t || (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);}return e.concat(o || Array.prototype.slice.call(t));},s = function s() {},c = {};!function (e) {e[e.TRACE = 0] = \"TRACE\", e[e.DEBUG = 1] = \"DEBUG\", e[e.INFO = 2] = \"INFO\", e[e.WARN = 3] = \"WARN\", e[e.ERROR = 4] = \"ERROR\", e[e.SILENT = 5] = \"SILENT\";}(n || (n = {}));var u = function () {function e(e, t, r) {this.name = e || \"defaultLogger\", this.currentLevel = 0, this.useCookiePersist = !1, this.storageLogLevelKey = \"loglevel\", this.levels = n, this.logMethods = [\"trace\", \"debug\", \"info\", \"warn\", \"error\"], this.methodFactory = r || this.defaultMethodFactory;var o = this._getPersistedLevel();null == o && (o = null === t ? \"WARN\" : t), this.logs = [], this.config = { useCache: !1, maxCache: 3145728, color: \"\", background: \"\" }, this.logBytes = 0, this.setLevel(o, !1, \"\");}return e.prototype.setConfig = function (e) {this.config = e;}, e.prototype.getLevel = function () {return this.currentLevel;}, e.prototype.setLevel = function (e, t, r) {if (\"string\" == typeof e && (e = n[e]), void 0 === e && (e = 0), !(\"number\" == typeof e && e >= 0 && e <= this.levels.SILENT)) throw Error(\"log.setLevel() called with invalid level: \" + e);if (this.currentLevel = e, !1 !== t && this._persistLevel(e), this.replaceLoggingMethods(e, r), \"undefined\" == typeof console && e < n.SILENT) throw Error(\"No console available for logging\");}, e.prototype.setDefaultLevel = function (e) {this._getPersistedLevel() || this.setLevel(e, !1, \"\");}, e.prototype.enableAll = function (e) {this.setLevel(this.levels.TRACE, !0, \"\");}, e.prototype.disableAll = function (e) {this.setLevel(this.levels.SILENT, !0, \"\");}, e.prototype.getLogs = function () {return this.logs;}, e.prototype.download = function () {if (\"undefined\" != typeof window && \"undefined\" != typeof document) {var e = this.getLogs().join(\"\\n\"),t = new Blob([e], { type: \"text/plain;charset=UTF-8\" }),r = window.URL.createObjectURL(t),o = document.createElement(\"a\");o.style.display = \"none\", o.href = r, o.setAttribute(\"download\", \"sdklog\"), document.body.appendChild(o), o.click();}}, e.prototype._bindMethod = function (e, t, r) {var o = this,n = e[t],i = this.getTime();if (r) return this._cacheLog;if (\"function\" == typeof n.bind) return function () {for (var r = [], i = 0; i < arguments.length; i++) {r[i] = arguments[i];}var s = o.getTime();n.call.apply(n, a([e, \"\".concat(s, \" IM SDK [\").concat(\"log\" === t ? \"debug\" : t, \"]: \")], r, !1)), o.onLog && o.onLog({ time: s, level: \"log\" === t ? \"debug\" : t, logs: r });};try {return Function.prototype.bind.call(n, e, \"\".concat(i, \" IM SDK [\").concat(\"log\" === t ? \"debug\" : t, \"]: \"));} catch (t) {return function () {return Function.prototype.apply.apply(n, [e, arguments]);};}}, e.prototype.getTime = function () {var e = new Date();return e.toTimeString().split(\" \")[0] + \":\" + e.getMilliseconds();}, e.prototype._cacheLog = function () {for (var e = [], t = 0; t < arguments.length; t++) {e[t] = arguments[t];}var r = new Date().toLocaleString() + \": \",o = \"\";e.forEach(function (e) {o += \"object\" == typeof e ? JSON.stringify(e) + \" \" : e + \" \";}), this._cacheLogCall(r + o);}, e.prototype._cacheLogCall = function (e) {var t = l(e),r = this.logBytes + t,o = this.config.maxCache;if (!(t >= o)) {if (r < o) this.logBytes += t;else for (var n = r - o, i = 0; i < n;) {var a = this.logs.shift();void 0 !== a && (i += l(a));}this.logs.push(e);}}, e.prototype._getPersistedLevel = function () {var e;if (\"undefined\" == typeof window) return 5;if (\"undefined\" === (e = window && window.localStorage && window.localStorage[this.storageLogLevelKey])) {var t = window.document.cookie,r = t.indexOf(encodeURIComponent(this.storageLogLevelKey));-1 !== r && (e = /^([^;]+)/.exec(t.slice(r))[1]);}return e || 5;}, e.prototype._persistLevel = function (e) {var t = this.logMethods[e] || \"SILENT\";\"undefined\" != typeof window && (window.localStorage && (window.localStorage[this.storageLogLevelKey] = t), this.useCookiePersist && (window.document.cookie = encodeURIComponent(this.storageLogLevelKey) + \"=\" + t + \";\"));}, e.prototype.replaceLoggingMethods = function (e, t) {for (var r = 0; r < this.logMethods.length; r++) {var o = this.logMethods[r];this[o] = r < e ? s : this.methodFactory(o, e, t);}this.log = this.debug;}, e.prototype.defaultMethodFactory = function (e, t, r) {return this.realMethod(e) || this.enableLoggingWhenConsoleArrives.apply(this, [e, t, r]);}, e.prototype.realMethod = function (e) {return \"debug\" === e && (e = \"log\"), \"undefined\" != typeof console && (\"trace\" === e && i ? o : void 0 !== console[e] ? this._bindMethod(console, e, this.config.useCache) : void 0 !== console.log ? this._bindMethod(console, \"log\", this.config.useCache) : s);}, e.prototype.enableLoggingWhenConsoleArrives = function (e, t, r) {return function () {\"undefined\" != typeof console && (this.replaceLoggingMethods.call(this, t, r), this[e].apply(this, arguments));}.bind(this);}, e;}();function l(e) {for (var t = e.length, r = 0; r < e.length; r++) {e.charCodeAt(r) > 255 && t++;}return t;}var p = new u();p.getLogger = function (e) {if (\"string\" != typeof e || \"\" === e) throw new TypeError(\"You must supply a name when creating a logger.\");return this;};var d = \"undefined\" != typeof window ? window.log : void 0;p.noConflict = function () {return \"undefined\" != typeof window && window.log === p && (window.log = d), p;}, p.getLoggers = function () {return c;};var h = p;}, 2824: function _(e, t, r) {\"use strict\";r.d(t, { Message: function Message() {return m;} });var o = r(4605),n = function () {function e(e) {var t = e.id;this.id = t, this.type = e.type;}return e.prototype.set = function (e) {this.body = { id: this.id, ackId: e.id, type: \"read\", to: e.to, from: e.from || \"\", chatType: e.chatType };}, e.create = function (e) {return { id: o.P6.getUniqueId(), chatType: e.chatType, ackId: e.id, type: \"read\", to: e.to, from: e.from || \"\", ackContent: e.ackContent, isChatThread: e.isChatThread };}, e;}(),i = function () {function e(e) {this.id = e.id, this.type = e.type;}return e.prototype.set = function (e) {this.body = { id: this.id, ackId: e.ackId, type: \"delivery\", to: e.to, from: e.from || \"\" };}, e.create = function (e) {return { id: o.P6.getUniqueId(), ackId: e.ackId, type: \"delivery\", to: e.to, from: e.from || \"\", isChatThread: e.isChatThread };}, e;}(),a = function () {function e(e) {var t = e.type,r = e.id;this.id = r, this.type = t;}return e.prototype.set = function (e) {this.body = { id: this.id, chatType: e.chatType || \"singleChat\", type: \"channel\", to: e.to, from: e.from || \"\", time: Date.now() };}, e.prototype.setChatType = function (e) {return !!this.body && (this.body.chatType = e, !0);}, e.prototype.setGroup = function (e) {return !!this.body && (this.body.group = e, !0);}, e.create = function (e) {return { id: o.P6.getUniqueId(), type: \"channel\", chatType: e.chatType || \"singleChat\", to: e.to, from: e.from || \"\", time: Date.now(), isChatThread: e.isChatThread };}, e;}(),s = function () {function e(e) {var t = e.type,r = e.id || o.P6.getUniqueId();this.id = r, this.type = t, this.value = \"\";}return e.prototype.set = function (e) {this.body = { id: this.id, chatType: e.chatType || \"singleChat\", type: \"txt\", to: e.to, msg: e.msg, from: e.from, roomType: e.roomType, success: e.success, fail: e.fail, ext: e.ext, time: Date.now(), isChatThread: e.isChatThread }, this.value = e.msg;}, e.prototype.setChatType = function (e) {return !!this.body && (this.body.chatType = e, !0);}, e.prototype.setGroup = function (e) {return !!this.body && (this.body.group = e, !0);}, e.create = function (e) {var t, r;return (null === (t = e.msgConfig) || void 0 === t ? void 0 : t.languages) && Array.isArray(null === (r = e.msgConfig) || void 0 === r ? void 0 : r.languages), { type: \"txt\", id: o.P6.getUniqueId(), msg: e.msg, to: e.to, from: e.from || \"\", chatType: e.chatType, ext: e.ext, time: Date.now(), msgConfig: e.msgConfig, isChatThread: e.isChatThread, priority: e.priority };}, e;}(),c = function () {function e(e) {var t = e.type,r = e.id;this.id = r || o.P6.getUniqueId(), this.type = t;}return e.prototype.set = function (e) {this.body = { id: this.id, chatType: e.chatType || \"singleChat\", type: \"cmd\", to: e.to, action: e.action, from: e.from, roomType: e.roomType, success: e.success, fail: e.fail, ext: e.ext, time: Date.now() };}, e.prototype.setChatType = function (e) {return !!this.body && (this.body.chatType = e, !0);}, e.prototype.setGroup = function (e) {return !!this.body && (this.body.group = e, !0);}, e.create = function (e) {return { id: o.P6.getUniqueId(), type: \"cmd\", to: e.to, from: e.from || \"\", chatType: e.chatType || \"singleChat\", action: e.action, time: Date.now(), ext: e.ext, msgConfig: e.msgConfig, isChatThread: e.isChatThread, priority: e.priority };}, e;}(),u = function () {function e(e) {var t = e.type,r = e.id || o.P6.getUniqueId();this.id = r, this.type = t;}return e.prototype.set = function (e) {this.body = { id: this.id, chatType: e.chatType || \"singleChat\", type: \"custom\", to: e.to, customEvent: e.customEvent, customExts: e.customExts, from: e.from, roomType: e.roomType, success: e.success, fail: e.fail, ext: e.ext, time: Date.now() };}, e.prototype.setChatType = function (e) {return !!this.body && (this.body.chatType = e, !0);}, e.prototype.setGroup = function (e) {return !!this.body && (this.body.group = e, !0);}, e.create = function (e) {return { id: o.P6.getUniqueId(), chatType: e.chatType || \"singleChat\", type: \"custom\", to: e.to, customEvent: e.customEvent, customExts: e.customExts, from: e.from || \"\", ext: e.ext, time: Date.now(), msgConfig: e.msgConfig, isChatThread: e.isChatThread, priority: e.priority };}, e;}(),l = function () {function e(e) {var t = e.type,r = e.id;this.id = r || o.P6.getUniqueId(), this.type = t;}return e.prototype.set = function (e) {this.body = { id: this.id, chatType: e.chatType || \"singleChat\", type: \"loc\", to: e.to, addr: e.addr, buildingName: e.buildingName, lat: e.lat, lng: e.lng, from: e.from, roomType: e.roomType, success: e.success, fail: e.fail, ext: e.ext, time: Date.now() };}, e.prototype.setChatType = function (e) {return !!this.body && (this.body.chatType = e, !0);}, e.prototype.setGroup = function (e) {return !!this.body && (this.body.group = e, !0);}, e.create = function (e) {return { id: o.P6.getUniqueId(), chatType: e.chatType || \"singleChat\", type: \"loc\", to: e.to, addr: e.addr, buildingName: e.buildingName, lat: e.lat, lng: e.lng, from: e.from || \"\", ext: e.ext, time: Date.now(), msgConfig: e.msgConfig, isChatThread: e.isChatThread, priority: e.priority };}, e;}(),p = function () {function e(e) {var t = e.type,r = e.id || o.P6.getUniqueId();this.id = r, this.type = t;}return e.prototype.set = function (e) {e.file = e.file || e.fileInputId && o.P6.getFileUrl(e.fileInputId), this.body = { id: this.id, chatType: e.chatType || \"singleChat\", type: \"img\", file: e.file, width: e.width, height: e.height, to: e.to, from: e.from || \"\", roomType: e.roomType, success: e.success, fail: e.fail, ext: e.ext, time: Date.now(), onFileUploadError: e.onFileUploadError, onFileUploadComplete: e.onFileUploadComplete, onFileUploadProgress: e.onFileUploadProgress, body: e.body, isChatThread: e.isChatThread };}, e.prototype.setChatType = function (e) {return !!this.body && (this.body.chatType = e, !0);}, e.prototype.setGroup = function (e) {return !!this.body && (this.body.group = e, !0);}, e.create = function (e) {return { id: o.P6.getUniqueId(), chatType: e.chatType, type: \"img\", url: e.url, width: e.width, height: e.height, file: e.file, to: e.to, from: e.from || \"\", ext: e.ext, time: Date.now(), msgConfig: e.msgConfig, file_length: e.file_length, onFileUploadError: e.onFileUploadError, onFileUploadComplete: e.onFileUploadComplete, onFileUploadProgress: e.onFileUploadProgress, isChatThread: e.isChatThread, priority: e.priority };}, e;}(),d = function () {function e(e) {var t = e.type,r = e.id || o.P6.getUniqueId();this.id = r, this.type = t;}return e.prototype.set = function (e) {e.file = e.file || e.fileInputId && o.P6.getFileUrl(e.fileInputId), this.body = { id: this.id, chatType: e.chatType || \"singleChat\", type: \"audio\", file: e.file, filename: e.filename, length: e.length, file_length: e.file_length, fileInputId: e.fileInputId, to: e.to, from: e.from, roomType: e.roomType, success: e.success, fail: e.fail, ext: e.ext, time: Date.now(), onFileUploadError: e.onFileUploadError, onFileUploadComplete: e.onFileUploadComplete, onFileUploadProgress: e.onFileUploadProgress, body: e.body, isChatThread: e.isChatThread };}, e.prototype.setChatType = function (e) {return !!this.body && (this.body.chatType = e, !0);}, e.prototype.setGroup = function (e) {return !!this.body && (this.body.group = e, !0);}, e.create = function (e) {return { id: o.P6.getUniqueId(), chatType: e.chatType, type: \"audio\", filename: e.filename, length: e.length, file: e.file, to: e.to, from: e.from || \"\", ext: e.ext, time: Date.now(), onFileUploadError: e.onFileUploadError, onFileUploadComplete: e.onFileUploadComplete, onFileUploadProgress: e.onFileUploadProgress, body: e.body, file_length: e.file_length, msgConfig: e.msgConfig, isChatThread: e.isChatThread, priority: e.priority };}, e;}(),h = function () {function e(e) {var t = e.type,r = e.id;this.id = r, this.type = t;}return e.prototype.set = function (e) {e.file = e.file || e.fileInputId && o.P6.getFileUrl(e.fileInputId), this.body = { id: this.id, chatType: e.chatType || \"singleChat\", type: \"video\", file: e.file, filename: e.filename, length: e.length, file_length: e.file_length, fileInputId: e.fileInputId, to: e.to, from: e.from, roomType: e.roomType, success: e.success, fail: e.fail, ext: e.ext, time: Date.now(), apiUrl: e.apiUrl, onFileUploadError: e.onFileUploadError, onFileUploadComplete: e.onFileUploadComplete, onFileUploadProgress: e.onFileUploadProgress, body: e.body, isChatThread: e.isChatThread };}, e.prototype.setChatType = function (e) {return !!this.body && (this.body.chatType = e, !0);}, e.prototype.setGroup = function (e) {return !!this.body && (this.body.group = e, !0);}, e.create = function (e) {return { id: o.P6.getUniqueId(), chatType: e.chatType || \"singleChat\", type: \"video\", file: e.file, filename: e.filename, length: e.length, file_length: e.file_length, fileInputId: e.fileInputId, to: e.to, from: e.from || \"\", ext: e.ext, time: Date.now(), onFileUploadError: e.onFileUploadError, onFileUploadComplete: e.onFileUploadComplete, onFileUploadProgress: e.onFileUploadProgress, body: e.body, msgConfig: e.msgConfig, isChatThread: e.isChatThread, priority: e.priority };}, e;}(),f = function () {function e(e) {var t = e.type,r = e.id;this.id = r, this.type = t;}return e.prototype.set = function (e) {e.file = e.file || e.fileInputId && o.P6.getFileUrl(e.fileInputId), this.body = { id: this.id, chatType: e.chatType || \"singleChat\", type: \"file\", file: e.file, filename: e.filename, fileInputId: e.fileInputId, to: e.to, from: e.from, roomType: e.roomType, success: e.success, fail: e.fail, ext: e.ext, time: Date.now(), onFileUploadError: e.onFileUploadError, onFileUploadComplete: e.onFileUploadComplete, onFileUploadProgress: e.onFileUploadProgress, body: e.body, isChatThread: e.isChatThread };}, e.prototype.setChatType = function (e) {return !!this.body && (this.body.chatType = e, !0);}, e.prototype.setGroup = function (e) {return !!this.body && (this.body.group = e, !0);}, e.create = function (e) {return { id: o.P6.getUniqueId(), chatType: e.chatType || \"singleChat\", type: \"file\", file: e.file, filename: e.filename, fileInputId: e.fileInputId, file_length: e.file_length, to: e.to, from: e.from || \"\", ext: e.ext, onFileUploadError: e.onFileUploadError, onFileUploadComplete: e.onFileUploadComplete, onFileUploadProgress: e.onFileUploadProgress, body: e.body, time: Date.now(), msgConfig: e.msgConfig, isChatThread: e.isChatThread, priority: e.priority };}, e;}(),m = function () {function e(t, r) {return this.type = t, this.id = r || o.P6.getUniqueId(), e.createOldMsg({ type: t, id: this.id });}return e.createOldMsg = function (e) {switch (e.type) {case \"read\":return new n({ type: \"read\", id: e.id });case \"delivery\":return new i({ type: \"delivery\", id: e.id });case \"channel\":return new a({ type: \"channel\", id: e.id });case \"txt\":return new s({ type: \"txt\", id: e.id });case \"cmd\":return new c({ type: \"cmd\", id: e.id });case \"custom\":return new u({ type: \"custom\", id: e.id });case \"loc\":return new l({ type: \"loc\", id: e.id });case \"img\":return new p({ type: \"img\", id: e.id });case \"audio\":return new d({ type: \"audio\", id: e.id });case \"video\":return new h({ type: \"video\", id: e.id });case \"file\":return new f({ type: \"file\", id: e.id });}}, e.create = function (e) {return \"txt\" !== (t = e).type || \"version\" in t ? function (e) {return \"img\" === e.type && !(\"version\" in e);}(e) ? p.create(e) : function (e) {return \"cmd\" === e.type && !(\"version\" in e);}(e) ? c.create(e) : function (e) {return \"file\" === e.type && !(\"version\" in e);}(e) ? f.create(e) : function (e) {return \"audio\" === e.type && !(\"version\" in e);}(e) ? d.create(e) : function (e) {return \"video\" === e.type && !(\"version\" in e);}(e) ? h.create(e) : function (e) {return \"custom\" === e.type && !(\"version\" in e);}(e) ? u.create(e) : function (e) {return \"loc\" === e.type && !(\"version\" in e);}(e) ? l.create(e) : function (e) {return \"channel\" === e.type && !(\"version\" in e);}(e) ? a.create(e) : function (e) {return \"delivery\" === e.type && !(\"version\" in e);}(e) ? i.create(e) : function (e) {return \"read\" === e.type && !(\"version\" in e);}(e) ? n.create(e) : {} : s.create(e);var t;}, e.prototype.set = function (e) {}, e;}();}, 8185: function _(e, t, r) {\"use strict\";var o;r.d(t, { E: function E() {return o;} }), function (e) {e[e.REQUEST_SUCCESS = 0] = \"REQUEST_SUCCESS\", e[e.REQUEST_TIMEOUT = -1] = \"REQUEST_TIMEOUT\", e[e.REQUEST_UNKNOWN = -2] = \"REQUEST_UNKNOWN\", e[e.REQUEST_PARAMETER_ERROR = -3] = \"REQUEST_PARAMETER_ERROR\", e[e.REQUEST_ABORT = -4] = \"REQUEST_ABORT\", e[e.WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR = 0] = \"WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_OPEN_ERROR = 1] = \"WEBIM_CONNCTION_OPEN_ERROR\", e[e.WEBIM_CONNCTION_AUTH_ERROR = 2] = \"WEBIM_CONNCTION_AUTH_ERROR\", e[e.WEBIM_CONNCTION_OPEN_USERGRID_ERROR = 3] = \"WEBIM_CONNCTION_OPEN_USERGRID_ERROR\", e[e.WEBIM_CONNCTION_ATTACH_ERROR = 4] = \"WEBIM_CONNCTION_ATTACH_ERROR\", e[e.WEBIM_CONNCTION_ATTACH_USERGRID_ERROR = 5] = \"WEBIM_CONNCTION_ATTACH_USERGRID_ERROR\", e[e.WEBIM_CONNCTION_REOPEN_ERROR = 6] = \"WEBIM_CONNCTION_REOPEN_ERROR\", e[e.WEBIM_CONNCTION_SERVER_CLOSE_ERROR = 7] = \"WEBIM_CONNCTION_SERVER_CLOSE_ERROR\", e[e.WEBIM_CONNCTION_SERVER_ERROR = 8] = \"WEBIM_CONNCTION_SERVER_ERROR\", e[e.WEBIM_CONNCTION_IQ_ERROR = 9] = \"WEBIM_CONNCTION_IQ_ERROR\", e[e.WEBIM_CONNCTION_PING_ERROR = 10] = \"WEBIM_CONNCTION_PING_ERROR\", e[e.WEBIM_CONNCTION_NOTIFYVERSION_ERROR = 11] = \"WEBIM_CONNCTION_NOTIFYVERSION_ERROR\", e[e.WEBIM_CONNCTION_GETROSTER_ERROR = 12] = \"WEBIM_CONNCTION_GETROSTER_ERROR\", e[e.WEBIM_CONNCTION_CROSSDOMAIN_ERROR = 13] = \"WEBIM_CONNCTION_CROSSDOMAIN_ERROR\", e[e.WEBIM_CONNCTION_LISTENING_OUTOF_MAXRETRIES = 14] = \"WEBIM_CONNCTION_LISTENING_OUTOF_MAXRETRIES\", e[e.WEBIM_CONNCTION_RECEIVEMSG_CONTENTERROR = 15] = \"WEBIM_CONNCTION_RECEIVEMSG_CONTENTERROR\", e[e.WEBIM_CONNCTION_DISCONNECTED = 16] = \"WEBIM_CONNCTION_DISCONNECTED\", e[e.WEBIM_CONNCTION_AJAX_ERROR = 17] = \"WEBIM_CONNCTION_AJAX_ERROR\", e[e.WEBIM_CONNCTION_JOINROOM_ERROR = 18] = \"WEBIM_CONNCTION_JOINROOM_ERROR\", e[e.WEBIM_CONNCTION_GETROOM_ERROR = 19] = \"WEBIM_CONNCTION_GETROOM_ERROR\", e[e.WEBIM_CONNCTION_GETROOMINFO_ERROR = 20] = \"WEBIM_CONNCTION_GETROOMINFO_ERROR\", e[e.WEBIM_CONNCTION_GETROOMMEMBER_ERROR = 21] = \"WEBIM_CONNCTION_GETROOMMEMBER_ERROR\", e[e.WEBIM_CONNCTION_GETROOMOCCUPANTS_ERROR = 22] = \"WEBIM_CONNCTION_GETROOMOCCUPANTS_ERROR\", e[e.WEBIM_CONNCTION_LOAD_CHATROOM_ERROR = 23] = \"WEBIM_CONNCTION_LOAD_CHATROOM_ERROR\", e[e.WEBIM_CONNCTION_NOT_SUPPORT_CHATROOM_ERROR = 24] = \"WEBIM_CONNCTION_NOT_SUPPORT_CHATROOM_ERROR\", e[e.WEBIM_CONNCTION_JOINCHATROOM_ERROR = 25] = \"WEBIM_CONNCTION_JOINCHATROOM_ERROR\", e[e.WEBIM_CONNCTION_QUITCHATROOM_ERROR = 26] = \"WEBIM_CONNCTION_QUITCHATROOM_ERROR\", e[e.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR = 27] = \"WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR = 28] = \"WEBIM_CONNCTION_TOKEN_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_SESSIONID_NOT_ASSIGN_ERROR = 29] = \"WEBIM_CONNCTION_SESSIONID_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_RID_NOT_ASSIGN_ERROR = 30] = \"WEBIM_CONNCTION_RID_NOT_ASSIGN_ERROR\", e[e.WEBIM_CONNCTION_CALLBACK_INNER_ERROR = 31] = \"WEBIM_CONNCTION_CALLBACK_INNER_ERROR\", e[e.WEBIM_CONNCTION_CLIENT_OFFLINE = 32] = \"WEBIM_CONNCTION_CLIENT_OFFLINE\", e[e.WEBIM_CONNCTION_CLIENT_LOGOUT = 33] = \"WEBIM_CONNCTION_CLIENT_LOGOUT\", e[e.WEBIM_CONNCTION_CLIENT_TOO_MUCH_ERROR = 34] = \"WEBIM_CONNCTION_CLIENT_TOO_MUCH_ERROR\", e[e.WEBIM_CONNECTION_ACCEPT_INVITATION_FROM_GROUP = 35] = \"WEBIM_CONNECTION_ACCEPT_INVITATION_FROM_GROUP\", e[e.WEBIM_CONNECTION_DECLINE_INVITATION_FROM_GROUP = 36] = \"WEBIM_CONNECTION_DECLINE_INVITATION_FROM_GROUP\", e[e.WEBIM_CONNECTION_ACCEPT_JOIN_GROUP = 37] = \"WEBIM_CONNECTION_ACCEPT_JOIN_GROUP\", e[e.WEBIM_CONNECTION_DECLINE_JOIN_GROUP = 38] = \"WEBIM_CONNECTION_DECLINE_JOIN_GROUP\", e[e.WEBIM_CONNECTION_CLOSED = 39] = \"WEBIM_CONNECTION_CLOSED\", e[e.WEBIM_CONNECTION_ERROR = 40] = \"WEBIM_CONNECTION_ERROR\", e[e.MAX_LIMIT = 50] = \"MAX_LIMIT\", e[e.MESSAGE_NOT_FOUND = 51] = \"MESSAGE_NOT_FOUND\", e[e.NO_PERMISSION = 52] = \"NO_PERMISSION\", e[e.OPERATION_UNSUPPORTED = 53] = \"OPERATION_UNSUPPORTED\", e[e.OPERATION_NOT_ALLOWED = 54] = \"OPERATION_NOT_ALLOWED\", e[e.WEBIM_UPLOADFILE_BROWSER_ERROR = 100] = \"WEBIM_UPLOADFILE_BROWSER_ERROR\", e[e.WEBIM_UPLOADFILE_ERROR = 101] = \"WEBIM_UPLOADFILE_ERROR\", e[e.WEBIM_UPLOADFILE_NO_LOGIN = 102] = \"WEBIM_UPLOADFILE_NO_LOGIN\", e[e.WEBIM_UPLOADFILE_NO_FILE = 103] = \"WEBIM_UPLOADFILE_NO_FILE\", e[e.WEBIM_DOWNLOADFILE_ERROR = 200] = \"WEBIM_DOWNLOADFILE_ERROR\", e[e.WEBIM_DOWNLOADFILE_NO_LOGIN = 201] = \"WEBIM_DOWNLOADFILE_NO_LOGIN\", e[e.WEBIM_DOWNLOADFILE_BROWSER_ERROR = 202] = \"WEBIM_DOWNLOADFILE_BROWSER_ERROR\", e[e.USER_NOT_FOUND = 204] = \"USER_NOT_FOUND\", e[e.MESSAGE_PARAMETER_ERROR = 205] = \"MESSAGE_PARAMETER_ERROR\", e[e.WEBIM_CONNCTION_USER_LOGIN_ANOTHER_DEVICE = 206] = \"WEBIM_CONNCTION_USER_LOGIN_ANOTHER_DEVICE\", e[e.WEBIM_CONNCTION_USER_REMOVED = 207] = \"WEBIM_CONNCTION_USER_REMOVED\", e[e.WEBIM_CONNCTION_USER_KICKED_BY_CHANGE_PASSWORD = 216] = \"WEBIM_CONNCTION_USER_KICKED_BY_CHANGE_PASSWORD\", e[e.WEBIM_CONNCTION_USER_KICKED_BY_OTHER_DEVICE = 217] = \"WEBIM_CONNCTION_USER_KICKED_BY_OTHER_DEVICE\", e[e.USER_MUTED_BY_ADMIN = 219] = \"USER_MUTED_BY_ADMIN\", e[e.USER_NOT_FRIEND = 221] = \"USER_NOT_FRIEND\", e[e.WEBIM_MESSAGE_REC_TEXT = 300] = \"WEBIM_MESSAGE_REC_TEXT\", e[e.WEBIM_MESSAGE_REC_TEXT_ERROR = 301] = \"WEBIM_MESSAGE_REC_TEXT_ERROR\", e[e.WEBIM_MESSAGE_REC_EMOTION = 302] = \"WEBIM_MESSAGE_REC_EMOTION\", e[e.WEBIM_MESSAGE_REC_PHOTO = 303] = \"WEBIM_MESSAGE_REC_PHOTO\", e[e.WEBIM_MESSAGE_REC_AUDIO = 304] = \"WEBIM_MESSAGE_REC_AUDIO\", e[e.WEBIM_MESSAGE_REC_AUDIO_FILE = 305] = \"WEBIM_MESSAGE_REC_AUDIO_FILE\", e[e.WEBIM_MESSAGE_REC_VEDIO = 306] = \"WEBIM_MESSAGE_REC_VEDIO\", e[e.WEBIM_MESSAGE_REC_VEDIO_FILE = 307] = \"WEBIM_MESSAGE_REC_VEDIO_FILE\", e[e.WEBIM_MESSAGE_REC_FILE = 308] = \"WEBIM_MESSAGE_REC_FILE\", e[e.WEBIM_MESSAGE_SED_TEXT = 309] = \"WEBIM_MESSAGE_SED_TEXT\", e[e.WEBIM_MESSAGE_SED_EMOTION = 310] = \"WEBIM_MESSAGE_SED_EMOTION\", e[e.WEBIM_MESSAGE_SED_PHOTO = 311] = \"WEBIM_MESSAGE_SED_PHOTO\", e[e.WEBIM_MESSAGE_SED_AUDIO = 312] = \"WEBIM_MESSAGE_SED_AUDIO\", e[e.WEBIM_MESSAGE_SED_AUDIO_FILE = 313] = \"WEBIM_MESSAGE_SED_AUDIO_FILE\", e[e.WEBIM_MESSAGE_SED_VEDIO = 314] = \"WEBIM_MESSAGE_SED_VEDIO\", e[e.WEBIM_MESSAGE_SED_VEDIO_FILE = 315] = \"WEBIM_MESSAGE_SED_VEDIO_FILE\", e[e.WEBIM_MESSAGE_SED_FILE = 316] = \"WEBIM_MESSAGE_SED_FILE\", e[e.WEBIM_MESSAGE_SED_ERROR = 317] = \"WEBIM_MESSAGE_SED_ERROR\", e[e.STATUS_INIT = 400] = \"STATUS_INIT\", e[e.STATUS_DOLOGIN_USERGRID = 401] = \"STATUS_DOLOGIN_USERGRID\", e[e.STATUS_DOLOGIN_IM = 402] = \"STATUS_DOLOGIN_IM\", e[e.STATUS_OPENED = 403] = \"STATUS_OPENED\", e[e.STATUS_CLOSING = 404] = \"STATUS_CLOSING\", e[e.STATUS_CLOSED = 405] = \"STATUS_CLOSED\", e[e.STATUS_ERROR = 406] = \"STATUS_ERROR\", e[e.SERVER_BUSY = 500] = \"SERVER_BUSY\", e[e.MESSAGE_INCLUDE_ILLEGAL_CONTENT = 501] = \"MESSAGE_INCLUDE_ILLEGAL_CONTENT\", e[e.MESSAGE_EXTERNAL_LOGIC_BLOCKED = 502] = \"MESSAGE_EXTERNAL_LOGIC_BLOCKED\", e[e.SERVER_UNKNOWN_ERROR = 503] = \"SERVER_UNKNOWN_ERROR\", e[e.MESSAGE_RECALL_TIME_LIMIT = 504] = \"MESSAGE_RECALL_TIME_LIMIT\", e[e.SERVICE_NOT_ENABLED = 505] = \"SERVICE_NOT_ENABLED\", e[e.SERVICE_NOT_ALLOW_MESSAGING = 506] = \"SERVICE_NOT_ALLOW_MESSAGING\", e[e.SERVICE_NOT_ALLOW_MESSAGING_MUTE = 507] = \"SERVICE_NOT_ALLOW_MESSAGING_MUTE\", e[e.MESSAGE_MODERATION_BLOCKED = 508] = \"MESSAGE_MODERATION_BLOCKED\", e[e.MESSAGE_CURRENT_LIMITING = 509] = \"MESSAGE_CURRENT_LIMITING\", e[e.MESSAGE_WEBSOCKET_DISCONNECTED = 510] = \"MESSAGE_WEBSOCKET_DISCONNECTED\", e[e.GROUP_NOT_EXIST = 605] = \"GROUP_NOT_EXIST\", e[e.GROUP_NOT_JOINED = 602] = \"GROUP_NOT_JOINED\", e[e.GROUP_MEMBERS_FULL = 606] = \"GROUP_MEMBERS_FULL\", e[e.PERMISSION_DENIED = 603] = \"PERMISSION_DENIED\", e[e.WEBIM_LOAD_MSG_ERROR = 604] = \"WEBIM_LOAD_MSG_ERROR\", e[e.GROUP_ALREADY_JOINED = 601] = \"GROUP_ALREADY_JOINED\", e[e.GROUP_MEMBERS_LIMIT = 607] = \"GROUP_MEMBERS_LIMIT\", e[e.GROUP_IS_DISABLED = 608] = \"GROUP_IS_DISABLED\", e[e.REST_PARAMS_STATUS = 700] = \"REST_PARAMS_STATUS\", e[e.CHATROOM_NOT_JOINED = 702] = \"CHATROOM_NOT_JOINED\", e[e.CHATROOM_MEMBERS_FULL = 704] = \"CHATROOM_MEMBERS_FULL\", e[e.CHATROOM_NOT_EXIST = 705] = \"CHATROOM_NOT_EXIST\", e[e.SDK_RUNTIME_ERROR = 999] = \"SDK_RUNTIME_ERROR\", e[e.PRESENCE_PARAM_EXCEED = 1100] = \"PRESENCE_PARAM_EXCEED\", e[e.REACTION_ALREADY_ADDED = 1101] = \"REACTION_ALREADY_ADDED\", e[e.REACTION_CREATING = 1102] = \"REACTION_CREATING\", e[e.REACTION_OPERATION_IS_ILLEGAL = 1103] = \"REACTION_OPERATION_IS_ILLEGAL\", e[e.TRANSLATION_NOT_VALID = 1200] = \"TRANSLATION_NOT_VALID\", e[e.TRANSLATION_TEXT_TOO_LONG = 1201] = \"TRANSLATION_TEXT_TOO_LONG\", e[e.TRANSLATION_FAILED = 1204] = \"TRANSLATION_FAILED\", e[e.THREAD_NOT_EXIST = 1300] = \"THREAD_NOT_EXIST\", e[e.THREAD_ALREADY_EXIST = 1301] = \"THREAD_ALREADY_EXIST\";}(o || (o = {}));}, 4605: function _(e, t, r) {\"use strict\";r.d(t, { iw: function iw() {return f;}, hj: function hj() {return u;}, LR: function LR() {return T;}, cT: function cT() {return y;}, P6: function P6() {return v;} });var o = r(8185),_n2 = function n() {return _n2 = Object.assign || function (e) {for (var t, r = 1, o = arguments.length; r < o; r++) {for (var n in t = arguments[r]) {Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);}}return e;}, _n2.apply(this, arguments);},i = r(5699),a = r(1972),_s = function s() {return _s = Object.assign || function (e) {for (var t, r = 1, o = arguments.length; r < o; r++) {for (var n in t = arguments[r]) {Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);}}return e;}, _s.apply(this, arguments);},c = function c() {};function u(e, t) {var r,u = this;return E().platform === f.WEB ? new Promise(function (t, i) {var s = e.dataType || \"text\",u = e.success || c,l = e.error || c,p = new XMLHttpRequest();p.ontimeout = function () {i({ type: o.E.REQUEST_TIMEOUT, message: \"Request Timeout\", errorType: \"timeout_error\", xhr: p });}, p.onerror = function () {i({ type: o.E.REQUEST_UNKNOWN, message: \"Request Unknow Error\", errorType: \"onerror\", xhr: p });}, p.onabort = function () {i({ type: o.E.REQUEST_ABORT, message: \"Request Abort\", errorType: \"onabort\", xhr: p });}, p.onreadystatechange = function () {if (4 === p.readyState) {var e = new Date().getTime() - r,c = p.status || 0,d = { elapse: e, httpCode: c };if (200 === c) {v.ajaxUnconventionalErrorTimes = 0;try {switch (s) {case \"text\":return u(p.responseText), void t(p.responseText);case \"json\":var h = JSON.parse(p.responseText);return h.extraInfo = d, u(h), void t(h);case \"xml\":return p.responseXML && p.responseXML.documentElement ? (u(p.responseXML.documentElement), void t(p.responseXML.documentElement)) : (l({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: p.responseText, message: \"XHR.responseXML is null or XHR.responseXML.documentElement is null\" }), void i({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: p.responseText, message: \"XHR.responseXML is null or XHR.responseXML.documentElement is null\" }));default:l({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: p.responseText, message: \"Invalid dataType\" }), i({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: p.responseText, message: \"Invalid dataType\" });}return t(p.response || p.responseText), void u(p.response || p.responseText, p);} catch (e) {i(e);}return;}[400, 401, 403, 404, 429, 500, 503].includes(c) || (a.kg.debug(\"rest api request fail status:\", c), v.ajaxUnconventionalErrorTimes++), function (e, t, r, i) {var a,s,c,u,l,p,d,h,f,m,E,g,y,T,_,v,R,O,I,S,N = e.response;N && \"string\" == typeof N && (N = JSON.parse(N));var C = e.status,A = { elapse: i, httpCode: C, errDesc: null == N ? void 0 : N.error_description };if (400 === C) {if (40002 === N.error_code) return void t({ type: o.E.THREAD_ALREADY_EXIST, message: null == N ? void 0 : N.error_description, extraInfo: A });if (40009 === N.error_code) return void t({ type: o.E.OPERATION_UNSUPPORTED, message: null == N ? void 0 : N.error_description, extraInfo: A });if (60010 === N.error_code) return void t({ type: o.E.NO_PERMISSION, message: null == N ? void 0 : N.desc });if (60011 === N.error_code) return void t({ type: o.E.CHATROOM_NOT_JOINED, message: null == N ? void 0 : N.desc });if (60012 === N.error_code) return void t({ type: o.E.MAX_LIMIT, message: null == N ? void 0 : N.desc });if (null === (a = N.error_description) || void 0 === a ? void 0 : a.includes(\"are not members of this group\")) return (null === (s = e.responseURL) || void 0 === s ? void 0 : s.includes(\"chatgroups\")) ? t({ type: o.E.GROUP_NOT_JOINED, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : t({ type: o.E.CHATROOM_NOT_JOINED, data: e.response || e.responseText, message: N.error_description, extraInfo: A }), void r({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, message: null == N ? void 0 : N.error_description, data: e.responseText, extraInfo: A });if (\"the app not open presence\" === (null == N ? void 0 : N.result)) return void t({ type: o.E.SERVICE_NOT_ENABLED, message: null == N ? void 0 : N.result, extraInfo: A });switch (null == N ? void 0 : N.error_description) {case \"the user is already operation this message\":t({ type: o.E.REACTION_ALREADY_ADDED, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"The quantity has exceeded the limit!\":t({ type: o.E.MAX_LIMIT, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"The user not in this group!\":t({ type: o.E.GROUP_NOT_JOINED, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"the user operation is illegal!\":t({ type: o.E.REACTION_OPERATION_IS_ILLEGAL, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"this appKey is not open reaction service!\":case \"this appKey not open message roaming\":t({ type: o.E.SERVICE_NOT_ENABLED, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"this message is creating reaction, please try again.\":t({ type: o.E.REACTION_CREATING, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"groupId can not be null!\":t({ type: o.E.GROUP_NOT_EXIST, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"The input text is too long.\":t({ type: o.E.TRANSLATION_TEXT_TOO_LONG, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"The target language is not valid.\":t({ type: o.E.TRANSLATION_NOT_VALID, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"report failed, get message by id failed\":t({ type: o.E.MESSAGE_NOT_FOUND, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"ext is too big \":t({ type: o.E.PRESENCE_PARAM_EXCEED, message: null == N ? void 0 : N.error_description, extraInfo: A });break;case \"Request body not readable.Please check content type is correct!\":t({ type: o.E.REQUEST_PARAMETER_ERROR, message: null == N ? void 0 : N.error_description, extraInfo: A });break;default:t({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, message: null == N ? void 0 : N.error_description, data: e.responseText, extraInfo: A }), r({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, message: null == N ? void 0 : N.error_description, data: e.responseText, extraInfo: A });}} else if (401 === C) 40001 === N.error_code || \"Unable to authenticate (OAuth)\" === N.error_description ? t({ type: o.E.NO_PERMISSION, message: null == N ? void 0 : N.error_description, extraInfo: A }) : (r({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.responseText, message: e.responseText, extraInfo: A }), t({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.responseText, message: e.responseText, extraInfo: A }));else if (403 === C) 4e4 === N.error_code ? t({ type: o.E.SERVICE_NOT_ENABLED, message: null == N ? void 0 : N.error_description, extraInfo: A }) : 40003 === N.error_code || 40004 === N.error_code ? t({ type: o.E.THREAD_ALREADY_EXIST, message: null == N ? void 0 : N.error_description, extraInfo: A }) : (40005 === N.error_code || 40007 === N.error_code) && t({ type: o.E.MAX_LIMIT, message: null == N ? void 0 : N.error_description, extraInfo: A }), \"group member list is full!\" === N.error_description ? (null === (c = e.responseURL) || void 0 === c ? void 0 : c.includes(\"chatgroups\")) ? t({ type: o.E.GROUP_MEMBERS_FULL, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : t({ type: o.E.CHATROOM_MEMBERS_FULL, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : (null === (u = N.error_description) || void 0 === u ? void 0 : u.includes(N.error_description.includes(\"already in group\"))) ? (null === (l = e.responseURL) || void 0 === l ? void 0 : l.includes(\"chatgroups\")) && t({ type: o.E.GROUP_ALREADY_JOINED, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : (null === (p = N.error_description) || void 0 === p ? void 0 : p.includes(\"are not members of this group\")) ? (null === (d = e.responseURL) || void 0 === d ? void 0 : d.includes(\"chatgroups\")) ? t({ type: o.E.GROUP_NOT_JOINED, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : t({ type: o.E.CHATROOM_NOT_JOINED, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : (null === (h = N.error_description) || void 0 === h ? void 0 : h.includes(\"service not open!\")) || (null === (f = N.error_description) || void 0 === f ? void 0 : f.includes(\"message report not open\")) || (null === (m = N.error_description) || void 0 === m ? void 0 : m.includes(\"messageroaming function not open\")) ? t({ type: o.E.SERVICE_NOT_ENABLED, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : (null === (E = N.error_description) || void 0 === E ? void 0 : E.includes(\"members size is greater than max user size !\")) ? t({ type: o.E.GROUP_MEMBERS_LIMIT, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : (null === (g = N.error_description) || void 0 === g ? void 0 : g.includes(\"can not operate this group, reason: group is disabled\")) ? t({ type: o.E.GROUP_IS_DISABLED, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : t({ type: o.E.PERMISSION_DENIED, data: e.response || e.responseText, message: \"permission denied\", extraInfo: _n2(_n2({}, A), { errDesc: \"permission denied\" }) }), r({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.responseText, message: e.responseText, extraInfo: A });else if (404 === C) 40011 === N.error_code ? t({ type: o.E.THREAD_NOT_EXIST, message: null == N ? void 0 : N.error_description, extraInfo: A }) : 40012 === N.error_code && t({ type: o.E.NO_PERMISSION, message: null == N ? void 0 : N.error_description, extraInfo: A }), (null === (y = N.error_description) || void 0 === y ? void 0 : y.includes(\"do not find this group\")) || (null === (T = N.error_description) || void 0 === T ? void 0 : T.includes(\"does not exist\")) ? (null === (_ = e.responseURL) || void 0 === _ ? void 0 : _.includes(\"chatgroups\")) ? t({ type: o.E.GROUP_NOT_EXIST, data: e.response || e.responseText, message: \"The chat room dose not exist.\", extraInfo: _n2(_n2({}, A), { errDesc: \"The chat room dose not exist.\" }) }) : t({ type: o.E.CHATROOM_NOT_EXIST, data: e.response || e.responseText, message: \"The chat room dose not exist.\", extraInfo: _n2(_n2({}, A), { errDesc: \"The chat room dose not exist.\" }) }) : (null === (v = N.error_description) || void 0 === v ? void 0 : v.includes(\"username\")) && (null === (R = N.error_description) || void 0 === R ? void 0 : R.includes(\"doesn't exist!'\")) || (null === (O = N.error_description) || void 0 === O ? void 0 : O.includes(\"user not found\")) ? t({ type: o.E.USER_NOT_FOUND, data: e.response || e.responseText, message: N.error_description, extraInfo: A }) : t({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.response || e.responseText, message: e.responseText, extraInfo: A }), r({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.response || e.responseText, message: e.responseText, extraInfo: A });else if (429 === C || 503 === C) {if (null === (I = N.error_description) || void 0 === I ? void 0 : I.includes(\"The request has reached the maximum limit\")) return void t({ type: o.E.MAX_LIMIT, message: e.responseText, extraInfo: A });t({ type: o.E.SERVER_BUSY, data: e.response || e.responseText, message: \"Server is busy.\", extraInfo: _n2(_n2({}, A), { errDesc: \"Server is busy.\" }) }), r({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.responseText, message: \"Server is busy.\", extraInfo: _n2(_n2({}, A), { errDesc: \"Server is busy.\" }) });} else if (500 === C) {if ((40006 === N.error_code || 40008 === N.error_code || 40010 === N.error_code) && t({ type: o.E.SERVER_UNKNOWN_ERROR, message: null == N ? void 0 : N.error_description, extraInfo: A }), null === (S = N.error_description) || void 0 === S ? void 0 : S.includes(\"translte failed!\")) return void t({ type: o.E.TRANSLATION_FAILED, message: e.responseText, extraInfo: A });t({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.responseText, message: \"\", extraInfo: A }), r({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.responseText, message: \"\", extraInfo: A });} else t({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.responseText, message: e.responseText, extraInfo: _n2(_n2({}, A), { errDesc: \"ajax error\" }) }), r({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: e.responseText, message: e.responseText, extraInfo: _n2(_n2({}, A), { errDesc: \"ajax error\" }) });}(p, i, l, e);}0 === p.readyState && (l({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: p.responseText, message: \"Request not initialized\" }), i({ type: o.E.WEBIM_CONNCTION_AJAX_ERROR, data: p.responseText, message: \"Request not initialized\" }));}, e.responseType && p.responseType && (p.responseType = e.responseType), e.mimeType && p.overrideMimeType(e.mimeType);var d = e.type || \"POST\",h = e.data || null,f = \"\";if (\"get\" === d.toLowerCase() && h) {for (var m in h) {h.hasOwnProperty(m) && (f += m + \"=\" + h[m] + \"&\");}f = f ? f.slice(0, -1) : f, e.url += (e.url.indexOf(\"?\") > 0 ? \"&\" : \"?\") + (f ? f + \"&\" : f) + \"_v=\" + new Date().getTime(), h = null, f = \"\";}r = new Date().getTime(), p.open(d, e.url);var E = e.headers || {};for (var g in E[\"Content-Type\"] || (E[\"Content-Type\"] = \"application/json\"), E) {E.hasOwnProperty(g) && p.setRequestHeader(g, E[g]);}p.send(h);}).then(function (r) {return u.dataReport && t && t !== i.fI.SDK_INTERNAL && u.dataReport.geOperateFun({ operationName: t })({ isEndApi: !0, data: _s({ isSuccess: 1, requestUrl: e.url, requestName: t, requestMethod: e.type }, _(r.extraInfo)) }), t !== i.fI.SDK_INTERNAL && delete r.extraInfo, \"Object\" === l(r) ? _s(_s({}, r), { type: o.E.REQUEST_SUCCESS }) : { data: r, type: o.E.REQUEST_SUCCESS };}).catch(function (r) {throw u.dataReport && t && t !== i.fI.SDK_INTERNAL && u.dataReport.geOperateFun({ operationName: t })({ isEndApi: !0, data: _s({ isSuccess: 0, requestUrl: e.url, requestName: t, requestMethod: e.type }, _(r.extraInfo)) }), t !== i.fI.SDK_INTERNAL && delete r.extraInfo, r;}) : p.call(this, e);}function l(e) {return Object.prototype.toString.call(e).slice(8, -1);}function p(e, t) {var r = this;return new Promise(function (t, r) {var o = e.success || c,n = e.error || c,i = e.type || \"POST\",a = e.data || null,s = \"\",u = new Date().getTime(),l = v.getEnvInfo();if (\"get\" === i.toLowerCase() && a) {for (var p in a) {a.hasOwnProperty(p) && (s += p + \"=\" + a[p] + \"&\");}s = s ? s.slice(0, -1) : s, e.url += (e.url.indexOf(\"?\") > 0 ? \"&\" : \"?\") + (s ? s + \"&\" : s) + \"_v=\" + new Date().getTime(), a = null, s = \"\";}var d = { url: e.url, data: e.data, method: i, headers: {}, success: function success(e) {var i,a,s,c,l,p = { elapse: new Date().getTime() - u, httpCode: Number((null === (i = e.statusCode) || void 0 === i ? void 0 : i.toString()) || (null === (a = e.status) || void 0 === a ? void 0 : a.toString())), errDesc: (null === (s = null == e ? void 0 : e.data) || void 0 === s ? void 0 : s.error_description) || \"\" };if (\"200\" === (null === (c = e.statusCode) || void 0 === c ? void 0 : c.toString()) || \"200\" === (null === (l = e.status) || void 0 === l ? void 0 : l.toString())) {e.data.extraInfo = p;var d = e.data;o(d), t(d);} else e.extraInfo = p, n(d = e), r(d);}, complete: function complete() {}, fail: function fail(e) {n(e), r(e);} };if (\"zfb\" === l.platform || \"dd\" === l.platform ? d.headers = e.headers : d.header = e.headers, \"dd\" === l.platform) return dd.httpRequest(d);l.global.request(d);}).then(function (n) {return r.dataReport && t && t !== i.fI.SDK_INTERNAL && r.dataReport.geOperateFun({ operationName: t })({ isEndApi: !0, data: _s({ isSuccess: 1, requestUrl: e.url, requestName: t, requestMethod: e.type }, _(n.extraInfo)) }), t !== i.fI.SDK_INTERNAL && delete n.extraInfo, \"Object\" === l(n) ? _s(_s({}, n), { type: o.E.REQUEST_SUCCESS }) : { data: n, type: o.E.REQUEST_SUCCESS };}).catch(function (o) {throw r.dataReport && t && t !== i.fI.SDK_INTERNAL && r.dataReport.geOperateFun({ operationName: t })({ isEndApi: !0, data: _s({ isSuccess: 0, requestUrl: e.url, requestName: t, requestMethod: e.type }, _(o.extraInfo)) }), t !== i.fI.SDK_INTERNAL && delete o.extraInfo, o;});}var d,h,f,m = (d = function d(e, t) {var r = E();if (r.platform !== f.WEB) {var o = r.global,n = function n(r) {r.isConnected ? e() : t();};o.offNetworkStatusChange && o.offNetworkStatusChange(n), o.onNetworkStatusChange && o.onNetworkStatusChange(n);} else \"undefined\" != typeof addEventListener && (window.addEventListener(\"online\", e), window.addEventListener(\"offline\", t));}, function () {for (var e = [], t = 0; t < arguments.length; t++) {e[t] = arguments[t];}if (!d) return h;h = d.apply(void 0, e), d = null;});function E() {return \"undefined\" != typeof swan && g(swan) ? { platform: f.BAIDU, global: swan } : \"undefined\" != typeof tt && g(tt) ? { platform: f.TT, global: tt } : \"undefined\" != typeof dd && g(dd) ? { platform: f.DD, global: dd } : \"undefined\" != typeof my && g(my) ? { platform: f.ZFB, global: my } : \"undefined\" != typeof wx && g(wx) ? { platform: f.WX, global: wx } : \"undefined\" != typeof uni && g(uni) ? { platform: f.UNI, global: uni } : \"undefined\" != typeof window && window.WebSocket ? { platform: f.WEB, global: window } : { platform: f.NODE, global: r.g || {} };}function g(e) {for (var t = [\"canIUse\", \"getSystemInfo\"], r = 0, o = t.length; r < o; r++) {if (!e[t[r]]) return !1;}return !0;}function y(e, t) {var r,n,a = this,s = new Date().getTime(),u = e.accessToken;if (u) {var l = e.appKey,p = [],d = \"\",h = \"\";if (l && (d = (p = l.split(\"#\"))[0], h = p[1]), d || h) {var f = e.apiUrl,m = e.uploadUrl || f + \"/\" + d + \"/\" + h + \"/chatfiles\";if ((null === (n = null === (r = null == e ? void 0 : e.file) || void 0 === r ? void 0 : r.data) || void 0 === n ? void 0 : n.size) <= 0) e.onFileUploadError && e.onFileUploadError({ type: o.E.WEBIM_UPLOADFILE_ERROR, message: \"fileSize must be greater than 0\" });else {var E = new XMLHttpRequest();E.upload && E.upload.addEventListener(\"progress\", e.onFileUploadProgress || c, !1), E.addEventListener(\"abort\", e.onFileUploadCanceled || c, !1), E.addEventListener(\"error\", function (e) {y({ type: o.E.WEBIM_UPLOADFILE_ERROR, data: E });}, !1), E.addEventListener(\"load\", function (r) {try {var n = JSON.parse(E.responseText);if (400 === E.status) return y({ type: o.E.WEBIM_UPLOADFILE_ERROR, data: n }), !1;try {!function (r) {var o = new Date().getTime() - s;a.dataReport && t && [i.fI.UPLOAD_MSG_ATTACH, i.fI.UPLOAD_CHATROOM_FILE, i.fI.UPLOAD_GROUP_FILE].includes(t) && a.dataReport.geOperateFun({ operationName: t })({ isEndApi: !0, data: { isSuccess: (null == r ? void 0 : r.error) ? 0 : 1, requestMethod: \"POST\", requestName: t, requestElapse: o, requestUrl: m, code: E.status, codeDesc: (null == r ? void 0 : r.error_description) || \"\" } }), e.onFileUploadComplete && e.onFileUploadComplete(r);}(n);} catch (r) {y({ type: o.E.WEBIM_CONNCTION_CALLBACK_INNER_ERROR, data: r });}} catch (r) {y({ type: o.E.WEBIM_UPLOADFILE_ERROR, data: E.responseText });}}, !1), E.open(\"POST\", m), E.setRequestHeader(\"restrict-access\", \"true\"), E.setRequestHeader(\"Accept\", \"*/*\"), E.setRequestHeader(\"Authorization\", \"Bearer \" + u);var g = new FormData();g.append(\"file\", e.file.data), E.send(g);}} else e.onFileUploadError && e.onFileUploadError({ type: o.E.WEBIM_UPLOADFILE_ERROR, message: \"AppKey illegal\" });} else e.onFileUploadError && e.onFileUploadError({ type: o.E.WEBIM_UPLOADFILE_NO_LOGIN, message: \"AccessToken cannot be empty\" });function y(r) {var o = new Date().getTime() - s;a.dataReport && t && [i.fI.UPLOAD_MSG_ATTACH, i.fI.UPLOAD_CHATROOM_FILE, i.fI.UPLOAD_GROUP_FILE].includes(t) && a.dataReport.geOperateFun({ operationName: t })({ isEndApi: !0, data: { isSuccess: 0, requestMethod: \"POST\", requestName: t, requestElapse: o, requestUrl: m, code: (null == E ? void 0 : E.status) || 0, codeDesc: \"upload file error\" } }), e.onFileUploadError && e.onFileUploadError(r);}}function T(e, t) {e.onFileDownloadComplete = e.onFileDownloadComplete || c, e.onFileDownloadError = e.onFileDownloadError || c;var r = new Date().getTime(),n = new XMLHttpRequest(),a = this;n.addEventListener(\"load\", function (o) {var s = new Date().getTime() - r;a.dataReport && t && t === i.fI.DOWN_GROUP_FILE && a.dataReport.geOperateFun({ operationName: t })({ isEndApi: !0, data: { isSuccess: 200 === n.status ? 1 : 0, requestMethod: \"POST\", requestName: t, requestElapse: s, requestUrl: null == e ? void 0 : e.url, code: n.status, codeDesc: 200 === n.status ? \"\" : \"download file error\" } }), e.onFileDownloadComplete && e.onFileDownloadComplete(n.response);}, !1), n.addEventListener(\"error\", function (s) {var c = new Date().getTime() - r;a.dataReport && t && t === i.fI.DOWN_GROUP_FILE && a.dataReport.geOperateFun({ operationName: t })({ isEndApi: !0, data: { isSuccess: 0, requestMethod: \"POST\", requestName: t, requestElapse: c, requestUrl: null == e ? void 0 : e.url, code: (null == n ? void 0 : n.status) || 0, codeDesc: \"download file error\" } }), e.onFileDownloadError && e.onFileDownloadError({ type: o.E.WEBIM_DOWNLOADFILE_ERROR, id: e.id, xhr: n });}, !1);var s = e.method || \"GET\",u = e.responseType || \"blob\",l = e.mimeType || \"text/plain; charset=x-user-defined\";n.open(s, e.url), \"undefined\" != typeof Blob ? n.responseType = u : n.overrideMimeType(l);var p = { \"X-Requested-With\": \"XMLHttpRequest\", Accept: \"application/octet-stream\", \"share-secret\": e.secret, Authorization: \"Bearer \" + this.context.accessToken },d = e.headers || {};for (var h in d) {p[h] = d[h];}for (var h in p) {p[h] && n.setRequestHeader(h, p[h]);}n.send(null);}function _(e) {void 0 === e && (e = {});var t = e.elapse,r = void 0 === t ? 0 : t,o = e.httpCode,n = void 0 === o ? 0 : o,i = e.errDesc;return { requestElapse: r, code: n, codeDesc: void 0 === i ? \"\" : i };}!function (e) {e.WEB = \"web\", e.WX = \"wx\", e.ZFB = \"zfb\", e.DD = \"dd\", e.TT = \"tt\", e.BAIDU = \"baidu\", e.QUICK_APP = \"quick_app\", e.UNI = \"uni\", e.NODE = \"node\";}(f || (f = {}));var v = { autoIncrement: 0, ajaxUnconventionalErrorTimes: 0, ajax: u, getUniqueId: function getUniqueId() {this.autoIncrement ? this.autoIncrement++ : this.autoIncrement = 1;var e = new Date(),t = new Date(2010, 1, 1);return (e.getTime() - t.getTime() + this.autoIncrement).toString();}, getFileUrl: function getFileUrl(e) {var t = { url: \"\", filename: \"\", filetype: \"\", data: {} },r = \"string\" == typeof e ? document.getElementById(e) : e;if (window.URL.createObjectURL) {if (!r.files) throw Error(\"this is not HTMLInputElement\");var o = r.files;if (o.length > 0) {var n = o.item(0);t.data = n, t.url = window.URL.createObjectURL(n), t.filename = (null == n ? void 0 : n.name) || \"\";}} else {if (\"string\" != typeof e) throw Error(\"in IE fileInputId must be string\");n = document.getElementById(e).value, t.url = n;var i = n.lastIndexOf(\"/\"),a = n.lastIndexOf(\"\\\\\"),s = Math.max(i, a);t.filename = s < 0 ? n : n.substring(s + 1);}var c = t.filename.lastIndexOf(\".\");return -1 !== c && (t.filetype = t.filename.substring(c + 1).toLowerCase()), t;}, uploadFile: y, flow: function flow(e) {for (var t = e.length, r = t; r--;) {if (\"function\" != typeof e[r]) throw new TypeError(\"Expected a function\");}return function () {for (var r = [], o = 0; o < arguments.length; o++) {r[o] = arguments[o];}for (var n = 0, i = t ? e[n].apply(this, r) : r[0]; ++n < t;) {i = e[n].call(this, i);}return i;};}, listenNetwork: m, getEnvInfo: E, wxRequest: p, parseDownloadResponse: function parseDownloadResponse(e) {if (!window || !window.URL) throw Error(\"parseDownloadResponse can be used in broswer only\");return e && e.type && \"application/json\" === e.type || 0 > Object.prototype.toString.call(e).indexOf(\"Blob\") ? this.url + \"?token=\" : window.URL.createObjectURL(e);}, download: T, parseNotify: function parseNotify(e) {for (var t = \"\", r = 0; r < e.length; r++) {t += \"%\" + e[r].toString(16);}return JSON.parse(decodeURIComponent(t));}, getExtraData: _ };}, 7969: function _(e) {\"use strict\";function t() {this._listeners = {};}e.exports = t, t.prototype.on = function (e, t, r) {return (this._listeners[e] || (this._listeners[e] = [])).push({ fn: t, ctx: r || this }), this;}, t.prototype.off = function (e, t) {if (void 0 === e) this._listeners = {};else if (void 0 === t) this._listeners[e] = [];else for (var r = this._listeners[e], o = 0; o < r.length;) {r[o].fn === t ? r.splice(o, 1) : ++o;}return this;}, t.prototype.emit = function (e) {var t = this._listeners[e];if (t) {for (var r = [], o = 1; o < arguments.length;) {r.push(arguments[o++]);}for (o = 0; o < t.length;) {t[o].fn.apply(t[o++].ctx, r);}}return this;};}, 6728: function _(e) {\"use strict\";e.exports = function (e, t) {for (var r = new Array(arguments.length - 1), o = 0, n = 2, i = !0; n < arguments.length;) {r[o++] = arguments[n++];}return new Promise(function (n, a) {r[o] = function (e) {if (i) if (i = !1, e) a(e);else {for (var t = new Array(arguments.length - 1), r = 0; r < t.length;) {t[r++] = arguments[r];}n.apply(null, t);}};try {e.apply(t || null, r);} catch (e) {i && (i = !1, a(e));}});};}, 5889: function _(e) {\"use strict\";var t = e.exports;t.length = function (e) {var t = e.length;if (!t) return 0;for (var r = 0; --t % 4 > 1 && \"=\" === e.charAt(t);) {++r;}return Math.ceil(3 * e.length) / 4 - r;};for (var r = new Array(64), o = new Array(123), n = 0; n < 64;) {o[r[n] = n < 26 ? n + 65 : n < 52 ? n + 71 : n < 62 ? n - 4 : n - 59 | 43] = n++;}t.encode = function (e, t, o) {for (var n, i = null, a = [], s = 0, c = 0; t < o;) {var u = e[t++];switch (c) {case 0:a[s++] = r[u >> 2], n = (3 & u) << 4, c = 1;break;case 1:a[s++] = r[n | u >> 4], n = (15 & u) << 2, c = 2;break;case 2:a[s++] = r[n | u >> 6], a[s++] = r[63 & u], c = 0;}s > 8191 && ((i || (i = [])).push(String.fromCharCode.apply(String, a)), s = 0);}return c && (a[s++] = r[n], a[s++] = 61, 1 === c && (a[s++] = 61)), i ? (s && i.push(String.fromCharCode.apply(String, a.slice(0, s))), i.join(\"\")) : String.fromCharCode.apply(String, a.slice(0, s));};var i = \"invalid encoding\";t.decode = function (e, t, r) {for (var n, a = r, s = 0, c = 0; c < e.length;) {var u = e.charCodeAt(c++);if (61 === u && s > 1) break;if (void 0 === (u = o[u])) throw Error(i);switch (s) {case 0:n = u, s = 1;break;case 1:t[r++] = n << 2 | (48 & u) >> 4, n = u, s = 2;break;case 2:t[r++] = (15 & n) << 4 | (60 & u) >> 2, n = u, s = 3;break;case 3:t[r++] = (3 & n) << 6 | u, s = 0;}}if (1 === s) throw Error(i);return r - a;}, t.test = function (e) {return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e);};}, 3072: function _(e) {e.exports = o;var t,r = /\\/|\\./;function o(e, t) {r.test(e) || (e = \"google/protobuf/\" + e + \".proto\", t = { nested: { google: { nested: { protobuf: { nested: t } } } } }), o[e] = t;}o(\"any\", { Any: { fields: { type_url: { type: \"string\", id: 1 }, value: { type: \"bytes\", id: 2 } } } }), o(\"duration\", { Duration: t = { fields: { seconds: { type: \"int64\", id: 1 }, nanos: { type: \"int32\", id: 2 } } } }), o(\"timestamp\", { Timestamp: t }), o(\"empty\", { Empty: { fields: {} } }), o(\"struct\", { Struct: { fields: { fields: { keyType: \"string\", type: \"Value\", id: 1 } } }, Value: { oneofs: { kind: { oneof: [\"nullValue\", \"numberValue\", \"stringValue\", \"boolValue\", \"structValue\", \"listValue\"] } }, fields: { nullValue: { type: \"NullValue\", id: 1 }, numberValue: { type: \"double\", id: 2 }, stringValue: { type: \"string\", id: 3 }, boolValue: { type: \"bool\", id: 4 }, structValue: { type: \"Struct\", id: 5 }, listValue: { type: \"ListValue\", id: 6 } } }, NullValue: { values: { NULL_VALUE: 0 } }, ListValue: { fields: { values: { rule: \"repeated\", type: \"Value\", id: 1 } } } }), o(\"wrappers\", { DoubleValue: { fields: { value: { type: \"double\", id: 1 } } }, FloatValue: { fields: { value: { type: \"float\", id: 1 } } }, Int64Value: { fields: { value: { type: \"int64\", id: 1 } } }, UInt64Value: { fields: { value: { type: \"uint64\", id: 1 } } }, Int32Value: { fields: { value: { type: \"int32\", id: 1 } } }, UInt32Value: { fields: { value: { type: \"uint32\", id: 1 } } }, BoolValue: { fields: { value: { type: \"bool\", id: 1 } } }, StringValue: { fields: { value: { type: \"string\", id: 1 } } }, BytesValue: { fields: { value: { type: \"bytes\", id: 1 } } } }), o(\"field_mask\", { FieldMask: { fields: { paths: { rule: \"repeated\", type: \"string\", id: 1 } } } }), o.get = function (e) {return o[e] || null;};}, 525: function _(e, t, r) {var o,n,i = e.exports;function a(e, t, r, i) {var a = i.m,s = i.d,c = i.types,u = i.ksi,l = void 0 !== u;if (e.resolvedType) {if (e.resolvedType instanceof o) {for (var p = l ? s[r][u] : s[r], d = e.resolvedType.values, h = Object.keys(d), f = 0; f < h.length; f++) {if (!(e.repeated && d[h[f]] === e.typeDefault || h[f] != p && d[h[f]] != p)) {l ? a[r][u] = d[h[f]] : a[r] = d[h[f]];break;}}} else {if (\"object\" != typeof (l ? s[r][u] : s[r])) throw TypeError(e.fullName + \": object expected\");l ? a[r][u] = c[t].fromObject(s[r][u]) : a[r] = c[t].fromObject(s[r]);}} else {var m = !1;switch (e.type) {case \"double\":case \"float\":l ? a[r][u] = Number(s[r][u]) : a[r] = Number(s[r]);break;case \"uint32\":case \"fixed32\":l ? a[r][u] = s[r][u] >>> 0 : a[r] = s[r] >>> 0;break;case \"int32\":case \"sint32\":case \"sfixed32\":l ? a[r][u] = 0 | s[r][u] : a[r] = 0 | s[r];break;case \"uint64\":m = !0;case \"int64\":case \"sint64\":case \"fixed64\":case \"sfixed64\":n.Long ? l ? a[r][u] = n.Long.fromValue(s[r][u]).unsigned = m : a[r] = n.Long.fromValue(s[r]).unsigned = m : \"string\" == typeof (l ? s[r][u] : s[r]) ? l ? a[r][u] = parseInt(s[r][u], 10) : a[r] = parseInt(s[r], 10) : \"number\" == typeof (l ? s[r][u] : s[r]) ? l ? a[r][u] = s[r][u] : a[r] = s[r] : \"object\" == typeof (l ? s[r][u] : s[r]) && (l ? a[r][u] = new n.LongBits(s[r][u].low >>> 0, s[r][u].high >>> 0).toNumber(m) : a[r] = new n.LongBits(s[r].low >>> 0, s[r].high >>> 0).toNumber(m));break;case \"bytes\":\"string\" == typeof (l ? s[r][u] : s[r]) ? l ? n.base64.decode(s[r][u], a[r][u] = n.newBuffer(n.base64.length(s[r][u])), 0) : n.base64.decode(s[r], a[r] = n.newBuffer(n.base64.length(s[r])), 0) : (l ? s[r][u] : s[r]).length && (l ? a[r][u] = s[r][u] : a[r] = s[r]);break;case \"string\":l ? a[r][u] = String(s[r][u]) : a[r] = String(s[r]);break;case \"bool\":l ? a[r][u] = Boolean(s[r][u]) : a[r] = Boolean(s[r]);}}}function s(e, t, r, i) {var a = i.m,s = i.d,c = i.types,u = i.ksi,l = i.o,p = void 0 !== u;if (e.resolvedType) e.resolvedType instanceof o ? p ? s[r][u] = l.enums === String ? c[t].values[a[r][u]] : a[r][u] : s[r] = l.enums === String ? c[t].values[a[r]] : a[r] : p ? s[r][u] = c[t].toObject(a[r][u], l) : s[r] = c[t].toObject(a[r], l);else {var d = !1;switch (e.type) {case \"double\":case \"float\":p ? s[r][u] = l.json && !isFinite(a[r][u]) ? String(a[r][u]) : a[r][u] : s[r] = l.json && !isFinite(a[r]) ? String(a[r]) : a[r];break;case \"uint64\":d = !0;case \"int64\":case \"sint64\":case \"fixed64\":case \"sfixed64\":\"number\" == typeof a[r][u] ? p ? s[r][u] = l.longs === String ? String(a[r][u]) : a[r][u] : s[r] = l.longs === String ? String(a[r]) : a[r] : p ? s[r][u] = l.longs === String ? n.Long.prototype.toString.call(a[r][u]) : l.longs === Number ? new n.LongBits(a[r][u].low >>> 0, a[r][u].high >>> 0).toNumber(d) : a[r][u] : s[r] = l.longs === String ? n.Long.prototype.toString.call(a[r]) : l.longs === Number ? new n.LongBits(a[r].low >>> 0, a[r].high >>> 0).toNumber(d) : a[r];break;case \"bytes\":p ? s[r][u] = l.bytes === String ? n.base64.encode(a[r][u], 0, a[r][u].length) : l.bytes === Array ? Array.prototype.slice.call(a[r][u]) : a[r][u] : s[r] = l.bytes === String ? n.base64.encode(a[r], 0, a[r].length) : l.bytes === Array ? Array.prototype.slice.call(a[r]) : a[r];break;default:p ? s[r][u] = a[r][u] : s[r] = a[r];}}}i._configure = function () {o = r(582), n = r(9935);}, i.fromObject = function (e) {var t = e.fieldsArray;return function (e) {return function (r) {if (r instanceof this.ctor) return r;if (!t.length) return new this.ctor();for (var i = new this.ctor(), s = 0; s < t.length; ++s) {var c,u = t[s].resolve(),l = u.name;if (u.map) {if (r[l]) {if (\"object\" != typeof r[l]) throw TypeError(u.fullName + \": object expected\");i[l] = {};}var p = Object.keys(r[l]);for (c = 0; c < p.length; ++c) {a(u, s, l, n.merge(n.copy(e), { m: i, d: r, ksi: p[c] }));}} else if (u.repeated) {if (r[l]) {if (!Array.isArray(r[l])) throw TypeError(u.fullName + \": array expected\");for (i[l] = [], c = 0; c < r[l].length; ++c) {a(u, s, l, n.merge(n.copy(e), { m: i, d: r, ksi: c }));}}} else (u.resolvedType instanceof o || null != r[l]) && a(u, s, l, n.merge(n.copy(e), { m: i, d: r }));}return i;};};}, i.toObject = function (e) {var t = e.fieldsArray.slice().sort(n.compareFieldsById);return function (r) {return t.length ? function (i, a) {a = a || {};for (var c, u, l = {}, p = [], d = [], h = [], f = 0; f < t.length; ++f) {t[f].partOf || (t[f].resolve().repeated ? p : t[f].map ? d : h).push(t[f]);}if (p.length && (a.arrays || a.defaults)) for (f = 0; f < p.length; ++f) {l[p[f].name] = [];}if (d.length && (a.objects || a.defaults)) for (f = 0; f < d.length; ++f) {l[d[f].name] = {};}if (h.length && a.defaults) for (f = 0; f < h.length; ++f) {if (u = (c = h[f]).name, c.resolvedType instanceof o) l[u] = a.enums = String ? c.resolvedType.valuesById[c.typeDefault] : c.typeDefault;else if (c.long) {if (n.Long) {var m = new n.Long(c.typeDefault.low, c.typeDefault.high, c.typeDefault.unsigned);l[u] = a.longs === String ? m.toString() : a.longs === Number ? m.toNumber() : m;} else l[u] = a.longs === String ? c.typeDefault.toString() : c.typeDefault.toNumber();} else c.bytes ? l[u] = a.bytes === String ? String.fromCharCode.apply(String, c.typeDefault) : Array.prototype.slice.call(c.typeDefault).join(\"*..*\").split(\"*..*\") : l[u] = c.typeDefault;}var E = !1;for (f = 0; f < t.length; ++f) {u = (c = t[f]).name;var g,y,T = e._fieldsArray.indexOf(c);if (c.map) {if (E || (E = !0), i[u] && (g = Object.keys(i[u]).length)) for (l[u] = {}, y = 0; y < g.length; ++y) {s(c, T, u, n.merge(n.copy(r), { m: i, d: l, ksi: g[y], o: a }));}} else if (c.repeated) {if (i[u] && i[u].length) for (l[u] = [], y = 0; y < i[u].length; ++y) {s(c, T, u, n.merge(n.copy(r), { m: i, d: l, ksi: y, o: a }));}} else null != i[u] && i.hasOwnProperty(u) && s(c, T, u, n.merge(n.copy(r), { m: i, d: l, o: a })), c.partOf && a.oneofs && (l[c.partOf.name] = u);}return l;} : function () {return {};};};};}, 3888: function _(e, t, r) {var o, n, i;function a(e) {return \"missing required '\" + e.name + \"'\";}function s(e) {return function (t) {var r = t.Reader,s = t.types,c = t.util;return function (t, u) {t instanceof r || (t = r.create(t));for (var l, p = void 0 === u ? t.len : t.pos + u, d = new this.ctor(); t.pos < p;) {var h = t.uint32();if (e.group && 4 == (7 & h)) break;for (var f = h >>> 3, m = 0, E = !1; m < e.fieldsArray.length; ++m) {var g = e._fieldsArray[m].resolve(),y = g.name,T = g.resolvedType instanceof o ? \"int32\" : g.type;if (f == g.id) {if (E = !0, g.map) t.skip().pos++, d[y] === c.emptyObject && (d[y] = {}), l = t[g.keyType](), t.pos++, null != n.long[g.keyType] ? null == n.basic[T] ? d[y][\"object\" == typeof l ? c.longToHash(l) : l] = s[m].decode(t, t.uint32()) : d[y][\"object\" == typeof l ? c.longToHash(l) : l] = t[T]() : null == n.basic[T] ? d[y] = s[m].decode(t, t.uint32()) : d[y] = t[T]();else if (g.repeated) {if (d[y] && d[y].length || (d[y] = []), null != n.packed[T] && 2 == (7 & h)) for (var _ = t.uint32() + t.pos; t.pos < _;) {d[y].push(t[T]());} else null == n.basic[T] ? g.resolvedType.group ? d[y].push(s[m].decode(t)) : d[y].push(s[m].decode(t, t.uint32())) : d[y].push(t[T]());} else null == n.basic[T] ? g.resolvedType.group ? d[y] = s[m].decode(t) : d[y] = s[m].decode(t, t.uint32()) : d[y] = t[T]();break;}}E || (__f__(\"log\", \"t\", h, \" at sdk/uniapp-sdk-4.1.2.js:1\"), t.skipType(7 & h));}for (m = 0; m < e._fieldsArray.length; ++m) {var v = e._fieldsArray[m];if (v.required && !d.hasOwnProperty(v.name)) throw i.ProtocolError(a(v), { instance: d });}return d;};};}e.exports = s, s._configure = function () {o = r(582), n = r(4696), i = r(9935);};}, 9929: function _(e, t, r) {var o, n;function i(e) {return function (t) {var r = t.Writer,i = t.types,a = t.util;return function (t, s) {s = s || r.create();for (var c = e.fieldsArray.slice().sort(a.compareFieldsById), u = 0; u < c.length; u++) {var l = c[u],p = e._fieldsArray.indexOf(l),d = l.resolvedType instanceof o ? \"uint32\" : l.type,h = n.basic[d],f = t[l.name];if (l.resolvedType instanceof o && \"string\" == typeof f && (f = i[p].values[f]), l.map) {if (null != f && t.hasOwnProperty(l.name)) for (var m = Object.keys(f), E = 0; E < m.length; ++E) {s.uint32((l.id << 3 | 2) >>> 0).fork().uint32(8 | n.mapKey[l.keyType])[l.keyType](m[E]), void 0 === h ? i[p].encode(f[m[E]], s.uint32(18).fork()).ldelim().ldelim() : s.uint32(16 | h)[d](f[m[E]]).ldelim();}} else if (l.repeated) {if (f && f.length) if (l.packed && void 0 !== n.packed[d]) {s.uint32((l.id << 3 | 2) >>> 0).fork();for (var g = 0; g < f.length; g++) {s[d](f[g]);}s.ldelim();} else for (var y = 0; y < f.length; y++) {void 0 === h ? l.resolvedType.group ? i[p].encode(f[y], s.uint32((l.id << 3 | 3) >>> 0)).uint32((l.id << 3 | 4) >>> 0) : i[p].encode(f[y], s.uint32((l.id << 3 | 2) >>> 0).fork()).ldelim() : s.uint32((l.id << 3 | h) >>> 0)[d](f[y]);}} else (!l.optional || null != f && t.hasOwnProperty(l.name)) && (l.optional || null != f && t.hasOwnProperty(l.name) || __f__(\"warn\", \"注意啦!!!很大概率会报错 类型:\", t.$type ? t.$type.name : \"不晓得\", \"没有设置对应的属性:\", l.name, \"检查是不是proto文件属性设置为了required\", \" at sdk/uniapp-sdk-4.1.2.js:1\"), void 0 === h ? l.resolvedType.group ? i[p].encode(f, s.uint32((l.id << 3 | 3) >>> 0)).uint32((l.id << 3 | 4) >>> 0) : i[p].encode(f, s.uint32((l.id << 3 | 2) >>> 0).fork()).ldelim() : s.uint32((l.id << 3 | h) >>> 0)[d](f));}return s;};};}e.exports = i, i._configure = function () {o = r(582), n = r(4696);};}, 582: function _(e, t, r) {e.exports = i;var o = r(5998);((i.prototype = Object.create(o.prototype)).constructor = i).className = \"Enum\";var n = r(2476);function i(e, t, r, n, i) {if (o.call(this, e, r), t && \"object\" != typeof t) throw TypeError(\"values must be an object\");if (this.valuesById = {}, this.values = Object.create(this.valuesById), this.comment = n, this.comments = i || {}, this.reserved = void 0, t) for (var a = Object.keys(t), s = 0; s < a.length; ++s) {\"number\" == typeof t[a[s]] && (this.valuesById[this.values[a[s]] = t[a[s]]] = a[s]);}}i.fromJSON = function (e, t) {var r = new i(e, t.values, t.options, t.comment, t.comments);return r.reserved = t.reserved, r;}, i.prototype.toJSON = function (e) {var t = !!e && Boolean(e.keepComments);return util.toObject([\"options\", this.options, \"values\", this.values, \"reserved\", this.reserved && this.reserved.length ? this.reserved : void 0, \"comment\", t ? this.comment : void 0, \"comments\", t ? this.comments : void 0]);}, i.prototype.add = function (e, t, r) {if (!util.isString(e)) throw TypeError(\"name must be a string\");if (!util.isInteger(t)) throw TypeError(\"id must be an integer\");if (void 0 !== this.values[e]) throw Error(\"duplicate name '\" + e + \"' in \" + this);if (this.isReservedId(t)) throw Error(\"id \" + t + \" is reserved in \" + this);if (this.isReservedName(e)) throw Error(\"name '\" + e + \"' is reserved in \" + this);if (void 0 !== this.valuesById[t]) {if (!this.options || !this.options.allow_alias) throw Error(\"duplicate id \" + t + \" in \" + this);this.values[e] = t;} else this.valuesById[this.values[e] = t] = e;return this.comments[e] = r || null, this;}, i.prototype.remove = function (e) {if (!util.isString(e)) throw TypeError(\"name must be a string\");var t = this.values[e];if (null == t) throw Error(\"name '\" + e + \"' does not exist in \" + this);return delete this.valuesById[t], delete this.values[e], delete this.comments[e], this;}, i.prototype.isReservedId = function (e) {return n.isReservedId(this.reserved, e);}, i.prototype.isReservedName = function (e) {return n.isReservedName(this.reserved, e);};}, 9286: function _(e, t, r) {e.exports = u;var o,n,i,a,s = r(5998);((u.prototype = Object.create(s.prototype)).constructor = u).className = \"Field\";var c = /^required|optional|repeated$/;function u(e, t, r, o, a, u, l) {if (i.isObject(o) ? (l = a, u = o, o = a = void 0) : i.isObject(a) && (l = u, u = a, a = void 0), s.call(this, e, u), !i.isInteger(t) || t < 0) throw TypeError(\"id must be a non-negative integer\");if (!i.isString(r)) throw TypeError(\"type must be a string\");if (void 0 !== o && !c.test(o = o.toString().toLowerCase())) throw TypeError(\"rule must be a string rule\");if (void 0 !== a && !i.isString(a)) throw TypeError(\"extend must be a string\");this.rule = o && \"optional\" !== o ? o : void 0, this.type = r, this.id = t, this.extend = a || void 0, this.required = \"required\" === o, this.optional = !this.required, this.repeated = \"repeated\" === o, this.map = !1, this.message = null, this.partOf = null, this.typeDefault = null, this.defaultValue = null, this.long = !!i.Long && void 0 !== n.long[r], this.bytes = \"bytes\" === r, this.resolvedType = null, this.extensionField = null, this.declaringField = null, this._packed = null, this.comment = l;}u.fromJSON = function (e, t) {return new u(e, t.id, t.type, t.rule, t.extend, t.options, t.comment);}, Object.defineProperty(u.prototype, \"packed\", { get: function get() {return null === this._packed && (this._packed = !1 !== this.getOption(\"packed\")), this._packed;} }), u.prototype.setOption = function (e, t, r) {return \"packed\" === e && (this._packed = null), s.prototype.setOption.call(this, e, t, r);}, u.prototype.toJSON = function (e) {var t = !!e && Boolean(e.keepComments);return i.toObject([\"rule\", \"optional\" !== this.rule && this.rule || void 0, \"type\", this.type, \"id\", this.id, \"extend\", this.extend, \"options\", this.options, \"comment\", t ? this.comment : void 0]);}, u.prototype.resolve = function () {if (this.resolved) return this;if (void 0 === (this.typeDefault = n.defaults[this.type]) && (this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type), this.resolvedType instanceof a ? this.typeDefault = null : this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]), this.options && null != this.options.default && (this.typeDefault = this.options.default, this.resolvedType instanceof o && \"string\" == typeof this.typeDefault && (this.typeDefault = this.resolvedType.values[this.typeDefault])), this.options && (!0 !== this.options.packed && (void 0 === this.options.packed || !this.resolvedType || this.resolvedType instanceof o) || delete this.options.packed, Object.keys(this.options).length || (this.options = void 0)), this.long) this.typeDefault = i.Long.fromNumber(this.typeDefault, \"u\" === this.type.charAt(0)), Object.freeze && Object.freeze(this.typeDefault);else if (this.bytes && \"string\" == typeof this.typeDefault) {var e;i.utf8.write(this.typeDefault, e = i.newBuffer(i.utf8.length(this.typeDefault)), 0), this.typeDefault = e;}return this.map ? this.defaultValue = i.emptyObject : this.repeated ? this.defaultValue = i.emptyArray : this.defaultValue = this.typeDefault, this.parent instanceof a && (this.parent.ctor.prototype[this.name] = this.defaultValue), s.prototype.resolve.call(this);}, u.d = function (e, t, r, o) {return \"function\" == typeof t ? t = i.decorateType(t).name : t && \"object\" == typeof t && (t = i.decorateEnum(t).name), function (n, a) {i.decorateType(n.constructor).add(new u(a, e, t, r, { default: o }));};}, u._configure = function () {a = r(192), o = r(582), n = r(4696), i = r(9935);};}, 1283: function _(e) {function t(e) {return \"undefined\" != typeof Float32Array ? function () {var t = new Float32Array([-0]),r = new Uint8Array(t.buffer),o = 128 === r[3];function n(e, o, n) {t[0] = e, o[n] = r[0], o[n + 1] = r[1], o[n + 2] = r[2], o[n + 3] = r[3];}function i(e, o, n) {t[0] = e, o[n] = r[3], o[n + 1] = r[2], o[n + 2] = r[1], o[n + 3] = r[0];}function a(e, o) {return r[0] = e[o], r[1] = e[o + 1], r[2] = e[o + 2], r[3] = e[o + 3], t[0];}function s(e, o) {return r[3] = e[o], r[2] = e[o + 1], r[1] = e[o + 2], r[0] = e[o + 3], t[0];}e.writeFloatLE = o ? n : i, e.writeFloatBE = o ? i : n, e.readFloatLE = o ? a : s, e.readFloatBE = o ? s : a;}() : function () {function t(e, t, r, o) {var n = t < 0 ? 1 : 0;if (n && (t = -t), 0 === t) e(1 / t > 0 ? 0 : 2147483648, r, o);else if (isNaN(t)) e(2143289344, r, o);else if (t > 34028234663852886e22) e((n << 31 | 2139095040) >>> 0, r, o);else if (t < 11754943508222875e-54) e((n << 31 | Math.round(t / 1401298464324817e-60)) >>> 0, r, o);else {var i = Math.floor(Math.log(t) / Math.LN2);e((n << 31 | i + 127 << 23 | 8388607 & Math.round(t * Math.pow(2, -i) * 8388608)) >>> 0, r, o);}}function a(e, t, r) {var o = e(t, r),n = 2 * (o >> 31) + 1,i = o >>> 23 & 255,a = 8388607 & o;return 255 === i ? a ? NaN : n * (1 / 0) : 0 === i ? 1401298464324817e-60 * n * a : n * Math.pow(2, i - 150) * (a + 8388608);}e.writeFloatLE = t.bind(null, r), e.writeFloatBE = t.bind(null, o), e.readFloatLE = a.bind(null, n), e.readFloatBE = a.bind(null, i);}(), \"undefined\" != typeof Float64Array ? function () {var t = new Float64Array([-0]),r = new Uint8Array(t.buffer),o = 128 === r[7];function n(e, o, n) {t[0] = e, o[n] = r[0], o[n + 1] = r[1], o[n + 2] = r[2], o[n + 3] = r[3], o[n + 4] = r[4], o[n + 5] = r[5], o[n + 6] = r[6], o[n + 7] = r[7];}function i(e, o, n) {t[0] = e, o[n] = r[7], o[n + 1] = r[6], o[n + 2] = r[5], o[n + 3] = r[4], o[n + 4] = r[3], o[n + 5] = r[2], o[n + 6] = r[1], o[n + 7] = r[0];}function a(e, o) {return r[0] = e[o], r[1] = e[o + 1], r[2] = e[o + 2], r[3] = e[o + 3], r[4] = e[o + 4], r[5] = e[o + 5], r[6] = e[o + 6], r[7] = e[o + 7], t[0];}function s(e, o) {return r[7] = e[o], r[6] = e[o + 1], r[5] = e[o + 2], r[4] = e[o + 3], r[3] = e[o + 4], r[2] = e[o + 5], r[1] = e[o + 6], r[0] = e[o + 7], t[0];}e.writeDoubleLE = o ? n : i, e.writeDoubleBE = o ? i : n, e.readDoubleLE = o ? a : s, e.readDoubleBE = o ? s : a;}() : function () {function t(e, t, r, o, n, i) {var a = o < 0 ? 1 : 0;if (a && (o = -o), 0 === o) e(0, n, i + t), e(1 / o > 0 ? 0 : 2147483648, n, i + r);else if (isNaN(o)) e(0, n, i + t), e(2146959360, n, i + r);else if (o > 17976931348623157e292) e(0, n, i + t), e((a << 31 | 2146435072) >>> 0, n, i + r);else {var s;if (o < 22250738585072014e-324) e((s = o / 5e-324) >>> 0, n, i + t), e((a << 31 | s / 4294967296) >>> 0, n, i + r);else {var c = Math.floor(Math.log(o) / Math.LN2);1024 === c && (c = 1023), e(4503599627370496 * (s = o * Math.pow(2, -c)) >>> 0, n, i + t), e((a << 31 | c + 1023 << 20 | 1048576 * s & 1048575) >>> 0, n, i + r);}}}function a(e, t, r, o, n) {var i = e(o, n + t),a = e(o, n + r),s = 2 * (a >> 31) + 1,c = a >>> 20 & 2047,u = 4294967296 * (1048575 & a) + i;return 2047 === c ? u ? NaN : s * (1 / 0) : 0 === c ? 5e-324 * s * u : s * Math.pow(2, c - 1075) * (u + 4503599627370496);}e.writeDoubleLE = t.bind(null, r, 0, 4), e.writeDoubleBE = t.bind(null, o, 4, 0), e.readDoubleLE = a.bind(null, n, 0, 4), e.readDoubleBE = a.bind(null, i, 4, 0);}(), e;}function r(e, t, r) {t[r] = 255 & e, t[r + 1] = e >>> 8 & 255, t[r + 2] = e >>> 16 & 255, t[r + 3] = e >>> 24;}function o(e, t, r) {t[r] = e >>> 24, t[r + 1] = e >>> 16 & 255, t[r + 2] = e >>> 8 & 255, t[r + 3] = 255 & e;}function n(e, t) {return (e[t] | e[t + 1] << 8 | e[t + 2] << 16 | e[t + 3] << 24) >>> 0;}function i(e, t) {return (e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3]) >>> 0;}e.exports = t(t);}, 4939: function _(e) {e.exports = r;var t = null;try {t = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;} catch (e) {}function r(e, t, r) {this.low = 0 | e, this.high = 0 | t, this.unsigned = !!r;}function o(e) {return !0 === (e && e.__isLong__);}r.prototype.__isLong__, Object.defineProperty(r.prototype, \"__isLong__\", { value: !0 }), r.isLong = o;var n = {},i = {};function a(e, t) {var r, o, a;return t ? (a = 0 <= (e >>>= 0) && e < 256) && (o = i[e]) ? o : (r = c(e, (0 | e) < 0 ? -1 : 0, !0), a && (i[e] = r), r) : (a = -128 <= (e |= 0) && e < 128) && (o = n[e]) ? o : (r = c(e, e < 0 ? -1 : 0, !1), a && (n[e] = r), r);}function s(e, t) {if (isNaN(e)) return t ? g : E;if (t) {if (e < 0) return g;if (e >= h) return R;} else {if (e <= -f) return O;if (e + 1 >= f) return v;}return e < 0 ? s(-e, t).neg() : c(e % d | 0, e / d | 0, t);}function c(e, t, o) {return new r(e, t, o);}r.fromInt = a, r.fromNumber = s, r.fromBits = c;var u = Math.pow;function l(e, t, r) {if (0 === e.length) throw Error(\"empty string\");if (\"NaN\" === e || \"Infinity\" === e || \"+Infinity\" === e || \"-Infinity\" === e) return E;if (\"number\" == typeof t ? (r = t, t = !1) : t = !!t, (r = r || 10) < 2 || 36 < r) throw RangeError(\"radix\");var o;if ((o = e.indexOf(\"-\")) > 0) throw Error(\"interior hyphen\");if (0 === o) return l(e.substring(1), t, r).neg();for (var n = s(u(r, 8)), i = E, a = 0; a < e.length; a += 8) {var c = Math.min(8, e.length - a),p = parseInt(e.substring(a, a + c), r);if (c < 8) {var d = s(u(r, c));i = i.mul(d).add(s(p));} else i = (i = i.mul(n)).add(s(p));}return i.unsigned = t, i;}function p(e, t) {return \"number\" == typeof e ? s(e, t) : \"string\" == typeof e ? l(e, t) : c(e.low, e.high, \"boolean\" == typeof t ? t : e.unsigned);}r.fromString = l, r.fromValue = p;var d = 4294967296,h = d * d,f = h / 2,m = a(1 << 24),E = a(0);r.ZERO = E;var g = a(0, !0);r.UZERO = g;var y = a(1);r.ONE = y;var T = a(1, !0);r.UONE = T;var _ = a(-1);r.NEG_ONE = _;var v = c(-1, 2147483647, !1);r.MAX_VALUE = v;var R = c(-1, -1, !0);r.MAX_UNSIGNED_VALUE = R;var O = c(0, -2147483648, !1);r.MIN_VALUE = O;var I = r.prototype;I.toInt = function () {return this.unsigned ? this.low >>> 0 : this.low;}, I.toNumber = function () {return this.unsigned ? (this.high >>> 0) * d + (this.low >>> 0) : this.high * d + (this.low >>> 0);}, I.toString = function (e) {if ((e = e || 10) < 2 || 36 < e) throw RangeError(\"radix\");if (this.isZero()) return \"0\";if (this.isNegative()) {if (this.eq(O)) {var t = s(e),r = this.div(t),o = r.mul(t).sub(this);return r.toString(e) + o.toInt().toString(e);}return \"-\" + this.neg().toString(e);}for (var n = s(u(e, 6), this.unsigned), i = this, a = \"\";;) {var c = i.div(n),l = (i.sub(c.mul(n)).toInt() >>> 0).toString(e);if ((i = c).isZero()) return l + a;for (; l.length < 6;) {l = \"0\" + l;}a = \"\" + l + a;}}, I.getHighBits = function () {return this.high;}, I.getHighBitsUnsigned = function () {return this.high >>> 0;}, I.getLowBits = function () {return this.low;}, I.getLowBitsUnsigned = function () {return this.low >>> 0;}, I.getNumBitsAbs = function () {if (this.isNegative()) return this.eq(O) ? 64 : this.neg().getNumBitsAbs();for (var e = 0 != this.high ? this.high : this.low, t = 31; t > 0 && 0 == (e & 1 << t); t--) {;}return 0 != this.high ? t + 33 : t + 1;}, I.isZero = function () {return 0 === this.high && 0 === this.low;}, I.eqz = I.isZero, I.isNegative = function () {return !this.unsigned && this.high < 0;}, I.isPositive = function () {return this.unsigned || this.high >= 0;}, I.isOdd = function () {return 1 == (1 & this.low);}, I.isEven = function () {return 0 == (1 & this.low);}, I.equals = function (e) {return o(e) || (e = p(e)), (this.unsigned === e.unsigned || this.high >>> 31 != 1 || e.high >>> 31 != 1) && this.high === e.high && this.low === e.low;}, I.eq = I.equals, I.notEquals = function (e) {return !this.eq(e);}, I.neq = I.notEquals, I.ne = I.notEquals, I.lessThan = function (e) {return this.comp(e) < 0;}, I.lt = I.lessThan, I.lessThanOrEqual = function (e) {return this.comp(e) <= 0;}, I.lte = I.lessThanOrEqual, I.le = I.lessThanOrEqual, I.greaterThan = function (e) {return this.comp(e) > 0;}, I.gt = I.greaterThan, I.greaterThanOrEqual = function (e) {return this.comp(e) >= 0;}, I.gte = I.greaterThanOrEqual, I.ge = I.greaterThanOrEqual, I.compare = function (e) {if (o(e) || (e = p(e)), this.eq(e)) return 0;var t = this.isNegative(),r = e.isNegative();return t && !r ? -1 : !t && r ? 1 : this.unsigned ? e.high >>> 0 > this.high >>> 0 || e.high === this.high && e.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(e).isNegative() ? -1 : 1;}, I.comp = I.compare, I.negate = function () {return !this.unsigned && this.eq(O) ? O : this.not().add(y);}, I.neg = I.negate, I.add = function (e) {o(e) || (e = p(e));var t = this.high >>> 16,r = 65535 & this.high,n = this.low >>> 16,i = 65535 & this.low,a = e.high >>> 16,s = 65535 & e.high,u = e.low >>> 16,l = 0,d = 0,h = 0,f = 0;return h += (f += i + (65535 & e.low)) >>> 16, d += (h += n + u) >>> 16, l += (d += r + s) >>> 16, l += t + a, c((h &= 65535) << 16 | (f &= 65535), (l &= 65535) << 16 | (d &= 65535), this.unsigned);}, I.subtract = function (e) {return o(e) || (e = p(e)), this.add(e.neg());}, I.sub = I.subtract, I.multiply = function (e) {if (this.isZero()) return E;if (o(e) || (e = p(e)), t) return c(t.mul(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned);if (e.isZero()) return E;if (this.eq(O)) return e.isOdd() ? O : E;if (e.eq(O)) return this.isOdd() ? O : E;if (this.isNegative()) return e.isNegative() ? this.neg().mul(e.neg()) : this.neg().mul(e).neg();if (e.isNegative()) return this.mul(e.neg()).neg();if (this.lt(m) && e.lt(m)) return s(this.toNumber() * e.toNumber(), this.unsigned);var r = this.high >>> 16,n = 65535 & this.high,i = this.low >>> 16,a = 65535 & this.low,u = e.high >>> 16,l = 65535 & e.high,d = e.low >>> 16,h = 65535 & e.low,f = 0,g = 0,y = 0,T = 0;return y += (T += a * h) >>> 16, g += (y += i * h) >>> 16, y &= 65535, g += (y += a * d) >>> 16, f += (g += n * h) >>> 16, g &= 65535, f += (g += i * d) >>> 16, g &= 65535, f += (g += a * l) >>> 16, f += r * h + n * d + i * l + a * u, c((y &= 65535) << 16 | (T &= 65535), (f &= 65535) << 16 | (g &= 65535), this.unsigned);}, I.mul = I.multiply, I.divide = function (e) {if (o(e) || (e = p(e)), e.isZero()) throw Error(\"division by zero\");var r, n, i;if (t) return this.unsigned || -2147483648 !== this.high || -1 !== e.low || -1 !== e.high ? c((this.unsigned ? t.div_u : t.div_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned) : this;if (this.isZero()) return this.unsigned ? g : E;if (this.unsigned) {if (e.unsigned || (e = e.toUnsigned()), e.gt(this)) return g;if (e.gt(this.shru(1))) return T;i = g;} else {if (this.eq(O)) return e.eq(y) || e.eq(_) ? O : e.eq(O) ? y : (r = this.shr(1).div(e).shl(1)).eq(E) ? e.isNegative() ? y : _ : (n = this.sub(e.mul(r)), i = r.add(n.div(e)));if (e.eq(O)) return this.unsigned ? g : E;if (this.isNegative()) return e.isNegative() ? this.neg().div(e.neg()) : this.neg().div(e).neg();if (e.isNegative()) return this.div(e.neg()).neg();i = E;}for (n = this; n.gte(e);) {r = Math.max(1, Math.floor(n.toNumber() / e.toNumber()));for (var a = Math.ceil(Math.log(r) / Math.LN2), l = a <= 48 ? 1 : u(2, a - 48), d = s(r), h = d.mul(e); h.isNegative() || h.gt(n);) {h = (d = s(r -= l, this.unsigned)).mul(e);}d.isZero() && (d = y), i = i.add(d), n = n.sub(h);}return i;}, I.div = I.divide, I.modulo = function (e) {return o(e) || (e = p(e)), t ? c((this.unsigned ? t.rem_u : t.rem_s)(this.low, this.high, e.low, e.high), t.get_high(), this.unsigned) : this.sub(this.div(e).mul(e));}, I.mod = I.modulo, I.rem = I.modulo, I.not = function () {return c(~this.low, ~this.high, this.unsigned);}, I.and = function (e) {return o(e) || (e = p(e)), c(this.low & e.low, this.high & e.high, this.unsigned);}, I.or = function (e) {return o(e) || (e = p(e)), c(this.low | e.low, this.high | e.high, this.unsigned);}, I.xor = function (e) {return o(e) || (e = p(e)), c(this.low ^ e.low, this.high ^ e.high, this.unsigned);}, I.shiftLeft = function (e) {return o(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? c(this.low << e, this.high << e | this.low >>> 32 - e, this.unsigned) : c(0, this.low << e - 32, this.unsigned);}, I.shl = I.shiftLeft, I.shiftRight = function (e) {return o(e) && (e = e.toInt()), 0 == (e &= 63) ? this : e < 32 ? c(this.low >>> e | this.high << 32 - e, this.high >> e, this.unsigned) : c(this.high >> e - 32, this.high >= 0 ? 0 : -1, this.unsigned);}, I.shr = I.shiftRight, I.shiftRightUnsigned = function (e) {if (o(e) && (e = e.toInt()), 0 == (e &= 63)) return this;var t = this.high;return e < 32 ? c(this.low >>> e | t << 32 - e, t >>> e, this.unsigned) : c(32 === e ? t : t >>> e - 32, 0, this.unsigned);}, I.shru = I.shiftRightUnsigned, I.shr_u = I.shiftRightUnsigned, I.toSigned = function () {return this.unsigned ? c(this.low, this.high, !1) : this;}, I.toUnsigned = function () {return this.unsigned ? this : c(this.low, this.high, !0);}, I.toBytes = function (e) {return e ? this.toBytesLE() : this.toBytesBE();}, I.toBytesLE = function () {var e = this.high,t = this.low;return [255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24, 255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24];}, I.toBytesBE = function () {var e = this.high,t = this.low;return [e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e, t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t];}, r.fromBytes = function (e, t, o) {return o ? r.fromBytesLE(e, t) : r.fromBytesBE(e, t);}, r.fromBytesLE = function (e, t) {return new r(e[0] | e[1] << 8 | e[2] << 16 | e[3] << 24, e[4] | e[5] << 8 | e[6] << 16 | e[7] << 24, t);}, r.fromBytesBE = function (e, t) {return new r(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7], e[0] << 24 | e[1] << 16 | e[2] << 8 | e[3], t);};}, 8365: function _(e, t, r) {e.exports = n;var o = r(9935);function n(e, t) {this.lo = e >>> 0, this.hi = t >>> 0;}var i = n.zero = new n(0, 0);i.toNumber = function () {return 0;}, i.zzEncode = i.zzDecode = function () {return this;}, i.length = function () {return 1;};var a = n.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";n.fromNumber = function (e) {if (0 === e) return i;var t = e < 0;t && (e = -e);var r = e >>> 0,o = (e - r) / 4294967296 >>> 0;return t && (o = ~o >>> 0, r = ~r >>> 0, ++r > 4294967295 && (r = 0, ++o > 4294967295 && (o = 0))), new n(r, o);}, n.from = function (e) {if (\"number\" == typeof e) return n.fromNumber(e);if (\"string\" == typeof e || e instanceof String) {if (!o.Long) return n.fromNumber(parseInt(e, 10));e = o.Long.fromString(e);}return e.low || e.high ? new n(e.low >>> 0, e.high >>> 0) : i;}, n.prototype.toNumber = function (e) {if (!e && this.hi >>> 31) {var t = 1 + ~this.lo >>> 0,r = ~this.hi >>> 0;return t || (r = r + 1 >>> 0), -(t + 4294967296 * r);}return this.lo + 4294967296 * this.hi;}, n.prototype.toLong = function (e) {return o.Long ? new o.Long(0 | this.lo, 0 | this.hi, Boolean(e)) : { low: 0 | this.lo, high: 0 | this.hi, unsigned: Boolean(e) };};var s = String.prototype.charCodeAt;n.fromHash = function (e) {return e === a ? i : new n((s.call(e, 0) | s.call(e, 1) << 8 | s.call(e, 2) << 16 | s.call(e, 3) << 24) >>> 0, (s.call(e, 4) | s.call(e, 5) << 8 | s.call(e, 6) << 16 | s.call(e, 7) << 24) >>> 0);}, n.prototype.toHash = function () {return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);}, n.prototype.zzEncode = function () {var e = this.hi >> 31;return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ e) >>> 0, this.lo = (this.lo << 1 ^ e) >>> 0, this;}, n.prototype.zzDecode = function () {var e = -(1 & this.lo);return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ e) >>> 0, this.hi = (this.hi >>> 1 ^ e) >>> 0, this;}, n.prototype.length = function () {var e = this.lo,t = (this.lo >>> 28 | this.hi << 4) >>> 0,r = this.hi >>> 24;return 0 === r ? 0 === t ? e < 16384 ? e < 128 ? 1 : 2 : e < 2097152 ? 3 : 4 : t < 16384 ? t < 128 ? 5 : 6 : t < 2097152 ? 7 : 8 : r < 128 ? 9 : 10;};}, 1435: function _(e, t, r) {e.exports = a;var o,n,i = r(9286);function a(e, t, r, o, a, s) {if (i.call(this, e, t, o, void 0, void 0, a, s), !n.isString(r)) throw TypeError(\"keyType must be a string\");this.keyType = r, this.resolvedKeyType = null, this.map = !0;}((a.prototype = Object.create(i.prototype)).constructor = a).className = \"MapField\", a.fromJSON = function (e, t) {return new a(e, t.id, t.keyType, t.type, t.options, t.comment);}, a.prototype.toJSON = function (e) {var t = !!e && Boolean(e.keepComments);return n.toObject([\"keyType\", this.keyType, \"type\", this.type, \"id\", this.id, \"extend\", this.extend, \"options\", this.options, \"comment\", t ? this.comment : void 0]);}, a.prototype.resolve = function () {if (this.resolved) return this;if (void 0 === o.mapKey[this.keyType]) throw Error(\"invalid key type: \" + this.keyType);return i.prototype.resolve.call(this);}, a.d = function (e, t, r) {return \"function\" == typeof r ? r = n.decorateType(r).name : r && \"object\" == typeof r && (r = n.decorateEnum(r).name), function (o, i) {n.decorateType(o.constructor).add(new a(i, e, t, r));};}, a._configure = function () {o = r(4696), n = r(9935);};}, 339: function _(e, t, r) {\"use strict\";var o;function n(e) {if (e) for (var t = Object.keys(e), r = 0; r < t.length; ++r) {this[t[r]] = e[t[r]];}}e.exports = n, n.create = function (e) {return this.$type.create(e);}, n.encode = function (e, t) {return arguments.length ? 1 == arguments.length ? this.$type.encode(arguments[0]) : this.$type.encode(arguments[0], arguments[1]) : this.$type.encode(this);}, n.encodeDelimited = function (e, t) {return this.$type.encodeDelimited(e, t);}, n.decode = function (e) {return this.$type.decode(e);}, n.decodeDelimited = function (e) {return this.$type.decodeDelimited(e);}, n.verify = function (e) {return this.$type.verify(e);}, n.fromObject = function (e) {return this.$type.fromObject(e);}, n.toObject = function (e, t) {return e = e || this, this.$type.toObject(e, t);}, n.prototype.toJSON = function () {return this.$type.toObject(this, o.toJSONOptions);}, n.set = function (e, t) {n[e] = t;}, n.get = function (e) {return n[e];}, n._configure = function () {o = r(9935);};}, 484: function _(e, t, r) {\"use strict\";e.exports = i;var o,n = r(5998);function i(e, t, r, i, a, s, c, u) {if (o.isObject(a) ? (c = a, a = s = void 0) : o.isObject(s) && (c = s, s = void 0), void 0 !== t && !o.isString(t)) throw TypeError(\"type must be a string\");if (!o.isString(r)) throw TypeError(\"requestType must be a string\");if (!o.isString(i)) throw TypeError(\"responseType must be a string\");n.call(this, e, c), this.type = t || \"rpc\", this.requestType = r, this.requestStream = !!a || void 0, this.responseType = i, this.responseStream = !!s || void 0, this.resolvedRequestType = null, this.resolvedResponseType = null, this.comment = u;}((i.prototype = Object.create(n.prototype)).constructor = i).className = \"Method\", i.fromJSON = function (e, t) {return new i(e, t.type, t.requestType, t.responseType, t.requestStream, t.responseStream, t.options, t.comment);}, i.prototype.toJSON = function (e) {var t = !!e && Boolean(e.keepComments);return o.toObject([\"type\", \"rpc\" !== this.type && this.type || void 0, \"requestType\", this.requestType, \"requestStream\", this.requestStream, \"responseType\", this.responseType, \"responseStream\", this.responseStream, \"options\", this.options, \"comment\", t ? this.comment : void 0]);}, i.prototype.resolve = function () {return this.resolved ? this : (this.resolvedRequestType = this.parent.lookupType(this.requestType), this.resolvedResponseType = this.parent.lookupType(this.responseType), n.prototype.resolve.call(this));}, i._configure = function () {o = r(9935);};}, 2476: function _(e, t, r) {e.exports = l;var o,n,i,a,s,c = r(5998);function u(e, t) {if (e && e.length) {for (var r = {}, o = 0; o < e.length; ++o) {r[e[o].name] = e[o].toJSON(t);}return r;}}function l(e, t) {c.call(this, e, t), this.nested = void 0, this._nestedArray = null;}function p(e) {return e._nestedArray = null, e;}((l.prototype = Object.create(c.prototype)).constructor = l).className = \"Namespace\", l.fromJSON = function (e, t) {return new l(e, t.options).addJSON(t.nested);}, l.arrayToJSON = u, l.isReservedId = function (e, t) {if (e) for (var r = 0; r < e.length; ++r) {if (\"string\" != typeof e[r] && e[r][0] <= t && e[r][1] >= t) return !0;}return !1;}, l.isReservedName = function (e, t) {if (e) for (var r = 0; r < e.length; ++r) {if (e[r] === t) return !0;}return !1;}, Object.defineProperty(l.prototype, \"nestedArray\", { get: function get() {return this._nestedArray || (this._nestedArray = i.toArray(this.nested));} }), l.prototype.toJSON = function (e) {return i.toObject([\"options\", this.options, \"nested\", u(this.nestedArray, e)]);}, l.prototype.addJSON = function (e) {if (e) for (var t, r = Object.keys(e), i = 0; i < r.length; ++i) {t = e[r[i]], this.add((void 0 !== t.fields ? a.fromJSON : void 0 !== t.values ? o.fromJSON : void 0 !== t.methods ? s.fromJSON : void 0 !== t.id ? n.fromJSON : l.fromJSON)(r[i], t));}return this;}, l.prototype.get = function (e) {return this.nested && this.nested[e] || null;}, l.prototype.getEnum = function (e) {if (this.nested && this.nested[e] instanceof o) return this.nested[e].values;throw Error(\"no such enum: \" + e);}, l.prototype.add = function (e) {if (!(e instanceof n && void 0 !== e.extend || e instanceof a || e instanceof o || e instanceof s || e instanceof l)) throw TypeError(\"object must be a valid nested object\");if (this.nested) {var t = this.get(e.name);if (t) {if (!(t instanceof l && e instanceof l) || t instanceof a || t instanceof s) throw Error(\"duplicate name '\" + e.name + \"' in \" + this);for (var r = t.nestedArray, i = 0; i < r.length; ++i) {e.add(r[i]);}this.remove(t), this.nested || (this.nested = {}), e.setOptions(t.options, !0);}} else this.nested = {};return this.nested[e.name] = e, e.onAdd(this), p(this);}, l.prototype.remove = function (e) {if (!(e instanceof c)) throw TypeError(\"object must be a ReflectionObject\");if (e.parent !== this) throw Error(e + \" is not a member of \" + this);return delete this.nested[e.name], Object.keys(this.nested).length || (this.nested = void 0), e.onRemove(this), p(this);}, l.prototype.define = function (e, t) {if (i.isString(e)) e = e.split(\".\");else if (!Array.isArray(e)) throw TypeError(\"illegal path\");if (e && e.length && \"\" === e[0]) throw Error(\"path must be relative\");for (var r = this; e.length > 0;) {var o = e.shift();if (r.nested && r.nested[o]) {if (!((r = r.nested[o]) instanceof l)) throw Error(\"path conflicts with non-namespace objects\");} else r.add(r = new l(o));}return t && r.addJSON(t), r;}, l.prototype.resolveAll = function () {for (var e = this.nestedArray, t = 0; t < e.length;) {e[t] instanceof l ? e[t++].resolveAll() : e[t++].resolve();}return this.resolve();}, l.prototype.lookup = function (e, t, r) {if (\"boolean\" == typeof t ? (r = t, t = void 0) : t && !Array.isArray(t) && (t = [t]), i.isString(e) && e.length) {if (\".\" === e) return this.root;e = e.split(\".\");} else if (!e.length) return this;if (\"\" === e[0]) return this.root.lookup(e.slice(1), t);var o = this.get(e[0]);if (o) {if (1 === e.length) {if (!t || t.indexOf(o.constructor) > -1) return o;} else if (o instanceof l && (o = o.lookup(e.slice(1), t, !0))) return o;} else for (var n = 0; n < this.nestedArray.length; ++n) {if (this._nestedArray[n] instanceof l && (o = this._nestedArray[n].lookup(e, t, !0))) return o;}return null === this.parent || r ? null : this.parent.lookup(e, t);}, l.prototype.lookupType = function (e) {var t = this.lookup(e, [a]);if (!t) throw Error(\"no such type: \" + e);return t;}, l.prototype.lookupEnum = function (e) {var t = this.lookup(e, [o]);if (!t) throw Error(\"no such Enum '\" + e + \"' in \" + this);return t;}, l.prototype.lookupTypeOrEnum = function (e) {var t = this.lookup(e, [a, o]);if (!t) throw Error(\"no such Type or Enum '\" + e + \"' in \" + this);return t;}, l.prototype.lookupService = function (e) {var t = this.lookup(e, [s]);if (!t) throw Error(\"no such Service '\" + e + \"' in \" + this);return t;}, l._configure = function () {o = r(582), n = r(9286), i = r(9935), a = r(192), s = r(9447);};}, 5998: function _(e, t, r) {\"use strict\";var o, n;function i(e, t) {if (!o.isString(e)) throw TypeError(\"name must be a string\");if (t && !o.isObject(t)) throw TypeError(\"options must be an object\");this.options = t, this.name = e, this.parent = null, this.resolved = !1, this.comment = null, this.filename = null;}e.exports = i, i.className = \"ReflectionObject\", Object.defineProperties(i.prototype, { root: { get: function get() {for (var e = this; null !== e.parent;) {e = e.parent;}return e;} }, fullName: { get: function get() {for (var e = [this.name], t = this.parent; t;) {e.unshift(t.name), t = t.parent;}return e.join(\".\");} } }), i.prototype.toJSON = function () {throw Error();}, i.prototype.onAdd = function (e) {this.parent && this.parent !== e && this.parent.remove(this), this.parent = e, this.resolved = !1;var t = e.root;t instanceof n && t._handleAdd(this);}, i.prototype.onRemove = function (e) {var t = e.root;t instanceof n && t._handleRemove(this), this.parent = null, this.resolved = !1;}, i.prototype.resolve = function () {return this.resolved || this.root instanceof n && (this.resolved = !0), this;}, i.prototype.getOption = function (e) {if (this.options) return this.options[e];}, i.prototype.setOption = function (e, t, r) {return r && this.options && void 0 !== this.options[e] || ((this.options || (this.options = {}))[e] = t), this;}, i.prototype.setOptions = function (e, t) {if (e) for (var r = Object.keys(e), o = 0; o < r.length; ++o) {this.setOption(r[o], e[r[o]], t);}return this;}, i.prototype.toString = function () {var e = this.constructor.className,t = this.fullName;return t.length ? e + \" \" + t : e;}, i._configure = function (e) {n = r(4685), o = r(9935);};}, 9735: function _(e, t, r) {e.exports = a;var o,n,i = r(5998);function a(e, t, r, o) {if (Array.isArray(t) || (r = t, t = void 0), i.call(this, e, r), void 0 !== t && !Array.isArray(t)) throw TypeError(\"fieldNames must be an Array\");this.oneof = t || [], this.fieldsArray = [], this.comment = o;}function s(e) {if (e.parent) for (var t = 0; t < e.fieldsArray.length; ++t) {e.fieldsArray[t].parent || e.parent.add(e.fieldsArray[t]);}}((a.prototype = Object.create(i.prototype)).constructor = a).className = \"OneOf\", a.fromJSON = function (e, t) {return new a(e, t.oneof, t.options, t.comment);}, a.prototype.toJSON = function (e) {var t = !!e && Boolean(e.keepComments);return n.toObject([\"options\", this.options, \"oneof\", this.oneof, \"comment\", t ? this.comment : void 0]);}, a.prototype.add = function (e) {if (!(e instanceof o)) throw TypeError(\"field must be a Field\");return e.parent && e.parent !== this.parent && e.parent.remove(e), this.oneof.push(e.name), this.fieldsArray.push(e), e.partOf = this, s(this), this;}, a.prototype.remove = function (e) {if (!(e instanceof o)) throw TypeError(\"field must be a Field\");var t = this.fieldsArray.indexOf(e);if (t < 0) throw Error(e + \" is not a member of \" + this);return this.fieldsArray.splice(t, 1), (t = this.oneof.indexOf(e.name)) > -1 && this.oneof.splice(t, 1), e.partOf = null, this;}, a.prototype.onAdd = function (e) {i.prototype.onAdd.call(this, e);for (var t = 0; t < this.oneof.length; ++t) {var r = e.get(this.oneof[t]);r && !r.partOf && (r.partOf = this, this.fieldsArray.push(r));}s(this);}, a.prototype.onRemove = function (e) {for (var t, r = 0; r < this.fieldsArray.length; ++r) {(t = this.fieldsArray[r]).parent && t.parent.remove(t);}i.prototype.onRemove.call(this, e);}, a.d = function () {for (var e = new Array(arguments.length), t = 0; t < arguments.length;) {e[t] = arguments[t++];}return function (t, r) {n.decorateType(t.constructor).add(new a(r, e)), Object.defineProperty(t, r, { get: n.oneOfGetter(e), set: n.oneOfSetter(e) });};}, a._configure = function () {o = r(9286), n = r(9935);};}, 7845: function _(e, t, r) {\"use strict\";var o, n, i, a, s, c, u, l, p, d, h;e.exports = I, I.filename = null, I.defaults = { keepCase: !1 };var f = /^[1-9][0-9]*$/,m = /^-?[1-9][0-9]*$/,E = /^0[x][0-9a-fA-F]+$/,g = /^-?0[x][0-9a-fA-F]+$/,y = /^0[0-7]+$/,T = /^-?0[0-7]+$/,_ = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,v = /^[a-zA-Z_][a-zA-Z_0-9]*$/,R = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,O = /^(?:\\.[a-zA-Z][a-zA-Z_0-9]*)+$/;function I(e, t, r) {t instanceof n || (r = t, t = new n()), r || (r = I.defaults);var S,N,C,A,b,M = o(e, r.alternateCommentMode || !1),U = M.next,k = M.push,w = M.peek,P = M.skip,L = M.cmnt,D = !0,G = !1,j = t,x = r.keepCase ? function (e) {return e;} : h.camelCase;function B(e, t, r) {var o = I.filename;return r || (I.filename = null), Error(\"illegal \" + (t || \"token\") + \" '\" + e + \"' (\" + (o ? o + \", \" : \"\") + \"line \" + M.line + \")\");}function H() {var e,t = [];do {if ('\"' !== (e = U()) && \"'\" !== e) throw B(e);t.push(U()), P(e), e = w();} while ('\"' === e || \"'\" === e);return t.join(\"\");}function F(e) {var t = U();switch (t) {case \"'\":case '\"':return k(t), H();case \"true\":case \"TRUE\":return !0;case \"false\":case \"FALSE\":return !1;}try {return function (e, t) {var r = 1;switch (\"-\" === e.charAt(0) && (r = -1, e = e.substring(1)), e) {case \"inf\":case \"INF\":case \"Inf\":return r * (1 / 0);case \"nan\":case \"NAN\":case \"Nan\":case \"NaN\":return NaN;case \"0\":return 0;}if (f.test(e)) return r * parseInt(e, 10);if (E.test(e)) return r * parseInt(e, 16);if (y.test(e)) return r * parseInt(e, 8);if (_.test(e)) return r * parseFloat(e);throw B(e, \"number\", !0);}(t);} catch (r) {if (e && R.test(t)) return t;throw B(t, \"value\");}}function W(e, t) {var r, o;do {!t || '\"' !== (r = w()) && \"'\" !== r ? e.push([o = Z(U()), P(\"to\", !0) ? Z(U()) : o]) : e.push(H());} while (P(\",\", !0));P(\";\");}function Z(e, t) {switch (e) {case \"max\":case \"MAX\":case \"Max\":return 536870911;case \"0\":return 0;}if (!t && \"-\" === e.charAt(0)) throw B(e, \"id\");if (m.test(e)) return parseInt(e, 10);if (g.test(e)) return parseInt(e, 16);if (T.test(e)) return parseInt(e, 8);throw B(e, \"id\");}function q() {if (void 0 !== S) throw B(\"package\");if (S = U(), !R.test(S)) throw B(S, \"name\");j = j.define(S), P(\";\");}function K() {var e,t = w();switch (t) {case \"weak\":e = C || (C = []), U();break;case \"public\":U();default:e = N || (N = []);}t = H(), P(\";\"), e.push(t);}function V() {if (P(\"=\"), A = H(), !(G = \"proto3\" === A) && \"proto2\" !== A) throw B(A, \"syntax\");P(\";\");}function J(e, t) {switch (t) {case \"option\":return Y(e, t), P(\";\"), !0;case \"message\":return function (e, t) {if (!v.test(t = U())) throw B(t, \"type name\");var r = new i(t);z(r, function (e) {if (!J(r, e)) switch (e) {case \"map\":!function (e) {P(\"<\");var t = U();if (void 0 === d.mapKey[t]) throw B(t, \"type\");P(\",\");var r = U();if (!R.test(r)) throw B(r, \"type\");P(\">\");var o = U();if (!v.test(o)) throw B(o, \"name\");P(\"=\");var n = new s(x(o), Z(U()), t, r);z(n, function (e) {if (\"option\" !== e) throw B(e);Y(n, e), P(\";\");}, function () {ee(n);}), e.add(n);}(r);break;case \"required\":case \"optional\":case \"repeated\":X(r, e);break;case \"oneof\":!function (e, t) {if (!v.test(t = U())) throw B(t, \"name\");var r = new c(x(t));z(r, function (e) {\"option\" === e ? (Y(r, e), P(\";\")) : (k(e), X(r, \"optional\"));}), e.add(r);}(r, e);break;case \"extensions\":W(r.extensions || (r.extensions = []));break;case \"reserved\":W(r.reserved || (r.reserved = []), !0);break;default:if (!G || !R.test(e)) throw B(e);k(e), X(r, \"optional\");}}), e.add(r);}(e, t), !0;case \"enum\":return function (e, t) {if (!v.test(t = U())) throw B(t, \"name\");var r = new u(t);z(r, function (e) {switch (e) {case \"option\":Y(r, e), P(\";\");break;case \"reserved\":W(r.reserved || (r.reserved = []), !0);break;default:!function (e, t) {if (!v.test(t)) throw B(t, \"name\");P(\"=\");var r = Z(U(), !0),o = {};z(o, function (e) {if (\"option\" !== e) throw B(e);Y(o, e), P(\";\");}, function () {ee(o);}), e.add(t, r, o.comment);}(r, e);}}), e.add(r);}(e, t), !0;case \"service\":return function (e, t) {if (!v.test(t = U())) throw B(t, \"service name\");var r = new l(t);z(r, function (e) {if (!J(r, e)) {if (\"rpc\" !== e) throw B(e);!function (e, t) {var r = t;if (!v.test(t = U())) throw B(t, \"name\");var o,n,i,a,s = t;if (P(\"(\"), P(\"stream\", !0) && (n = !0), !R.test(t = U())) throw B(t);if (o = t, P(\")\"), P(\"returns\"), P(\"(\"), P(\"stream\", !0) && (a = !0), !R.test(t = U())) throw B(t);i = t, P(\")\");var c = new p(s, r, o, i, n, a);z(c, function (e) {if (\"option\" !== e) throw B(e);Y(c, e), P(\";\");}), e.add(c);}(r, e);}}), e.add(r);}(e, t), !0;case \"extend\":return function (e, t) {if (!R.test(t = U())) throw B(t, \"reference\");var r = t;z(null, function (t) {switch (t) {case \"required\":case \"repeated\":case \"optional\":X(e, t, r);break;default:if (!G || !R.test(t)) throw B(t);k(t), X(e, \"optional\", r);}});}(e, t), !0;}return !1;}function z(e, t, r) {var o = M.line;if (e && (e.comment = L(), e.filename = I.filename), P(\"{\", !0)) {for (var n; \"}\" !== (n = U());) {t(n);}P(\";\", !0);} else r && r(), P(\";\"), e && \"string\" != typeof e.comment && (e.comment = L(o));}function X(e, t, r) {var o = U();if (\"group\" !== o) {if (!R.test(o)) throw B(o, \"type\");var n = U();if (!v.test(n)) throw B(n, \"name\");n = x(n), P(\"=\");var s = new a(n, Z(U()), o, t, r);z(s, function (e) {if (\"option\" !== e) throw B(e);Y(s, e), P(\";\");}, function () {ee(s);}), e.add(s), G || !s.repeated || void 0 === d.packed[o] && void 0 !== d.basic[o] || s.setOption(\"packed\", !1, !0);} else !function (e, t) {var r = U();if (!v.test(r)) throw B(r, \"name\");var o = h.lcFirst(r);r === o && (r = h.ucFirst(r)), P(\"=\");var n = Z(U()),s = new i(r);s.group = !0;var c = new a(o, n, r, t);c.filename = I.filename, z(s, function (e) {switch (e) {case \"option\":Y(s, e), P(\";\");break;case \"required\":case \"optional\":case \"repeated\":X(s, e);break;default:throw B(e);}}), e.add(s).add(c);}(e, t);}function Y(e, t) {var r = P(\"(\", !0);if (!R.test(t = U())) throw B(t, \"name\");var o = t;r && (P(\")\"), o = \"(\" + o + \")\", t = w(), O.test(t) && (o += t, U())), P(\"=\"), Q(e, o);}function Q(e, t) {if (P(\"{\", !0)) do {if (!v.test(b = U())) throw B(b, \"name\");\"{\" === w() ? Q(e, t + \".\" + b) : (P(\":\"), \"{\" === w() ? Q(e, t + \".\" + b) : $(e, t + \".\" + b, F(!0)));} while (!P(\"}\", !0));else $(e, t, F(!0));}function $(e, t, r) {e.setOption && e.setOption(t, r);}function ee(e) {if (P(\"[\", !0)) {do {Y(e, \"option\");} while (P(\",\", !0));P(\"]\");}return e;}for (; null !== (b = U());) {switch (b) {case \"package\":if (!D) throw B(b);q();break;case \"import\":if (!D) throw B(b);K();break;case \"syntax\":if (!D) throw B(b);V();break;case \"option\":if (!D) throw B(b);Y(j, b), P(\";\");break;default:if (J(j, b)) {D = !1;continue;}throw B(b);}}return I.filename = null, { package: S, imports: N, weakImports: C, syntax: A, root: t };}I._configure = function () {o = r(8869), n = r(4685), i = r(192), a = r(9286), s = r(1435), c = r(9735), u = r(582), l = r(9447), p = r(484), d = r(4696), h = r(9935);};}, 1444: function _(e) {var t = e.exports,r = t.isAbsolute = function (e) {return /^(?:\\/|\\w+:)/.test(e);},o = t.normalize = function (e) {var t = (e = e.replace(/\\\\/g, \"/\").replace(/\\/{2,}/g, \"/\")).split(\"/\"),o = r(e),n = \"\";o && (n = t.shift() + \"/\");for (var i = 0; i < t.length;) {\"..\" === t[i] ? i > 0 && \"..\" !== t[i - 1] ? t.splice(--i, 2) : o ? t.splice(i, 1) : ++i : \".\" === t[i] ? t.splice(i, 1) : ++i;}return n + t.join(\"/\");};t.resolve = function (e, t, n) {return n || (t = o(t)), r(t) ? t : (n || (e = o(e)), (e = e.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? o(e + \"/\" + t) : t);};}, 8997: function _(e) {e.exports = function (e, t, r) {var o = r || 8192,n = o >>> 1,i = null,a = o;return function (r) {if (r < 1 || r > n) return e(r);a + r > o && (i = e(o), a = 0);var s = t.call(i, a, a += r);return 7 & a && (a = 1 + (7 | a)), s;};};}, 8494: function _(e, t, r) {e.exports = s;var o,n,i = r(9935);function a(e, t) {return RangeError(\"index out of range: \" + e.pos + \" + \" + (t || 1) + \" > \" + e.len);}function s(e) {this.buf = e, this.pos = 0, this.len = e.length;}var c,u = \"undefined\" != typeof Uint8Array ? function (e) {return e instanceof Uint8Array || Array.isArray(e) ? new s(e) : (\"undefined\" != typeof ArrayBuffer && e instanceof ArrayBuffer && __f__(\"warn\", \"\", \" at sdk/uniapp-sdk-4.1.2.js:1\"), new s(new Uint8Array(e)));} : function (e) {if (Array.isArray(e)) return new s(e);};function l() {var e = new o(0, 0),t = 0;if (!(this.len - this.pos > 4)) {for (; t < 3; ++t) {if (this.pos >= this.len) throw a(this);if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;}return e.lo = (e.lo | (127 & this.buf[this.pos++]) << 7 * t) >>> 0, e;}for (; t < 4; ++t) {if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 7 * t) >>> 0, this.buf[this.pos++] < 128) return e;}if (e.lo = (e.lo | (127 & this.buf[this.pos]) << 28) >>> 0, e.hi = (e.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128) return e;if (t = 0, this.len - this.pos > 4) {for (; t < 5; ++t) {if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e;}} else for (; t < 5; ++t) {if (this.pos >= this.len) throw a(this);if (e.hi = (e.hi | (127 & this.buf[this.pos]) << 7 * t + 3) >>> 0, this.buf[this.pos++] < 128) return e;}throw Error(\"invalid varint encoding\");}function p(e, t) {return (e[t - 4] | e[t - 3] << 8 | e[t - 2] << 16 | e[t - 1] << 24) >>> 0;}function d() {if (this.pos + 8 > this.len) throw a(this, 8);return new o(p(this.buf, this.pos += 4), p(this.buf, this.pos += 4));}s.create = i.Buffer ? function (e) {return (s.create = function (e) {return i.Buffer.isBuffer(e) ? new (void 0)(e) : u(e);})(e);} : u, s.prototype._slice = i.Array.prototype.subarray || i.Array.prototype.slice, s.prototype.uint32 = (c = 4294967295, function () {if (c = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128) return c;if (c = (c | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128) return c;if (c = (c | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128) return c;if (c = (c | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128) return c;if (c = (c | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128) return c;if ((this.pos += 5) > this.len) throw this.pos = this.len, a(this, 10);return c;}), s.prototype.int32 = function () {return 0 | this.uint32();}, s.prototype.sint32 = function () {var e = this.uint32();return e >>> 1 ^ -(1 & e) | 0;}, s.prototype.bool = function () {return 0 !== this.uint32();}, s.prototype.fixed32 = function () {if (this.pos + 4 > this.len) throw a(this, 4);return p(this.buf, this.pos += 4);}, s.prototype.sfixed32 = function () {if (this.pos + 4 > this.len) throw a(this, 4);return 0 | p(this.buf, this.pos += 4);}, s.prototype.float = function () {if (this.pos + 4 > this.len) throw a(this, 4);var e = i.float.readFloatLE(this.buf, this.pos);return this.pos += 4, e;}, s.prototype.double = function () {if (this.pos + 8 > this.len) throw a(this, 4);var e = i.float.readDoubleLE(this.buf, this.pos);return this.pos += 8, e;}, s.prototype.bytes = function () {var e = this.uint32(),t = this.pos,r = this.pos + e;if (r > this.len) throw a(this, e);return this.pos += e, Array.isArray(this.buf) ? this.buf.slice(t, r) : t === r ? new this.buf.constructor(0) : this._slice.call(this.buf, t, r);}, s.prototype.string = function () {var e = this.bytes();return n.read(e, 0, e.length);}, s.prototype.skip = function (e) {if (\"number\" == typeof e) {if (this.pos + e > this.len) throw a(this, e);this.pos += e;} else do {if (this.pos >= this.len) throw a(this);} while (128 & this.buf[this.pos++]);return this;}, s.prototype.skipType = function (e) {switch (e) {case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for (; 4 != (e = 7 & this.uint32());) {this.skipType(e);}break;case 5:this.skip(4);break;default:throw Error(\"invalid wire type \" + e + \" at offset \" + this.pos);}return this;}, s._configure = function () {o = r(8365), n = r(1498);var e = i.Long ? \"toLong\" : \"toNumber\";i.merge(s.prototype, { int64: function int64() {return l.call(this)[e](!1);}, uint64: function uint64() {return l.call(this)[e](!0);}, sint64: function sint64() {return l.call(this).zzDecode()[e](!1);}, fixed64: function fixed64() {return d.call(this)[e](!0);}, sfixed64: function sfixed64() {return d.call(this)[e](!1);} });};}, 4685: function _(e, t, r) {e.exports = p;var o = r(2476);((p.prototype = Object.create(o.prototype)).constructor = p).className = \"Root\";var n,i,a,s = r(9286),c = r(582),u = r(9735),l = r(9935);function p(e) {o.call(this, \"\", e), this.deferred = [], this.files = [], this.names = [];}function d() {}p.fromJSON = function (e, t) {return e = \"string\" == typeof e ? JSON.parse(e) : e, t || (t = new p()), e.options && t.setOptions(e.options), t.addJSON(e.nested);}, p.prototype.resolvePath = l.path.resolve, p.prototype.parseFromPbString = function e(t, r, o) {\"function\" == typeof r && (o = r, r = void 0);var n = this;if (!o) return l.asPromise(e, n, t, r);var s = null;if (\"string\" == typeof t) s = JSON.parse(t);else {if (\"object\" != typeof t) return void __f__(\"log\", \"pb格式转化失败\", \" at sdk/uniapp-sdk-4.1.2.js:1\");s = t;}function c(e, t) {if (o) {var r = o;o = null, r(e, t);}}function u(e, t) {try {if (l.isString(t) && \"{\" === t.charAt(0) && (t = JSON.parse(t)), l.isString(t)) {i.filename = e;var o,a = i(t, n, r),s = 0;if (a.imports) for (; s < a.imports.length; ++s) {p(o = a.imports[s]);}if (a.weakImports) {for (s = 0; s < a.weakImports.length; ++s) {o = a.weakImports[s];}p(o);}} else n.setOptions(t.options).addJSON(t.nested);} catch (e) {c(e);}c(null, n);}function p(e) {n.names.indexOf(e) > -1 || (n.names.push(e), e in a && u(e, a[e]));}u(s.name, s.pbJsonStr);}, p.prototype.load = function e(t, r, o) {\"function\" == typeof r && (o = r, r = void 0);var n = this;if (!o) return l.asPromise(e, n, t, r);var s = o === d;function c(e, t) {if (o) {var r = o;if (o = null, s) throw e;r(e, t);}}function u(e, t) {try {if (l.isString(t) && \"{\" === t.charAt(0) && (t = JSON.parse(t)), l.isString(t)) {i.filename = e;var o,a = i(t, n, r),u = 0;if (a.imports) for (; u < a.imports.length; ++u) {(o = n.resolvePath(e, a.imports[u])) && p(o);}if (a.weakImports) for (u = 0; u < a.weakImports.length; ++u) {(o = n.resolvePath(e, a.weakImports[u])) && p(o, !0);}} else n.setOptions(t.options).addJSON(t.nested);} catch (e) {c(e);}s || h || c(null, n);}function p(e, t) {var r = e.lastIndexOf(\"google/protobuf/\");if (r > -1) {var i = e.substring(r);i in a && (e = i);}if (!(n.files.indexOf(e) > -1)) if (n.files.push(e), e in a) s ? u(e, a[e]) : (++h, setTimeout(function () {--h, u(e, a[e]);}));else if (s) {var p;try {p = l.fs.readFileSync(e).toString(\"utf8\");} catch (e) {return void (t || c(e));}u(e, p);} else ++h, l.fetch(e, function (r, i) {--h, o && (r ? t ? h || c(null, n) : c(r) : u(e, i));});}var h = 0;l.isString(t) && (t = [t]);for (var f, m = 0; m < t.length; ++m) {(f = n.resolvePath(\"\", t[m])) && p(f);}if (s) return n;h || c(null, n);}, p.prototype.loadSync = function (e, t) {if (!l.isNode) throw Error(\"not supported\");return this.load(e, t, d);}, p.prototype.resolveAll = function () {if (this.deferred.length) throw Error(\"unresolvable extensions: \" + this.deferred.map(function (e) {return \"'extend \" + e.extend + \"' in \" + e.parent.fullName;}).join(\", \"));return o.prototype.resolveAll.call(this);};var h = /^[A-Z]/;function f(e, t) {var r = t.parent.lookup(t.extend);if (r) {var o = new s(t.fullName, t.id, t.type, t.rule, void 0, t.options);return o.declaringField = t, t.extensionField = o, r.add(o), !0;}return !1;}p.prototype._handleAdd = function (e) {if (e instanceof s) void 0 === e.extend || e.extensionField || f(0, e) || this.deferred.push(e);else if (e instanceof c) h.test(e.name) && (e.parent[e.name] = e.values);else if (!(e instanceof u)) {if (e instanceof n) for (var t = 0; t < this.deferred.length;) {f(0, this.deferred[t]) ? this.deferred.splice(t, 1) : ++t;}for (var r = 0; r < e.nestedArray.length; ++r) {this._handleAdd(e._nestedArray[r]);}h.test(e.name) && (e.parent[e.name] = e);}}, p.prototype._handleRemove = function (e) {if (e instanceof s) {if (void 0 !== e.extend) if (e.extensionField) e.extensionField.parent.remove(e.extensionField), e.extensionField = null;else {var t = this.deferred.indexOf(e);t > -1 && this.deferred.splice(t, 1);}} else if (e instanceof c) h.test(e.name) && delete e.parent[e.name];else if (e instanceof o) {for (var r = 0; r < e.nestedArray.length; ++r) {this._handleRemove(e._nestedArray[r]);}h.test(e.name) && delete e.parent[e.name];}}, p._configure = function () {n = r(192), i = r(7845), a = r(3072), s = r(9286), c = r(582), u = r(9735), l = r(9935);};}, 889: function _(e) {e.exports = {};}, 7325: function _(e, t, r) {\"use strict\";e.exports = n;var o = r(9935);function n(e, t, r) {if (\"function\" != typeof e) throw TypeError(\"rpcImpl must be a function\");o.EventEmitter.call(this), this.rpcImpl = e, this.requestDelimited = Boolean(t), this.responseDelimited = Boolean(r);}(n.prototype = Object.create(o.EventEmitter.prototype)).constructor = n, n.prototype.rpcCall = function e(t, r, n, i, a) {if (!i) throw TypeError(\"request must be specified\");var s = this;if (!a) return o.asPromise(e, s, t, r, n, i);if (s.rpcImpl) try {return s.rpcImpl(t, r[s.requestDelimited ? \"encodeDelimited\" : \"encode\"](i).finish(), function (e, r) {if (e) return s.emit(\"error\", e, t), a(e);if (null !== r) {if (!(r instanceof n)) try {r = n[s.responseDelimited ? \"decodeDelimited\" : \"decode\"](r);} catch (e) {return s.emit(\"error\", e, t), a(e);}return s.emit(\"data\", r, t), a(null, r);}s.end(!0);});} catch (e) {return s.emit(\"error\", e, t), void setTimeout(function () {a(e);}, 0);} else setTimeout(function () {a(Error(\"already ended\"));}, 0);}, n.prototype.end = function (e) {return this.rpcImpl && (e || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit(\"end\").off()), this;};}, 9447: function _(e, t, r) {\"use strict\";e.exports = s;var o,n,i,a = r(2476);function s(e, t) {a.call(this, e, t), this.methods = {}, this._methodsArray = null;}function c(e) {return e._methodsArray = null, e;}((s.prototype = Object.create(a.prototype)).constructor = s).className = \"Service\", s.fromJSON = function (e, t) {var r = new s(e, t.options);if (t.methods) for (var n = Object.keys(t.methods), i = 0; i < n.length; ++i) {r.add(o.fromJSON(n[i], t.methods[n[i]]));}return t.nested && r.addJSON(t.nested), r.comment = t.comment, r;}, s.prototype.toJSON = function (e) {var t = a.prototype.toJSON.call(this, e),r = !!e && Boolean(e.keepComments);return n.toObject([\"options\", t && t.options || void 0, \"methods\", a.arrayToJSON(this.methodsArray, e) || {}, \"nested\", t && t.nested || void 0, \"comment\", r ? this.comment : void 0]);}, Object.defineProperty(s.prototype, \"methodsArray\", { get: function get() {return this._methodsArray || (this._methodsArray = n.toArray(this.methods));} }), s.prototype.get = function (e) {return this.methods[e] || a.prototype.get.call(this, e);}, s.prototype.resolveAll = function () {for (var e = this.methodsArray, t = 0; t < e.length; ++t) {e[t].resolve();}return a.prototype.resolve.call(this);}, s.prototype.add = function (e) {if (this.get(e.name)) throw Error(\"duplicate name '\" + e.name + \"' in \" + this);return e instanceof o ? (this.methods[e.name] = e, e.parent = this, c(this)) : a.prototype.add.call(this, e);}, s.prototype.remove = function (e) {if (e instanceof o) {if (this.methods[e.name] !== e) throw Error(e + \" is not a member of \" + this);return delete this.methods[e.name], e.parent = null, c(this);}return a.prototype.remove.call(this, e);}, s.prototype.create = function (e, t, r) {for (var o, a = new i.Service(e, t, r), s = 0; s < this.methodsArray.length; ++s) {var c = n.lcFirst((o = this._methodsArray[s]).resolve().name).replace(/[^$\\w_]/g, \"\");a[c] = n.codegen([\"r\", \"c\"], n.isReserved(c) ? c + \"_\" : c)(\"return this.rpcCall(m,q,s,r,c)\")({ m: o, q: o.resolvedRequestType.ctor, s: o.resolvedResponseType.ctor });}return a;}, s._configure = function () {o = r(484), n = r(9935), i = r(7325);};}, 8869: function _(e) {e.exports = p;var t = /[\\s{}=;:[\\],'\"()<>]/g,r = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,o = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g,n = /^ *[*/]+ */,i = /^\\s*\\*?\\/*/,a = /\\n/g,s = /\\s/,c = /\\\\(.?)/g,u = { 0: \"\\0\", r: \"\\r\", n: \"\\n\", t: \"\\t\" };function l(e) {return e.replace(c, function (e, t) {switch (t) {case \"\\\\\":case \"\":return t;default:return u[t] || \"\";}});}function p(e, c) {e = e.toString();var u = 0,p = e.length,d = 1,h = null,f = null,m = 0,E = !1,g = [],y = null;function T(e) {return Error(\"illegal \" + e + \" (line \" + d + \")\");}function _(t) {return e.charAt(t);}function v(t, r) {h = e.charAt(t++), m = d, E = !1;var o,s = t - (c ? 2 : 3);do {if (--s < 0 || \"\\n\" === (o = e.charAt(s))) {E = !0;break;}} while (\" \" === o || \"\\t\" === o);for (var u = e.substring(t, r).split(a), l = 0; l < u.length; ++l) {u[l] = u[l].replace(c ? i : n, \"\").trim();}f = u.join(\"\\n\").trim();}function R(t) {var r = O(t),o = e.substring(t, r);return /^\\s*\\/{1,2}/.test(o);}function O(e) {for (var t = e; t < p && \"\\n\" !== _(t);) {t++;}return t;}function I() {if (g.length > 0) return g.shift();if (y) return function () {var t = \"'\" === y ? o : r;t.lastIndex = u - 1;var n = t.exec(e);if (!n) throw T(\"string\");return u = t.lastIndex, S(y), y = null, l(n[1]);}();var n, i, a, h, f;do {if (u === p) return null;for (n = !1; s.test(a = _(u));) {if (\"\\n\" === a && ++d, ++u === p) return null;}if (\"/\" === _(u)) {if (++u === p) throw T(\"comment\");if (\"/\" === _(u)) {if (c) {if (h = u, f = !1, R(u)) {f = !0;do {if ((u = O(u)) === p) break;u++;} while (R(u));} else u = Math.min(p, O(u) + 1);f && v(h, u), d++, n = !0;} else {for (f = \"/\" === _(h = u + 1); \"\\n\" !== _(++u);) {if (u === p) return null;}++u, f && v(h, u - 1), ++d, n = !0;}} else {if (\"*\" !== (a = _(u))) return \"/\";h = u + 1, f = c || \"*\" === _(h);do {if (\"\\n\" === a && ++d, ++u === p) throw T(\"comment\");i = a, a = _(u);} while (\"*\" !== i || \"/\" !== a);++u, f && v(h, u - 2), n = !0;}}} while (n);var m = u;if (t.lastIndex = 0, !t.test(_(m++))) for (; m < p && !t.test(_(m));) {++m;}var E = e.substring(u, u = m);return '\"' !== E && \"'\" !== E || (y = E), E;}function S(e) {g.push(e);}function N() {if (!g.length) {var e = I();if (null === e) return null;S(e);}return g[0];}return Object.defineProperty({ next: I, peek: N, push: S, skip: function skip(e, t) {var r = N();if (r === e) return I(), !0;if (!t) throw T(\"token '\" + r + \"', '\" + e + \"' expected\");return !1;}, cmnt: function cmnt(e) {var t = null;return void 0 === e ? m === d - 1 && (c || \"*\" === h || E) && (t = f) : (m < e && N(), m !== e || E || !c && \"/\" !== h || (t = f)), t;} }, \"line\", { get: function get() {return d;} });}p.unescape = l;}, 192: function _(e, t, r) {e.exports = y;var o,n,i,a,s,c,u,l,p,d,h,f,m,E,g = r(2476);function y(e, t) {g.call(this, e, t), this.fields = {}, this.oneofs = void 0, this.extensions = void 0, this.reserved = void 0, this.group = void 0, this._fieldsById = null, this._fieldsArray = null, this._oneofsArray = null, this._ctor = null;}function T(e) {return e._fieldsById = e._fieldsArray = e._oneofsArray = null, delete e.encode, delete e.decode, delete e.verify, e;}((y.prototype = Object.create(g.prototype)).constructor = y).className = \"Type\", Object.defineProperties(y.prototype, { fieldsById: { get: function get() {if (this._fieldsById) return this._fieldsById;this._fieldsById = {};for (var e = Object.keys(this.fields), t = 0; t < e.length; ++t) {var r = this.fields[e[t]],o = r.id;if (this._fieldsById[o]) throw Error(\"duplicate id \" + o + \" in \" + this);this._fieldsById[o] = r;}return this._fieldsById;} }, fieldsArray: { get: function get() {return this._fieldsArray || (this._fieldsArray = u.toArray(this.fields));} }, oneofsArray: { get: function get() {return this._oneofsArray || (this._oneofsArray = u.toArray(this.oneofs));} }, ctor: { get: function get() {return this._ctor || (this.ctor = y.generateConstructor(this));}, set: function set(e) {var t = e.prototype;t instanceof i || ((e.prototype = new i()).constructor = e, u.merge(e.prototype, t)), e.$type = e.prototype.$type = this, u.merge(e, i, !0), u.merge(e.prototype, i, !0), this._ctor = e;for (var r = 0; r < this.fieldsArray.length; ++r) {this._fieldsArray[r].resolve();}var o = {};for (r = 0; r < this.oneofsArray.length; ++r) {var n = this._oneofsArray[r].resolve().name,a = function (e) {for (var t = {}, r = 0; r < e.length; ++r) {t[e[r]] = 0;}return { setter: function setter(r) {if (!(e.indexOf(r) < 0)) {t[r] = 1;for (var o = 0; o < e.length; ++o) {e[o] !== r && delete this[e[o]];}}}, getter: function getter() {for (var e = Object.keys(this), r = e.length - 1; r > -1; --r) {if (1 === t[e[r]] && void 0 !== this[e[r]] && null !== this[e[r]]) return e[r];}} };}(this._oneofsArray[r].oneof);o[n] = { get: a.getter, set: a.setter };}r && Object.defineProperties(e.prototype, o);} } }), y.generateConstructor = function (e) {return function (t) {for (var r, o = 0; o < e.fieldsArray.length; o++) {(r = e._fieldsArray[o]).map ? this[r.name] = {} : r.repeated && (this[r.name] = []);}if (t) for (var n = Object.keys(t), i = 0; i < n.length; ++i) {null != t[n[i]] && (this[n[i]] = t[n[i]]);}};}, y.fromJSON = function (e, t) {var r = new y(e, t.options);r.extensions = t.extensions, r.reserved = t.reserved;for (var i = Object.keys(t.fields), s = 0; s < i.length; ++s) {r.add((void 0 !== t.fields[i[s]].keyType ? E.fromJSON : n.fromJSON)(i[s], t.fields[i[s]]));}if (t.oneofs) for (i = Object.keys(t.oneofs), s = 0; s < i.length; ++s) {r.add(a.fromJSON(i[s], t.oneofs[i[s]]));}if (t.nested) for (i = Object.keys(t.nested), s = 0; s < i.length; ++s) {var c = t.nested[i[s]];r.add((void 0 !== c.id ? n.fromJSON : void 0 !== c.fields ? y.fromJSON : void 0 !== c.values ? o.fromJSON : void 0 !== c.methods ? h.fromJSON : g.fromJSON)(i[s], c));}return t.extensions && t.extensions.length && (r.extensions = t.extensions), t.reserved && t.reserved.length && (r.reserved = t.reserved), t.group && (r.group = !0), t.comment && (r.comment = t.comment), r;}, y.prototype.toJSON = function (e) {var t = g.prototype.toJSON.call(this, e),r = !!e && Boolean(e.keepComments);return { options: t && t.options || void 0, oneofs: g.arrayToJSON(this.oneofsArray, e), fields: g.arrayToJSON(this.fieldsArray.filter(function (e) {return !e.declaringField;}), e) || {}, extensions: this.extensions && this.extensions.length ? this.extensions : void 0, reserved: this.reserved && this.reserved.length ? this.reserved : void 0, group: this.group || void 0, nested: t && t.nested || void 0, comment: r ? this.comment : void 0 };}, y.prototype.resolveAll = function () {for (var e = this.fieldsArray, t = 0; t < e.length;) {e[t++].resolve();}var r = this.oneofsArray;for (t = 0; t < r.length;) {r[t++].resolve();}return g.prototype.resolveAll.call(this);}, y.prototype.get = function (e) {return this.fields[e] || this.oneofs && this.oneofs[e] || this.nested && this.nested[e] || null;}, y.prototype.add = function (e) {if (this.get(e.name)) throw Error(\"duplicate name '\" + e.name + \"' in \" + this);if (e instanceof n && void 0 === e.extend) {if (this._fieldsById && this._fieldsById[e.id]) throw Error(\"duplicate id \" + e.id + \" in \" + this);if (this.isReservedId(e.id)) throw Error(\"id \" + e.id + \" is reserved in \" + this);if (this.isReservedName(e.name)) throw Error(\"name '\" + e.name + \"' is reserved in \" + this);return e.parent && e.parent.remove(e), this.fields[e.name] = e, e.message = this, e.onAdd(this), T(this);}return e instanceof a ? (this.oneofs || (this.oneofs = {}), this.oneofs[e.name] = e, e.onAdd(this), T(this)) : g.prototype.add.call(this, e);}, y.prototype.remove = function (e) {if (e instanceof n && void 0 === e.extend) {if (!this.fields || this.fields[e.name] !== e) throw Error(e + \" is not a member of \" + this);return delete this.fields[e.name], e.parent = null, e.onRemove(this), T(this);}if (e instanceof a) {if (!this.oneofs || this.oneofs[e.name] !== e) throw Error(e + \" is not a member of \" + this);return delete this.oneofs[e.name], e.parent = null, e.onRemove(this), T(this);}return g.prototype.remove.call(this, e);}, y.prototype.isReservedId = function (e) {return g.isReservedId(this.reserved, e);}, y.prototype.isReservedName = function (e) {return g.isReservedName(this.reserved, e);}, y.prototype.create = function (e) {return new this.ctor(e);}, y.prototype.setup = function () {for (var e = this.fullName, t = [], r = 0; r < this.fieldsArray.length; ++r) {t.push(this._fieldsArray[r].resolve().resolvedType);}this.encode = p(this)({ Writer: s, types: t, util: u }), this.decode = d(this)({ Reader: c, types: t, util: u }), this.verify = l(this)({ types: t, util: u }), this.fromObject = m.fromObject(this)({ types: t, util: u }), this.toObject = m.toObject(this)({ types: t, util: u });var o = f[e];if (o) {var n = Object.create(this);n.fromObject = this.fromObject, this.fromObject = o.fromObject.bind(n), n.toObject = this.toObject, this.toObject = o.toObject.bind(n);}return this;}, y.prototype.encode = function (e, t) {return this.setup().encode(e, t);}, y.prototype.encodeDelimited = function (e, t) {return this.encode(e, t && t.len ? t.fork() : t).ldelim();}, y.prototype.decode = function (e, t) {return this.setup().decode(e, t);}, y.prototype.decodeDelimited = function (e) {return e instanceof c || (e = c.create(e)), this.decode(e, e.uint32());}, y.prototype.verify = function (e) {return this.setup().verify(e);}, y.prototype.fromObject = function (e) {return this.setup().fromObject(e);}, y.prototype.toObject = function (e, t) {return this.setup().toObject(e, t);}, y.d = function (e) {return function (t) {u.decorateType(t, e);};}, y._configure = function () {o = r(582), n = r(9286), i = r(339), a = r(9735), s = r(5244), c = r(8494), u = r(9935), l = r(5484), p = r(9929), d = r(3888), h = r(9447), f = r(7834), m = r(525), E = r(1435);};}, 4696: function _(e, t, r) {\"use strict\";var o = e.exports,n = r(9935),i = [\"double\", \"float\", \"int32\", \"uint32\", \"sint32\", \"fixed32\", \"sfixed32\", \"int64\", \"uint64\", \"sint64\", \"fixed64\", \"sfixed64\", \"bool\", \"string\", \"bytes\"];function a(e, t) {var r = 0,o = {};for (t |= 0; r < e.length;) {o[i[r + t]] = e[r++];}return o;}o.basic = a([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2, 2]), o.defaults = a([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !1, \"\", n.emptyArray, null]), o.long = a([0, 0, 0, 1, 1], 7), o.mapKey = a([0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2], 2), o.packed = a([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0]), o._configure = function () {n = r(9935);};}, 1498: function _(e) {\"use strict\";var t = e.exports;t.length = function (e) {for (var t = 0, r = 0, o = 0; o < e.length; ++o) {(r = e.charCodeAt(o)) < 128 ? t += 1 : r < 2048 ? t += 2 : 55296 == (64512 & r) && 56320 == (64512 & e.charCodeAt(o + 1)) ? (++o, t += 4) : t += 3;}return t;}, t.read = function (e, t, r) {if (r - t < 1) return \"\";for (var o, n = null, i = [], a = 0; t < r;) {(o = e[t++]) < 128 ? i[a++] = o : o > 191 && o < 224 ? i[a++] = (31 & o) << 6 | 63 & e[t++] : o > 239 && o < 365 ? (o = ((7 & o) << 18 | (63 & e[t++]) << 12 | (63 & e[t++]) << 6 | 63 & e[t++]) - 65536, i[a++] = 55296 + (o >> 10), i[a++] = 56320 + (1023 & o)) : i[a++] = (15 & o) << 12 | (63 & e[t++]) << 6 | 63 & e[t++], a > 8191 && ((n || (n = [])).push(String.fromCharCode.apply(String, i)), a = 0);}return n ? (a && n.push(String.fromCharCode.apply(String, i.slice(0, a))), n.join(\"\")) : String.fromCharCode.apply(String, i.slice(0, a));}, t.write = function (e, t, r) {for (var o, n, i = r, a = 0; a < e.length; ++a) {(o = e.charCodeAt(a)) < 128 ? t[r++] = o : o < 2048 ? (t[r++] = o >> 6 | 192, t[r++] = 63 & o | 128) : 55296 == (64512 & o) && 56320 == (64512 & (n = e.charCodeAt(a + 1))) ? (o = 65536 + ((1023 & o) << 10) + (1023 & n), ++a, t[r++] = o >> 18 | 240, t[r++] = o >> 12 & 63 | 128, t[r++] = o >> 6 & 63 | 128, t[r++] = 63 & o | 128) : (t[r++] = o >> 12 | 224, t[r++] = o >> 6 & 63 | 128, t[r++] = 63 & o | 128);}return r - i;};}, 9935: function _(e, t, r) {var o = e.exports,n = r(889);o.LongBits = r(8365), o.Long = r(4939), o.pool = r(8997), o.float = r(1283), o.asPromise = r(6728), o.EventEmitter = r(7969), o.path = r(1444), o.base64 = r(5889), o.utf8 = r(1498), o.compareFieldsById = function (e, t) {return e.id - t.id;}, o.toArray = function (e) {if (e) {for (var t = Object.keys(e), r = new Array(t.length), o = 0; o < t.length;) {r[o] = e[t[o++]];}return r;}return [];}, o.toObject = function (e) {for (var t = {}, r = 0; r < e.length;) {var o = e[r++],n = e[r++];void 0 !== n && (t[o] = n);}return t;}, o.isString = function (e) {return \"string\" == typeof e || e instanceof String;}, o.isReserved = function (e) {return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(e);}, o.isObject = function (e) {return e && \"object\" == typeof e;}, o.Array = \"undefined\" != typeof Uint8Array ? Uint8Array : Array, o.oneOfGetter = function (e) {for (var t = {}, r = 0; r < e.length; ++r) {t[e[r]] = 1;}return function () {for (var e = Object.keys(this), r = e.length - 1; r > -1; --r) {if (1 === t[e[r]] && void 0 !== this[e[r]] && null !== this[e[r]]) return e[r];}};}, o.oneOfSetter = function (e) {return function (t) {for (var r = 0; r < e.length; ++r) {e[r] !== t && delete this[e[r]];}};}, o.merge = function (e, t, r) {for (var o = Object.keys(t), n = 0; n < o.length; ++n) {void 0 !== e[o[n]] && r || (e[o[n]] = t[o[n]]);}return e;}, o.decorateType = function (e, t) {if (e.$type) return t && e.$type.name !== t && (o.decorateRoot.remove(e.$type), e.$type.name = t, o.decorateRoot.add(e.$type)), e.$type;Type || (Type = r(192));var n = new Type(t || e.name);return o.decorateRoot.add(n), n.ctor = e, Object.defineProperty(e, \"$type\", { value: n, enumerable: !1 }), Object.defineProperty(e.prototype, \"$type\", { value: n, enumerable: !1 }), n;}, o.emptyArray = Object.freeze ? Object.freeze([]) : [], o.emptyObject = Object.freeze ? Object.freeze({}) : {}, o.longToHash = function (e) {return e ? o.LongBits.from(e).toHash() : o.LongBits.zeroHash;}, o.copy = function (e) {if (\"object\" != typeof e) return e;var t = {};for (var r in e) {t[r] = e[r];}return t;}, o.deepCopy = function e(t) {if (\"object\" != typeof t) return t;var r = {};for (var o in t) {r[o] = e(t[o]);}return r;}, o.ProtocolError = function (e) {function t(e, r) {if (!(this instanceof t)) return new t(e, r);Object.defineProperty(this, \"message\", { get: function get() {return e;} }), Error.captureStackTrace ? Error.captureStackTrace(this, t) : Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" }), r && merge(this, r);}return (t.prototype = Object.create(Error.prototype)).constructor = t, Object.defineProperty(t.prototype, \"name\", { get: function get() {return e;} }), t.prototype.toString = function () {return this.name + \": \" + this.message;}, t;}, o.toJSONOptions = { longs: String, enums: String, bytes: String, json: !0 }, o.Buffer = null, o.newBuffer = function (e) {return \"number\" == typeof e ? new o.Array(e) : \"undefined\" == typeof Uint8Array ? e : new Uint8Array(e);}, o.stringToBytes = function (e) {var t,r,o = [];t = e.length;for (var n = 0; n < t; n++) {(r = e.charCodeAt(n)) >= 65536 && r <= 1114111 ? (o.push(r >> 18 & 7 | 240), o.push(r >> 12 & 63 | 128), o.push(r >> 6 & 63 | 128), o.push(63 & r | 128)) : r >= 2048 && r <= 65535 ? (o.push(r >> 12 & 15 | 224), o.push(r >> 6 & 63 | 128), o.push(63 & r | 128)) : r >= 128 && r <= 2047 ? (o.push(r >> 6 & 31 | 192), o.push(63 & r | 128)) : o.push(255 & r);}return o;}, o.byteToString = function (e) {if (\"string\" == typeof e) return e;for (var t = \"\", r = e, o = 0; o < r.length; o++) {var n = r[o].toString(2),i = n.match(/^1+?(?=0)/);if (i && 8 == n.length) {for (var a = i[0].length, s = r[o].toString(2).slice(7 - a), c = 1; c < a; c++) {s += r[c + o].toString(2).slice(2);}t += String.fromCharCode(parseInt(s, 2)), o += a - 1;} else t += String.fromCharCode(r[o]);}return t;}, o.isInteger = Number.isInteger || function (e) {return \"number\" == typeof e && isFinite(e) && Math.floor(e) === e;}, Object.defineProperty(o, \"decorateRoot\", { get: function get() {return n.decorated || (n.decorated = new (r(4685))());} });}, 5484: function _(e, t, r) {var o, n;function i(e, t) {return e.name + \": \" + t + (e.repeated && \"array\" !== t ? \"[]\" : e.map && \"object\" !== t ? \"{k:\" + e.keyType + \"}\" : \"\") + \" expected\";}function a(e, t, r, a) {var s = a.types;if (e.resolvedType) {if (e.resolvedType instanceof o) {if (Object.keys(e.resolvedType.values).indexOf(r) < 0) return i(e, \"enum value\");} else {var c = s[t].verify(r);if (c) return e.name + \".\" + c;}} else switch (e.type) {case \"int32\":case \"uint32\":case \"sint32\":case \"fixed32\":case \"sfixed32\":if (!n.isInteger(r)) return i(e, \"integer\");break;case \"int64\":case \"uint64\":case \"sint64\":case \"fixed64\":case \"sfixed64\":if (!(n.isInteger(r) || r && n.isInteger(r.low) && n.isInteger(r.high))) return i(e, \"integer|Long\");break;case \"float\":case \"double\":if (\"number\" != typeof r) return i(e, \"number\");break;case \"bool\":if (\"boolean\" != typeof r) return i(e, \"boolean\");break;case \"string\":if (!n.isString(r)) return i(e, \"string\");break;case \"bytes\":if (!(r && \"number\" == typeof r.length || n.isString(r))) return i(e, \"buffer\");}}function s(e, t) {switch (e.keyType) {case \"int32\":case \"uint32\":case \"sint32\":case \"fixed32\":case \"sfixed32\":if (!n.key32Re.test(t)) return i(e, \"integer key\");break;case \"int64\":case \"uint64\":case \"sint64\":case \"fixed64\":case \"sfixed64\":if (!n.key64Re.test(t)) return i(e, \"integer|Long key\");break;case \"bool\":if (!n.key2Re.test(t)) return i(e, \"boolean key\");}}function c(e) {return function (t) {return function (r) {var o;if (\"object\" != typeof r || null === r) return \"object expected\";var c,u = {};e.oneofsArray.length && (c = {});for (var l = 0; l < e.fieldsArray.length; ++l) {var p,d = e._fieldsArray[l].resolve(),h = r[d.name];if (!d.optional || null != h && r.hasOwnProperty(d.name)) if (d.map) {if (!n.isObject(h)) return i(d, \"object\");var f = Object.keys(h);for (p = 0; p < f.length; ++p) {if (o = s(d, f[p])) return o;if (o = a(d, l, h[f[p]], t)) return o;}} else if (d.repeated) {if (!Array.isArray(h)) return i(d, \"array\");for (p = 0; p < h.length; ++p) {if (o = a(d, l, h[p], t)) return o;}} else {if (d.partOf) {var m = d.partOf.name;if (1 === u[d.partOf.name] && 1 === c[m]) return d.partOf.name + \": multiple values\";c[m] = 1;}if (o = a(d, l, h, t)) return o;}}};};}e.exports = c, c._configure = function () {o = r(582), n = r(9935);};}, 7834: function _(e, t, r) {var o,n = t;n[\".google.protobuf.Any\"] = { fromObject: function fromObject(e) {if (e && e[\"@type\"]) {var t = this.lookup(e[\"@type\"]);if (t) {var r = \".\" === e[\"@type\"].charAt(0) ? e[\"@type\"].substr(1) : e[\"@type\"];return this.create({ type_url: \"/\" + r, value: t.encode(t.fromObject(e)).finish() });}}return this.fromObject(e);}, toObject: function toObject(e, t) {if (t && t.json && e.type_url && e.value) {var r = e.type_url.substring(e.type_url.lastIndexOf(\"/\") + 1),n = this.lookup(r);n && (e = n.decode(e.value));}if (!(e instanceof this.ctor) && e instanceof o) {var i = e.$type.toObject(e, t);return i[\"@type\"] = e.$type.fullName, i;}return this.toObject(e, t);} }, n._configure = function () {o = r(339);};}, 5244: function _(e, t, r) {e.exports = u;var o,n = r(9935),i = r(1498);function a(e, t, r) {this.fn = e, this.len = t, this.next = void 0, this.val = r;}function s() {}function c(e) {this.head = e.head, this.tail = e.tail, this.len = e.len, this.next = e.states;}function u() {this.len = 0, this.head = new a(s, 0, 0), this.tail = this.head, this.states = null;}function l(e, t, r) {t[r] = 255 & e;}function p(e, t) {this.len = e, this.next = void 0, this.val = t;}function d(e, t, r) {for (; e.hi;) {t[r++] = 127 & e.lo | 128, e.lo = (e.lo >>> 7 | e.hi << 25) >>> 0, e.hi >>>= 7;}for (; e.lo > 127;) {t[r++] = 127 & e.lo | 128, e.lo = e.lo >>> 7;}t[r++] = e.lo;}function h(e, t, r) {t[r] = 255 & e, t[r + 1] = e >>> 8 & 255, t[r + 2] = e >>> 16 & 255, t[r + 3] = e >>> 24;}u.create = n.Buffer ? function () {return (u.create = function () {return new (void 0)();})();} : function () {return new u();}, u.alloc = function (e) {return new n.Array(e);}, n.Array !== Array && (u.alloc = n.pool(u.alloc, n.Array.prototype.subarray)), u.prototype._push = function (e, t, r) {return this.tail = this.tail.next = new a(e, t, r), this.len += t, this;}, p.prototype = Object.create(a.prototype), p.prototype.fn = function (e, t, r) {for (; e > 127;) {t[r++] = 127 & e | 128, e >>>= 7;}t[r] = e;}, u.prototype.uint32 = function (e) {return this.len += (this.tail = this.tail.next = new p((e >>>= 0) < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : 5, e)).len, this;}, u.prototype.int32 = function (e) {return e < 0 ? this._push(d, 10, o.fromNumber(e)) : this.uint32(e);}, u.prototype.sint32 = function (e) {return this.uint32((e << 1 ^ e >> 31) >>> 0);}, u.prototype.uint64 = function (e) {var t = o.from(e);return this._push(d, t.length(), t);}, u.prototype.int64 = u.prototype.uint64, u.prototype.sint64 = function (e) {var t = o.from(e).zzEncode();return this._push(d, t.length(), t);}, u.prototype.bool = function (e) {return this._push(l, 1, e ? 1 : 0);}, u.prototype.fixed32 = function (e) {return this._push(h, 4, e >>> 0);}, u.prototype.sfixed32 = u.prototype.fixed32, u.prototype.fixed64 = function (e) {var t = o.from(e);return this._push(h, 4, t.lo)._push(h, 4, t.hi);}, u.prototype.sfixed64 = u.prototype.fixed64, u.prototype.float = function (e) {return this._push(n.float.writeFloatLE, 4, e);}, u.prototype.double = function (e) {return this._push(n.float.writeDoubleLE, 8, e);};var f = n.Array.prototype.set ? function (e, t, r) {t.set(e, r);} : function (e, t, r) {for (var o = 0; o < e.length; ++o) {t[r + o] = e[o];}};u.prototype.bytes = function (e) {var t = e.length >>> 0;if (!t) return this._push(l, 1, 0);if (n.isString(e)) {var r = u.alloc(t = i.length(e));i.write(e, r, 0), e = r;}return this.uint32(t)._push(f, t, e);}, u.prototype.string = function (e) {var t = i.length(e);return t ? this.uint32(t)._push(i.write, t, e) : this._push(l, 1, 0);}, u.prototype.fork = function () {return this.states = new c(this), this.head = this.tail = new a(s, 0, 0), this.len = 0, this;}, u.prototype.reset = function () {return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new a(s, 0, 0), this.len = 0), this;}, u.prototype.ldelim = function () {var e = this.head,t = this.tail,r = this.len;return this.reset().uint32(r), r && (this.tail.next = e.next, this.tail = t, this.len += r), this;}, u.prototype.finish = function () {for (var e = this.head.next, t = this.constructor.alloc(this.len), r = 0; e;) {e.fn(e.val, t, r), r += e.len, e = e.next;}return t;}, u._configure = function () {o = r(8365), r(5889), i = r(1498);};} },t = {};function r(o) {var n = t[o];if (void 0 !== n) return n.exports;var i = t[o] = { exports: {} };return e[o](i, i.exports, r), i.exports;}r.amdO = {}, r.n = function (e) {var t = e && e.__esModule ? function () {return e.default;} : function () {return e;};return r.d(t, { a: t }), t;}, r.d = function (e, t) {for (var o in t) {r.o(t, o) && !r.o(e, o) && Object.defineProperty(e, o, { enumerable: !0, get: t[o] });}}, r.g = function () {if (\"object\" == typeof globalThis) return globalThis;try {return this || new Function(\"return this\")();} catch (e) {if (\"object\" == typeof window) return window;}}(), r.o = function (e, t) {return Object.prototype.hasOwnProperty.call(e, t);}, r.r = function (e) {\"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: \"Module\" }), Object.defineProperty(e, \"__esModule\", { value: !0 });};var o = {};return function () {\"use strict\";r.r(o), r.d(o, { default: function _default() {return Ve;} });var e = {};function t() {e.converter._configure(), e.decoder._configure(), e.encoder._configure(), e.Field._configure(), e.MapField._configure(), e.Message._configure(), e.Namespace._configure(), e.Method._configure(), e.ReflectionObject._configure(), e.OneOf._configure(), e.parse._configure(), e.Reader._configure(), e.Root._configure(), e.Service._configure(), e.verifier._configure(), e.Type._configure(), e.types._configure(), e.wrappers._configure(), e.Writer._configure();}e.build = \"minimal\", e.Writer = r(5244), e.encoder = r(9929), e.Reader = r(8494), e.util = r(9935), e.rpc = r(7325), e.roots = r(889), e.verifier = r(5484), e.tokenize = r(8869), e.parse = r(7845), e.common = r(3072), e.ReflectionObject = r(5998), e.Namespace = r(2476), e.Root = r(4685), e.Enum = r(582), e.Type = r(192), e.Field = r(9286), e.OneOf = r(9735), e.MapField = r(1435), e.Service = r(9447), e.Method = r(484), e.converter = r(525), e.decoder = r(3888), e.Message = r(339), e.wrappers = r(7834), e.types = r(4696), e.util = r(9935), e.configure = t, e.load = function (t, r, o) {return \"function\" == typeof r ? (o = r, r = new e.Root()) : r || (r = new e.Root()), r.load(t, o);}, e.loadSync = function (t, r) {return r || (r = new e.Root()), r.loadSync(t);}, e.parseFromPbString = function (t, r, o) {return \"function\" == typeof r ? (o = r, r = new e.Root()) : r || (r = new e.Root()), r.parseFromPbString(t, o);}, t();var n = e,i = r(9168),a = r.n(i),s = r(1560),c = r(4605),u = r(8185),l = r(5491),p = r.n(l),d = r(3886),h = r(1972),f = [\"public\", \"members_only\", \"allow_user_invites\", \"invite_need_confirm\"],m = { name: \"name\", title: \"name\", description: \"description\", public: \"public\", members_only: \"approval\", allow_user_invites: \"allowInvites\", max_users: \"maxUsers\", invite_need_confirm: \"inviteNeedConfirm\", custom: \"ext\", last_modified: \"lastModified\" },E = function E(e) {var t = this.root.lookup(\"easemob.pb.MUCBody\").decode(e.payload),r = t.operation;h.kg.debug(\"onMucMessage\", t), function (e) {var r,o,n,i,a,s,c = this;return t.isThread ? (n = { id: t.mucId.name, name: t.mucName, operation: \"\", parentId: t.mucParentId.name, operator: t.from.name, userName: t.to.length ? t.to[0].name : \"\" }, i = { chatThreadId: t.mucId.name, chatThreadName: t.mucName, operation: \"\", parentId: t.mucParentId.name }) : (o = { type: \"\", owner: t.from.name, gid: t.mucId.name, from: t.from.name, fromJid: t.from, to: t.to.length ? t.to[0].name : \"\", toJid: t.to, chatroom: t.isChatroom, status: t.status }, a = { operation: \"\", id: t.mucId.name, from: t.from.name }, t.isChatroom && (null === (r = null == t ? void 0 : t.eventInfo) || void 0 === r ? void 0 : r.ext) && (s = JSON.parse(t.eventInfo.ext))), ({ 44: function _() {var e;a.operation = \"removeChatRoomAttributes\", a.attributes = s.result.successKeys, s.result.successKeys.length > 0 && (null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomEvent\", a));}, 43: function _() {var e;a.operation = \"updateChatRoomAttributes\";var t = {};s.result.successKeys.forEach(function (e) {t[e] = s.properties[e];}), a.attributes = t, s.result.successKeys.length > 0 && (null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomEvent\", a));}, 42: function _() {}, 41: function _() {}, 40: function _() {}, 39: function _() {}, 38: function _() {var e;i.operation = \"chatThreadNameUpdate\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);}, 37: function _() {var e;n.operation = \"userRemove\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatThreadChange\", n);}, 36: function _() {var e;i.operation = \"chatThreadLeave\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);}, 35: function _() {var e;i.operation = \"chatThreadJoin\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);}, 34: function _() {var e;i.operation = \"chatThreadDestroy\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);}, 33: function _() {var e;i.operation = \"chatThreadCreate\", null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onMultiDeviceEvent\", i);}, 32: function _() {var e, r, n, i;o.type = t.isChatroom ? \"rmChatRoomMute\" : \"rmGroupMute\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"unmuteAllMembers\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 31: function _() {var e, r, n, i;o.type = t.isChatroom ? \"muteChatRoom\" : \"muteGroup\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"muteAllMembers\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 30: function _() {var e, r, n, i;o.type = t.isChatroom ? \"rmUserFromChatRoomWhiteList\" : \"rmUserFromGroupWhiteList\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"removeAllowlistMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 29: function _() {var e, r, n, i;o.type = t.isChatroom ? \"addUserToChatRoomWhiteList\" : \"addUserToGroupWhiteList\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"addUserToAllowlist\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 28: function _() {var e, r, n, i;o.type = \"deleteFile\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"deleteFile\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 27: function _() {var e, r, n, i;o.type = \"uploadFile\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"uploadFile\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 26: function _() {var e, r, n, i;o.type = \"deleteAnnouncement\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"deleteAnnouncement\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 25: function _() {var e, r, n, i;o.type = \"updateAnnouncement\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"updateAnnouncement\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 24: function _() {var e, r, n, i;o.type = \"removeMute\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"unmuteMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 23: function _() {var e, r, n, i;o.type = \"addMute\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"muteMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 22: function _() {var e, r, n, i;o.type = \"removeAdmin\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"removeAdmin\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 21: function _() {var e, r, n, i;o.type = \"addAdmin\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"setAdmin\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 20: function _() {var e, r, n, i;o.type = \"changeOwner\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"changeOwner\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 19: function _() {var e, r, n, i;o.type = \"direct_joined\", o.groupName = t.mucName, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"directJoined\", a.name = t.mucName, t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 18: function _() {var e, r, n, i;o.type = t.isChatroom ? \"leaveChatRoom\" : \"leaveGroup\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"memberAbsence\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 17: function _() {var e, r, n, i;o.type = t.isChatroom ? \"memberJoinChatRoomSuccess\" : \"memberJoinPublicGroupSuccess\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"memberPresence\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 16: function _() {var e, r;o.type = \"unblock\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);}, 15: function _() {var e, r;o.type = \"block\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);}, 14: function _() {var e,r,n,i,s,u = t.isChatroom;if (!u) {var l = JSON.parse((null === (e = null == t ? void 0 : t.eventInfo) || void 0 === e ? void 0 : e.ext) || \"{}\", function (e, t) {return \"last_modified\" === e ? Number(t) : f.includes(e) ? \"true\" === t || !0 === t : t;});a.detail = o.detail = {}, Object.keys(l).forEach(function (e) {var t = m[e];if (t) {var r = l[e];a.detail && (a.detail[t] = r), o.detail && (o.detail[t] = r);}});}o.type = \"update\", c.onPresence && c.onPresence(o), u ? null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onChatroomChange\", o) : null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onGroupChange\", o), a.operation = \"updateInfo\", u ? null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onChatroomEvent\", a) : null === (s = c.eventHandler) || void 0 === s || s.dispatch(\"onGroupEvent\", a);}, 13: function _() {var e, r, n, i;o.type = \"allow\", o.reason = t.reason, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"unblockMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 12: function _() {var e, r;o.type = \"ban\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);}, 11: function _() {var e, r;o.type = \"getBlackList\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);}, 10: function _() {var e, r, n, i;o.type = \"removedFromGroup\", o.kicked = o.to, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"removeMember\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 9: function _() {var e, r, n, i;o.type = \"invite_decline\", o.kicked = o.to, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"rejectInvite\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 8: function _() {var e, r, n, i;o.type = \"invite_accept\", o.kicked = o.to, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"acceptInvite\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 7: function _() {var e, r, n, i;o.type = \"invite\", o.kicked = o.to, o.groupName = t.mucName, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"inviteToJoin\", a.name = t.mucName, t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 6: function _() {var e, r;o.type = \"joinPublicGroupDeclined\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);}, 5: function _() {var e, r, n, i;o.type = \"joinPublicGroupSuccess\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"acceptRequest\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 4: function _() {var e, r, n, i;o.type = \"joinGroupNotifications\", o.reason = t.reason, c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"requestToJoin\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);}, 3: function _() {var e, r;o.type = \"leave\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);}, 2: function _() {var e, r;o.type = \"join\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o);}, 1: function _() {var e, r, n, i;o.type = \"deleteGroupChat\", c.onPresence && c.onPresence(o), t.isChatroom ? null === (e = c.eventHandler) || void 0 === e || e.dispatch(\"onChatroomChange\", o) : null === (r = c.eventHandler) || void 0 === r || r.dispatch(\"onGroupChange\", o), a.operation = \"destroy\", t.isChatroom ? null === (n = c.eventHandler) || void 0 === n || n.dispatch(\"onChatroomEvent\", a) : null === (i = c.eventHandler) || void 0 === i || i.dispatch(\"onGroupEvent\", a);} }[e] || function () {__f__(\"error\", \"No match operation \".concat(e), \" at sdk/uniapp-sdk-4.1.2.js:1\");})();}.call(this, r);},g = r(5719),y = function y(e) {var t,r,o,n,i,a,c = this.root.lookup(\"easemob.pb.StatisticsBody\").decode(e.payload);switch (c.operation) {case 0:this.onStatisticMessage && this.onStatisticMessage(c), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onStatisticMessage\", c);break;case 1:a = s.Z.create({ type: u.E.WEBIM_CONNCTION_USER_REMOVED, message: \"user has been removed\" }), this.logOut = !0, this.onError && this.onError(a), null === (r = this.eventHandler) || void 0 === r || r.dispatch(\"onError\", a);break;case 2:a = s.Z.create({ type: u.E.WEBIM_CONNCTION_USER_LOGIN_ANOTHER_DEVICE, message: \"the user is already logged on another device\" }), this.logOut = !0, this.onError && this.onError(a), null === (o = this.eventHandler) || void 0 === o || o.dispatch(\"onError\", a);break;case 3:a = s.Z.create({ type: u.E.WEBIM_CONNCTION_USER_KICKED_BY_CHANGE_PASSWORD, message: \"the user was kicked by changing password\" }), this.logOut = !0, this.onError && this.onError(a), null === (n = this.eventHandler) || void 0 === n || n.dispatch(\"onError\", a);break;case 4:a = s.Z.create({ type: u.E.WEBIM_CONNCTION_USER_KICKED_BY_OTHER_DEVICE, message: \"the user was kicked by other device\" }), this.logOut = !0, this.onError && this.onError(a), null === (i = this.eventHandler) || void 0 === i || i.dispatch(\"onError\", a);break;default:h.kg.error(\"handleStatisticsMsg:\", c);}},T = r(1541);function _(e) {var t,r = [],o = [],n = e.data;n && n.values && n.values.forEach(function (e) {Object.entries(e.status).forEach(function (e) {o.push({ device: e[0], status: Number(e[1]) });}), r.push({ userId: e.uid, lastTime: Number(e.last_time), expire: Number(e.expiry), ext: e.ext, statusDetails: o });}), this.onPresenceStatusChange && this.onPresenceStatusChange(r), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onPresenceStatusChange\", r);}function v(e) {var t = this;e.data.forEach(function (e) {var r,o = { from: e.from, to: e.to, chatType: \"chat\" === e.channel_type ? \"singleChat\" : \"groupChat\", messageId: e.messageId, reactions: e.reactions, ts: e.ts };null === (r = t.eventHandler) || void 0 === r || r.dispatch(\"onReactionChange\", o);});}function R(e) {var t, r, o, n;if (e.data) {var i = e.data,a = { id: i.id || \"\", name: i.name || \"\", parentId: i.muc_parent_id || \"\", messageId: i.msg_parent_id || \"\", timestamp: i.timestamp || 0, operator: i.from || \"\", operation: \"\" };switch (i.operation) {case \"create\":a.operation = \"create\", a.createTimestamp = a.timestamp, a.messageCount = 0, null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onChatThreadChange\", a);break;case \"update_msg\":a.operation = \"update\", a.messageCount = i.message_count, i.last_message && \"{}\" !== JSON.stringify(i.last_message) ? a.lastMessage = (0, T.w)(i.last_message) : \"{}\" === JSON.stringify(i.last_message) && (a.lastMessage = {}), null === (r = this.eventHandler) || void 0 === r || r.dispatch(\"onChatThreadChange\", a);break;case \"update\":a.operation = \"update\", a.messageCount = i.message_count, null === (o = this.eventHandler) || void 0 === o || o.dispatch(\"onChatThreadChange\", a);break;case \"delete\":a.operation = \"destroy\", null === (n = this.eventHandler) || void 0 === n || n.dispatch(\"onChatThreadChange\", a);}}}function O(e) {var t,r = e.data;if (r.resource !== this.clientResource) {var o = { operation: \"deleteRoaming\", conversationId: r.to, chatType: \"chat\" === r.chatType ? \"singleChat\" : \"groupChat\", resource: r.resource };null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onMultiDeviceEvent\", o);}}var I = function I(e) {var t = c.P6.parseNotify(e.payload);switch (e.from.name, e.to.name, t.type) {case \"presence\":_.call(this, t);break;case \"reaction\":v.call(this, t);break;case \"thread\":R.call(this, t);break;case \"roaming_delete\":O.call(this, t);break;default:h.kg.error(\"unexpected notify type: \".concat(t.type));}},S = r(6887),N = r(5699),_C = function C() {return _C = Object.assign || function (e) {for (var t, r = 1, o = arguments.length; r < o; r++) {for (var n in t = arguments[r]) {Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);}}return e;}, _C.apply(this, arguments);};function A() {var e = \"webim\",t = \"\",r = \"\",o = [],n = new Date().valueOf();\"webim\" === this.deviceId ? (r = \"random_\" + n.toString(), e = this.deviceId + \"_\" + r, t = this.deviceId) : e = t = r = \"webim_\" + this.deviceId, this.context.jid && (this.context.jid.clientResource = e);var i = this.root.lookup(\"easemob.pb.Provision\"),a = i.decode(o);a.compressType = this.compressType, a.encryptType = this.encryptType, a.osType = this.osType, a.version = this.version, a.deviceName = t, a.resource = e, a.deviceUuid = r, a.auth = \"$t$\" + this.token, a.actionVersion = \"v2.0\", a = i.encode(a).finish();var s = this.root.lookup(\"easemob.pb.MSync\"),c = s.decode(o);return c.version = this.version, c.guid = this.context.jid, c.auth = \"$t$\" + this.token, c.command = 3, c.deviceId = t, c.serviceId = this.dataReport.getServiceId(), c.encryptType = this.encryptType, c.payload = a, s.encode(c).finish();}function b(e, t) {var r = this,o = c.P6.getEnvInfo();if (\"web\" === o.platform || \"zfb\" === o.platform || \"dd\" === o.platform) {for (var n = \"\", i = 0; i < e.length; i++) {n += String.fromCharCode(e[i]);}return n = p().btoa(n), \"web\" === o.platform ? n : { data: n, isBuffer: !1, complete: function complete() {}, fail: function fail(e) {\"sendSocketMessage:fail taskID not exist\" !== e.errMsg && \"SocketTast.send:fail SocketTask.readyState is not OPEN\" !== e.errMsg || (h.kg.debug(\"send message fail and reconnect\"), r.reconnect()), t && r._msgHash && r._msgHash[t] && r._msgHash[t].fail({ id: t });} };}var a = e;return { data: a.buffer.slice(a.byteOffset, a.byteOffset + a.byteLength), fail: function fail(e) {\"sendSocketMessage:fail taskID not exist\" !== e.errMsg && \"SocketTast.send:fail SocketTask.readyState is not OPEN\" !== e.errMsg || r.reconnect(), t && r._msgHash && r._msgHash[t] && r._msgHash[t].fail({ id: t });} };}function M(e, t) {switch (e.ns) {case 0:y.call(this, e);break;case 1:d.Z.call(this, e, t);break;case 2:E.call(this, e);break;case 3:g.Z.handleRosterMsg.call(this, e);break;case 4:this.registerConfrIQHandler && this.registerConfrIQHandler(e, t, this);break;case 5:I.call(this, e);break;default:h.kg.error(\"distributeMeta\", e);}}function U(e, t) {for (var r = function r(_r) {var n = new (a())(e[_r].id.low, e[_r].id.high, e[_r].id.unsigned).toString();if (o._load_msg_cache.some(function (e) {return e.msgId === n;})) return \"continue\";var i = e[_r].from.name,s = e[_r].to ? e[_r].to.name : \"\",c = !!e[_r].to && -1 !== e[_r].to.domain.indexOf(\"conference\");o._load_msg_cache.length <= o.max_cache_length || o._load_msg_cache.shift(), o._load_msg_cache.push({ msgId: n, from: i, to: s, isGroup: c }), M.call(o, e[_r], t);}, o = this, n = 0; n < e.length; n++) {r(n);}}function k(e) {var t = this.root.lookup(\"easemob.pb.CommUnreadDL\");if (t = t.decode(e.payload), \"agoraToken\" === this.grantType) {var r = new (a())(t.timestamp.low, t.timestamp.high, t.timestamp.unsigned).toString();this.compareTokenExpireTime(Number(r), this.expirationTime);}if (0 === t.unread.length) B.call(this);else for (var o = 0; o < t.unread.length; o++) {L.call(this, t.unread[o].queue);}}function w() {var e = [],t = this.root.lookup(\"easemob.pb.StatisticsBody\"),r = t.decode(e);r.operation = 0, r = t.encode(r).finish();var o = this.root.lookup(\"easemob.pb.Meta\").decode(e);o.id = new Date().valueOf(), o.ns = 0, o.payload = r;var n = this.root.lookup(\"easemob.pb.CommSyncUL\"),i = n.decode(e);i.meta = o, i = n.encode(i).finish();var a = this.root.lookup(\"easemob.pb.MSync\"),s = a.decode(e);return s.version = this.version, s.encryptType = [0], s.command = 0, s.payload = i, a.encode(s).finish();}function P(e) {var t = [],r = this.root.lookup(\"easemob.pb.CommSyncUL\"),o = r.decode(t);o.queue = e, o = r.encode(o).finish();var n = this.root.lookup(\"easemob.pb.MSync\"),i = n.decode(t);return i.version = this.version, i.encryptType = this.encryptType, i.command = 0, i.payload = o, n.encode(i).finish();}function L(e) {h.kg.debug(\"sendBackqueue\");var t = P.call(this, e);ee.call(this, t);}function D(e, t) {var r = [],o = this.root.lookup(\"easemob.pb.CommSyncUL\"),n = o.decode(r);n.queue = t, n.key = new (a())(e.low, e.high, e.unsigned).toString(), n = o.encode(n).finish();var i = this.root.lookup(\"easemob.pb.MSync\"),s = i.decode(r);return s.version = this.version, s.encryptType = this.encryptType, s.command = 0, s.payload = n, i.encode(s).finish();}function G(e, t) {h.kg.debug(\"sendLastSession\");var r = D.call(this, e, t);ee.call(this, r);}function j(e) {var t,r = this.root.lookup(\"easemob.pb.Provision\").decode(e.payload);if (this.context.jid && (this.context.jid.clientResource = r.resource), this.clientResource = r.resource, 0 === r.status.errorCode) {if (this.onOpened && this.onOpened(), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onConnected\"), \"agoraToken\" === this.grantType) {var o = Date.now();this.expiresIn = this.expirationTime - o, this.tokenExpireTimeCountDown(this.expiresIn);}x.call(this), F.call(this), H.call(this), B.call(this);} else this.onError && this.onError({ type: u.E.WEBIM_CONNECTION_ERROR, message: \"provision error\", data: r });}function x() {if (this.unSendMsgArr.length > 0) {for (var e = 0; e < this.unSendMsgArr.length; e++) {var t = this.unSendMsgArr[e];$.call(this, t);}this.unSendMsgArr = [];}}function B() {var e = w.call(this);ee.call(this, e);}function H() {var e = Z.call(this);ee.call(this, e);}function F() {var e = this;W.call(this), this.heartBeatID = setInterval(function () {H.call(e);}, this.heartBeatWait);}function W() {clearInterval(this.heartBeatID);}function Z() {var e = this.root.lookup(\"easemob.pb.MSync\"),t = e.decode([]);return t.version = this.version, t.encryptType = this.encryptType, t.command = 1, e.encode(t).finish();}function q(e, t) {return e.some(function (e) {return e.name === t.name;});}function K(e) {var t = this,r = this.root.lookup(\"easemob.pb.CommNotice\").decode(e.payload);q(this._queues, r.queue) || this.clientResource === r.queue.clientResource && r.queue.name === this.context.userId || (this._queues.push(r.queue), this.qTimer && clearTimeout(this.qTimer), this.qTimer = setTimeout(function () {var e = r.queue;q(t._queues, e) && (L.call(t, r.queue), h.kg.debug(\"⬇q:\", e));}, 1e4), 1 === this._queues.length && L.call(this, r.queue));}function V(e) {return t = this, r = void 0, n = function n() {var t, r, o, n, i, a, s, u;return function (e, t) {var r,o,n,i,a = { label: 0, sent: function sent() {if (1 & n[0]) throw n[1];return n[1];}, trys: [], ops: [] };return i = { next: s(0), throw: s(1), return: s(2) }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {return this;}), i;function s(i) {return function (s) {return function (i) {if (r) throw new TypeError(\"Generator is already executing.\");for (; a;) {try {if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {case 0:case 1:n = i;break;case 4:return a.label++, { value: i[1], done: !1 };case 5:a.label++, o = i[1], i = [0];continue;case 7:i = a.ops.pop(), a.trys.pop();continue;default:if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {a = 0;continue;}if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {a.label = i[1];break;}if (6 === i[0] && a.label < n[1]) {a.label = n[1], n = i;break;}if (n && a.label < n[2]) {a.label = n[2], a.ops.push(i);break;}n[2] && a.ops.pop(), a.trys.pop();continue;}i = t.call(e, a);} catch (e) {i = [6, e], o = 0;} finally {r = n = 0;}}if (5 & i[0]) throw i[1];return { value: i[0] ? i[1] : void 0, done: !0 };}([i, s]);};}}(this, function (l) {switch (l.label) {case 0:if (t = c.P6.getEnvInfo(), \"miniCore\" !== this.name) return [3, 7];u = this.root.lookup(\"easemob.pb.MSync\"), r = void 0, l.label = 1;case 1:return l.trys.push([1, 5,, 6]), \"[object Blob]\" !== Object.prototype.toString.call(e.data) ? [3, 3] : [4, e.data.arrayBuffer()];case 2:return r = l.sent(), [3, 4];case 3:h.kg.debug(\"received message: \".concat(e.data)), l.label = 4;case 4:return [3, 6];case 5:throw l.sent(), new Error(\"decode message fail.\");case 6:return o = new Uint8Array(r), [2, u.decode(o)];case 7:if (\"web\" === t.platform || \"zfb\" === t.platform || \"dd\" === t.platform) {for (n = p().atob(e.data), i = [], a = 0, s = n.length; a < s; ++a) {i.push(n.charCodeAt(a));}return [2, (u = this.root.lookup(\"easemob.pb.MSync\")).decode(i)];}return [2, (u = this.root.lookup(\"easemob.pb.MSync\")).decode(e.data)];case 8:return [2];}});}, new ((o = void 0) || (o = Promise))(function (e, i) {function a(e) {try {c(n.next(e));} catch (e) {i(e);}}function s(e) {try {c(n.throw(e));} catch (e) {i(e);}}function c(t) {var r;t.done ? e(t.value) : (r = t.value, r instanceof o ? r : new o(function (e) {e(r);})).then(a, s);}c((n = n.apply(t, r || [])).next());});var t, r, o, n;}function J(e) {var t = this;e.then(function (e) {switch (e.command) {case 0:z.call(t, e);break;case 1:k.call(t, e);break;case 2:K.call(t, e);break;case 3:j.call(t, e);break;default:h.kg.error(\"unexpected msync command: \".concat(e.command));}});}function z(e) {var t,r,o,n,i,c,l,p,d,h,f = this.root.lookup(\"easemob.pb.CommSyncDL\");f = f.decode(e.payload);var m = new (a())(f.serverId.low, f.serverId.high, f.serverId.unsigned).toString(),E = new (a())(f.metaId.low, f.metaId.high, f.metaId.unsigned).toString();if (0 !== f.metas.length) try {U.call(this, f.metas, f.status);} catch (e) {var g = s.Z.create({ type: u.E.WEBIM_LOAD_MSG_ERROR, message: \"decode message error\", data: e });this.onError && this.onError(g), null === (t = this.eventHandler) || void 0 === t || t.dispatch(\"onError\", g);} finally {if (f.isLast) {var y = -1;(v = this._queues.some(function (e, t) {return e.name === f.name && (y = t, !0);})) && y > 0 && this._queues.splice(y, 1), this._queues.length > 0 && (L.call(this, this._queues[0]), this.qTimer && clearTimeout(this.qTimer));} else G.call(this, f.nextKey, f.queue);} else if (f.isLast) {var T = -1;(v = this._queues.some(function (e, t) {return e.name === f.queue.name && (T = t, !0);})) && this._queues.splice(T, 1), this._queues.length > 0 && (L.call(this, this._queues[0]), this.qTimer && clearTimeout(this.qTimer));} else if (f.status && 0 === f.status.errorCode) {var _ = -1,v = this._queues.some(function (e, t) {var r;return e.name === (null === (r = f.queue) || void 0 === r ? void 0 : r.name) && (_ = t, !0);});if (v && this._queues.splice(_, 1), this._queues.length > 0 && (L.call(this, this._queues[0]), this.qTimer && clearTimeout(this.qTimer)), (I = S.Nl.get(E)) && ((0, I.rpt)({ isEndApi: !0, data: { isSuccess: 1, requestName: I.requestName, requestMethod: \"WEBSOCKET\", requestUrl: this.url, code: N.dd.success } }), S.Nl.delete(E)), this._msgHash[E]) {S.TJ.has(E) && (S.TJ.get(E).rpt({ isEndApi: !0, data: { isSuccess: 1, requestMethod: \"WEBSOCKET\", requestUrl: this.url, code: N.dd.success, msgId: m } }), S.TJ.delete(E));try {(null === (r = this._msgHash[E]) || void 0 === r ? void 0 : r.resolve) instanceof Function && this._msgHash[E].resolve({ localMsgId: E, serverMsgId: m }), (null === (o = this._msgHash[E]) || void 0 === o ? void 0 : o.success) instanceof Function && this._msgHash[E].success(E, m);} catch (e) {g = s.Z.create({ type: u.E.WEBIM_CONNCTION_CALLBACK_INNER_ERROR, message: \"when executing success function error\", data: e }), this.onError && this.onError(g), null === (n = this.eventHandler) || void 0 === n || n.dispatch(\"onError\", g);}this.onReceivedMessage && this.onReceivedMessage({ id: E, mid: m, to: this._msgHash[E].to, time: 0 }), null === (i = this.eventHandler) || void 0 === i || i.dispatch(\"onReceivedMessage\", { id: E, mid: m, to: this._msgHash[E].to }), delete this._msgHash[E];}} else if (f.status && 15 === f.status.errorCode) (null === (c = this._msgHash[E]) || void 0 === c ? void 0 : c.fail) instanceof Function && this._msgHash[E].fail({ type: u.E.SERVICE_NOT_ALLOW_MESSAGING_MUTE, reason: \"you were muted\" }), this._msgHash[E].reject instanceof Function && this._msgHash[E].reject({ type: u.E.SERVICE_NOT_ALLOW_MESSAGING_MUTE, reason: \"you were muted\" });else if (f.status && 1 === f.status.errorCode) {var R = void 0;switch (f.status.reason) {case \"blocked\":R = u.E.PERMISSION_DENIED;break;case \"group not found\":R = u.E.GROUP_NOT_EXIST;break;case \"not in group or chatroom\":R = u.E.GROUP_NOT_JOINED;break;case \"exceed recall time limit\":R = u.E.MESSAGE_RECALL_TIME_LIMIT;break;case \"message recall disabled\":R = u.E.SERVICE_NOT_ENABLED;break;case \"not in group or chatroom white list\":R = u.E.SERVICE_NOT_ALLOW_MESSAGING;break;case \"nonroster\":R = u.E.USER_NOT_FRIEND, f.status.reason = \"not contact\";break;case \"group is disabled\":R = u.E.GROUP_IS_DISABLED, f.status.reason = \"group is disabled\";break;default:R = f.status.reason.includes(\"moderation\") ? u.E.MESSAGE_MODERATION_BLOCKED : u.E.SERVER_UNKNOWN_ERROR;}if (this._msgHash[E]) {var O = s.Z.create({ type: R, message: f.status.reason || \"\", data: { id: E, mid: m } });this._msgHash[E].reject instanceof Function && this._msgHash[E].reject(O), this._msgHash[E].fail instanceof Function && this._msgHash[E].fail({ type: R, reason: f.status.reason ? f.status.reason : \"\", data: { id: E, mid: m } });}} else if (f.status && 7 === f.status.errorCode) \"sensitive words\" === f.status.reason && this._msgHash[E] ? (O = s.Z.create({ type: u.E.MESSAGE_INCLUDE_ILLEGAL_CONTENT, message: \"sensitive words\", data: { id: E, mid: m } }), this._msgHash[E].reject instanceof Function && this._msgHash[E].reject(O), this._msgHash[E].fail instanceof Function && this._msgHash[E].fail({ type: u.E.MESSAGE_INCLUDE_ILLEGAL_CONTENT, data: { id: E, mid: m, reason: \"sensitive words\" } })) : \"blocked by mod_antispam\" === f.status.reason && this._msgHash[E] ? (O = s.Z.create({ type: u.E.MESSAGE_INCLUDE_ILLEGAL_CONTENT, message: \"blocked by mod_antispam\", data: { id: E, mid: m } }), this._msgHash[E].reject instanceof Function && this._msgHash[E].reject(O), this._msgHash[E].fail instanceof Function && this._msgHash[E].fail({ type: u.E.MESSAGE_INCLUDE_ILLEGAL_CONTENT, data: { id: E, mid: m, reason: \"blocked by mod_antispam\" } })) : \"user is mute\" === f.status.reason && this._msgHash[E] ? (O = s.Z.create({ type: u.E.USER_MUTED_BY_ADMIN, message: \"user is mute\", data: { id: E, mid: m } }), this._msgHash[E].reject instanceof Function && this._msgHash[E].reject(O), this._msgHash[E].fail instanceof Function && this._msgHash[E].fail(O)) : \"traffic limit\" === f.status.reason && this._msgHash[E] && (O = s.Z.create({ type: u.E.MESSAGE_CURRENT_LIMITING, message: \"traffic limit\", data: { id: E, mid: m } }), this._msgHash[E].reject instanceof Function && this._msgHash[E].reject(O), this._msgHash[E].fail instanceof Function && this._msgHash[E].fail(O));else if (f.status && 19 === f.status.errorCode) this._msgHash[E] && (S.TJ.has(E) && (S.TJ.get(E).rpt({ isEndApi: !0, data: { isSuccess: 0, requestMethod: \"WEBSOCKET\", requestUrl: this.url, code: u.E.MESSAGE_EXTERNAL_LOGIC_BLOCKED, codeDesc: f.status.reason || \"\", msgId: m } }), S.TJ.delete(E)), O = s.Z.create({ type: u.E.MESSAGE_EXTERNAL_LOGIC_BLOCKED, message: f.status.reason || \"\", data: { id: E, mid: m } }), this._msgHash[E].reject instanceof Function && this._msgHash[E].reject(O), this._msgHash[E].fail instanceof Function && this._msgHash[E].fail({ type: u.E.MESSAGE_EXTERNAL_LOGIC_BLOCKED, data: { id: E, mid: m, reason: f.status.reason } }));else if (this._msgHash[E]) {S.TJ.has(E) && (S.TJ.get(E).rpt({ isEndApi: !0, data: { isSuccess: 0, requestMethod: \"WEBSOCKET\", requestUrl: this.url, code: u.E.WEBIM_LOAD_MSG_ERROR, codeDesc: (null === (l = f.status) || void 0 === l ? void 0 : l.reason) || \"\", msgId: m } }), S.TJ.delete(E));try {O = s.Z.create({ type: u.E.WEBIM_LOAD_MSG_ERROR, message: (null === (p = f.status) || void 0 === p ? void 0 : p.reason) || \"\", data: { id: E, mid: m, reason: f.status && f.status.reason } }), this._msgHash[E].reject instanceof Function && this._msgHash[E].reject(O), this._msgHash[E].fail instanceof Function && this._msgHash[E].fail({ type: u.E.WEBIM_LOAD_MSG_ERROR, data: { errorCode: f.status && f.status.errorCode, reason: f.status && f.status.reason } });} catch (e) {g = s.Z.create({ type: u.E.WEBIM_CONNCTION_CALLBACK_INNER_ERROR, message: \"when executing fail function error\", data: e }), this.onError && this.onError(g), null === (d = this.eventHandler) || void 0 === d || d.dispatch(\"onError\", g);}delete this._msgHash[E];} else {var I;S.TJ.has(E) && (S.TJ.get(E).rpt({ isEndApi: !0, data: { isSuccess: 0, requestMethod: \"WEBSOCKET\", requestUrl: this.url, code: u.E.WEBIM_CONNCTION_CALLBACK_INNER_ERROR, codeDesc: \"on message error\", msgId: m } }), S.TJ.delete(E)), (I = S.Nl.get(E)) && ((0, I.rpt)({ isEndApi: !0, data: { isSuccess: 0, requestName: I.requestName, requestMethod: \"WEBSOCKET\", requestUrl: this.url, code: N.dd.failed, codeDesc: \"on message error\" } }), S.Nl.delete(E)), g = s.Z.create({ type: u.E.WEBIM_CONNCTION_CALLBACK_INNER_ERROR, message: \"on message error\" }), this.onError && this.onError(g), null === (h = this.eventHandler) || void 0 === h || h.dispatch(\"onError\", g);}}function X(e) {var t = [],r = this.root.lookup(\"easemob.pb.KeyValue\"),o = [];for (var n in e) {var i = r.decode(t);i.key = n, \"object\" == typeof e[n] ? (i.type = 8, i.stringValue = JSON.stringify(e[n])) : \"string\" == typeof e[n] ? (i.type = 7, i.stringValue = e[n]) : \"boolean\" == typeof e[n] ? (i.type = 1, i.varintValue = !0 === e[n] ? 1 : 0) : Number.isInteger(e[n]) ? (i.type = 2, i.varintValue = e[n]) : (i.type = 6, i.doubleValue = e[n]), o.push(i);}return o;}function Y(e) {var t,r,o = [];if (this.root) {var n,i = this.root.lookup(\"easemob.pb.MessageBody.Content\").decode(o);switch (n = !e.group && \"groupchat\" !== (null === (t = null == e ? void 0 : e.chatType) || void 0 === t ? void 0 : t.toLowerCase()) || e.roomType ? e.group && e.roomType || \"chatroom\" === (null === (r = null == e ? void 0 : e.chatType) || void 0 === r ? void 0 : r.toLowerCase()) ? \"chatRoom\" : \"singleChat\" : \"groupChat\", e.type) {case \"txt\":i.type = 0, i.text = e.msg;break;case \"img\":i.type = 1, e.body ? (i.displayName = e.body.filename, i.remotePath = e.body.url, i.secretKey = e.body.secret, i.fileLength = e.body.file_length, i.size = e.body.size, i.thumbnailDisplayName = e.body.filename) : e.file ? (i.displayName = e.file.filename, i.remotePath = e.file.url, i.secretKey = e.file.secret, i.fileLength = e.file.file_length, i.size = e.file.size, i.thumbnailDisplayName = e.file.filename) : (i.displayName = e.filename, i.remotePath = e.url, i.secretKey = e.secret, i.fileLength = e.file_length, i.size = e.size, i.thumbnailDisplayName = e.filename);break;case \"video\":i.type = 2, i.displayName = e.body.filename, i.remotePath = e.body.url, i.secretKey = e.body.secret, i.fileLength = e.body.file_length, i.duration = e.body.length, i.thumbnailDisplayName = e.body.filename;break;case \"loc\":i.type = 3, i.latitude = e.lat, i.longitude = e.lng, i.address = e.addr, i.buildingName = e.buildingName, i.latitude = e.lat;break;case \"audio\":i.type = 4, i.displayName = e.body.filename, i.remotePath = e.body.url, i.secretKey = e.body.secret, i.fileLength = e.body.file_length, i.duration = e.body.length, i.thumbnailDisplayName = e.body.filename;break;case \"file\":i.type = 5, i.displayName = e.body.filename, i.remotePath = e.body.url, i.secretKey = e.body.secret, i.fileLength = e.body.file_length, i.size = e.body.size, i.thumbnailDisplayName = e.body.filename;break;case \"cmd\":i.type = 6, i.action = e.action;break;case \"custom\":i.type = 7, i.customEvent = e.customEvent, i.customExts = X.call(this, e.customExts);}var a = [];e.ext && (a = X.call(this, e.ext));var s = this.root.lookup(\"easemob.pb.MessageBody\"),c = s.decode(o);c.from = { name: this.context.jid.name }, c.to = { name: e.to }, \"channel\" === e.type ? c.type = 7 : \"recall\" === e.type ? (c.type = 6, c.ackMessageId = e.ackId) : \"delivery\" === e.type ? (c.type = 5, c.ackMessageId = e.ackId) : \"read\" === e.type ? (c.type = 4, c.ackMessageId = e.ackId, \"groupChat\" === n && (c.msgConfig = { allowGroupAck: !0 }, c.ackContent = e.ackContent)) : \"chatRoom\" === n ? c.type = 3 : \"groupChat\" === n ? (c.type = 2, e.msgConfig && (c.msgConfig = { allowGroupAck: !0 })) : \"singleChat\" === n && (c.type = 1), c.contents = [i], c.ext = a;var l = function (e) {var t = {};return \"translations\" in e && (t.translations = e.translations), \"isChatThread\" in e && e.isChatThread && (t.thread = {}), Object.keys(t).length > 0 ? JSON.stringify(t) : \"\";}(e);l && (c.meta = l), c = s.encode(c).finish();var p = this.root.lookup(\"easemob.pb.Meta\").decode(o);p.id = e.id;var d = \"easemob.com\";\"chatRoom\" !== n && \"groupChat\" !== n || (d = \"conference.easemob.com\"), p.to = { appKey: this.appKey, name: e.to, domain: d }, \"chatRoom\" === n && (p.ext = X.call(this, function (e) {return { chatroom_msg_tag: \"high\" === e.priority ? 0 : \"low\" === e.priority ? 2 : 1 };}(e))[0]), p.ns = 1, p.payload = c;var h = this.root.lookup(\"easemob.pb.CommSyncUL\"),f = h.decode(o);f.meta = p, f = h.encode(f).finish();var m = this.root.lookup(\"easemob.pb.MSync\"),E = m.decode(o);return E.version = this.version, E.encryptType = this.encryptType, E.command = 0, E.payload = f, m.encode(E).finish();}e.fail && e.fail({ type: u.E.WEBIM_CONNCTION_CLIENT_OFFLINE, message: \"Not logged in\" });}function Q(e) {var t = this;if (!e.file) return e;var r = _C({}, e);return r.accessToken = this.token, r.appKey = this.appKey, r.apiUrl = this.apiUrl, r.body && r.body.url ? Y.call(this, r) : new Promise(function (o, n) {var i = r.onFileUploadComplete;r.onFileUploadComplete = function (o) {var n, a;if (o.entities[0][\"file-metadata\"]) {var s = o.entities[0][\"file-metadata\"][\"content-length\"];r.file_length = s, r.filetype = o.entities[0][\"file-metadata\"][\"content-type\"], s > 204800 && (r.thumbnail = !0);}r.body = { type: r.type || \"file\", secret: o.entities[0][\"share-secret\"], filename: r.file.filename || r.filename, url: (t.isHttpDNS ? t.apiUrl + o.uri.substr(o.uri.indexOf(\"/\", 9)) : o.uri) + \"/\" + o.entities[0].uuid, length: r.length || 0, filetype: r.filetype || r.file.filetype, file_length: (null === (a = null === (n = r.file) || void 0 === n ? void 0 : n.data) || void 0 === a ? void 0 : a.size) || 0, size: { width: r.width || 0, height: r.height || 0 } }, r.file.url = o.uri, e.secret = o.entities[0][\"share-secret\"];var c = (t.isHttpDNS ? t.apiUrl + o.uri.substr(o.uri.indexOf(\"/\", 9)) : o.uri) + \"/\" + o.entities[0].uuid;e.url = c, o.url = c, \"img\" === r.type && (e.thumb = \"\".concat(c, \"?thumbnail=true\"), o.thumb = \"\".concat(c, \"?thumbnail=true\")), i instanceof Function && i(o, r.id);var u = Y.call(t, r);S.TJ.size <= S.F3 && S.TJ.set(r.id, { rpt: t.dataReport.geOperateFun({ operationName: N.fI.SEND_MSG }) }), ee.call(t, u);}, c.P6.uploadFile.call(t, r, N.fI.UPLOAD_MSG_ATTACH);});}function $(e) {var t = this;return new Promise(function (r, o) {var n, i;if (t.logOut) return o({ type: u.E.WEBIM_CONNECTION_CLOSED, message: \"not login\" });if (!e.id || \"string\" != typeof e.id || \"\" === e.id) return o({ type: u.E.MESSAGE_PARAMETER_ERROR, message: 'Missing required parameter: \"id\"' });if (!e.to || \"string\" != typeof e.to || \"\" === e.to) return o({ type: u.E.MESSAGE_PARAMETER_ERROR, message: 'Missing required parameter: \"to\"' });var a = \"file\" === e.type || \"img\" === e.type || \"audio\" === e.type || \"video\" === e.type,s = \"delivery\" === e.type || \"read\" === e.type || \"channel\" === e.type;if (e.id && ((!a && !s || a && t.useOwnUploadFun) && S.TJ.size <= S.F3 && S.TJ.set(e.id, { rpt: t.dataReport.geOperateFun({ operationName: \"recall\" === e.type ? N.fI.SEND_RECALL_MSG : N.fI.SEND_MSG }) }), t._msgHash[e.id] = _C(_C({}, e), { resolve: r, reject: o })), a && e.file) return Q.call(t, e);if (\"txt\" === e.type && (null === (n = e.msgConfig) || void 0 === n ? void 0 : n.languages) && Array.isArray(null === (i = e.msgConfig) || void 0 === i ? void 0 : i.languages) && e.msgConfig.languages.length > 0) {var c = t.translateMessage || t.translation.translateMessage;if (!c) throw new Error(\"there is no method to translate message\");c({ text: e.msg, languages: e.msgConfig.languages }).then(function (r) {var o,n = null === (o = r.data[0]) || void 0 === o ? void 0 : o.translations;n = n.map(function (e) {return { code: e.to, text: e.text };}), e.translations = n;var i = Y.call(t, e);ee.call(t, i, e.id);}).catch(function (e) {o(e);});} else {var l = Y.call(t, e);ee.call(t, l, e.id);}});}function ee(e, t) {if (!this.isOpened()) return this.unSendMsgArr.push(e), !this.logOut && this.autoReconnectNumTotal < this.autoReconnectNumMax && (this.autoReconnectNumTotal <= this.socketHost.length && this.isHttpDNS || !this.isHttpDNS) && (h.kg.debug(\"need to reconnect\", this.autoReconnectNumTotal, this.autoReconnectNumMax), this.offLineSendConnecting = !0, this.reconnect()), void (this.onError && this.onError({ type: u.E.WEBIM_CONNCTION_DISCONNECTED, message: \"websocket has been disconnected\" }));var r;r = \"miniCore\" === this.name ? e : b.call(this, e, t), this.sock.send(r);}var te = function te(e, t) {return e.send = $, e.sendMsg = $, h.kg.debug(\"init Msync by \".concat(e.name)), { generateProvision: A.bind(e), base64transform: b.bind(e), distributeMeta: M.bind(e), decodeMeta: U.bind(e), decodeUnreadDL: k.bind(e), _rebuild: w.bind(e), _lastsession: D.bind(e), receiveProvision: j.bind(e), isInQueue: q.bind(e), decodeNotice: K.bind(e), decodeMSync: V.bind(e), distributeMSync: J.bind(e), encodeChatMsg: Y.bind(e), upLoadFile: Q.bind(e), send: $.bind(e), stopHeartBeat: W.bind(e) };},re = function () {function e(e, t, r) {this.handlerData = {}, this.handlerData = {}, e.addEventHandler = this.addEventHandler.bind(this), e.removeEventHandler = this.removeEventHandler.bind(this);}return e.prototype.addEventHandler = function (e, t) {this.handlerData[e] = t;}, e.prototype.removeEventHandler = function (e) {delete this.handlerData[e];}, e.prototype.dispatch = function (e, t) {for (var r in h.kg.debug(\"dispatch event: \" + e, t || \"\"), this.handlerData) {var o = this.handlerData[r][e];o && o(t);}}, e;}(),oe = function oe() {};function ne(e) {this.onOpened = e.onOpened || oe, this.onPresence = e.onPresence || oe, this.onTextMessage = e.onTextMessage || oe, this.onPictureMessage = e.onPictureMessage || oe, this.onAudioMessage = e.onAudioMessage || oe, this.onVideoMessage = e.onVideoMessage || oe, this.onFileMessage = e.onFileMessage || oe, this.onLocationMessage = e.onLocationMessage || oe, this.onCmdMessage = e.onCmdMessage || oe, this.onCustomMessage = e.onCustomMessage || oe, this.onReceivedMessage = e.onReceivedMessage || oe, this.onDeliveredMessage = e.onDeliveredMessage || oe, this.onReadMessage = e.onReadMessage || oe, this.onRecallMessage = e.onRecallMessage || oe, this.onChannelMessage = e.onChannelMessage || oe, this.onError = e.onError || oe, this.onOffline = e.onOffline || oe, this.onOnline = e.onOnline || oe, this.onStatisticMessage = e.onStatisticMessage || oe, this.onContactInvited = e.onContactInvited || oe, this.onContactAgreed = e.onContactAgreed || oe, this.onContactRefuse = e.onContactRefuse || oe, this.onContactDeleted = e.onContactDeleted || oe, this.onContactAdded = e.onContactAdded || oe, this.onTokenWillExpire = e.onTokenWillExpire || oe, this.onTokenExpired = e.onTokenExpired || oe, this.onClosed = e.onClosed || oe, this.onPresenceStatusChange = e.onPresenceStatusChange || oe;}var ie = { biz: \"\", debug: !1, token: \"\" },ae = \"https://data-reporting.agora.io/report\",se = \"https://data-reporting.sh.agoralab.co/report\",ce = function ce(e) {var t = Number(N.C8[e]);return t === N.C8.USER_LOGIN ? \"MANUALLOGIN\" : t === N.C8.MSYNC_SENDMESSAGE ? \"SENDMESSAGE\" : t > N.C8.UNKNOWOPERATION && t < N.C8.REST_OPERATE ? \"REST\" : t > N.C8.REST_OPERATE && t < N.C8.MSYNC_OPERATE ? \"MESSAGE\" : t > N.C8.MSYNC_OPERATE && t < N.C8.ROSTER_OPERATE ? \"ROSTER\" : t > N.C8.ROSTER_OPERATE && t < N.C8.USER_OPERATE ? \"USER\" : t > N.C8.USER_OPERATE && t < N.C8.GROUP_OPERATE ? \"GROUP\" : t > N.C8.GROUP_OPERATE && t < N.C8.CHATROOM_OPERATE ? \"CHATROOM\" : \"OPERATION\";},ue = function ue() {return new Date().getTime();},le = function le(e) {return [c.iw.BAIDU, c.iw.WX, c.iw.DD, c.iw.ZFB, c.iw.TT, c.iw.QUICK_APP, c.iw.UNI].includes(e.platform);},pe = function pe() {return e = 1, t = 99999, e = Math.ceil(e), t = Math.floor(t), Math.floor(Math.random() * (t - e)) + e;var e, t;},de = {},he = 1e3,fe = function () {function e(e) {this.eventQueue = [], this.stock = he, this.config = e, this.governor();}return e.prototype.add = function (e) {this.stock <= 0 ? __f__(\"warn\", \"Event Report limit \".concat(he, \" per minute\"), \" at sdk/uniapp-sdk-4.1.2.js:1\") : (this.eventQueue.push(e), this.consume(), this.stock -= 1);}, e.prototype.consume = function () {var e = this;0 !== this.eventQueue.length && (this.timer && this.eventQueue.length <= 10 && clearTimeout(this.timer), this.timer = setTimeout(function () {var t,r = e.eventQueue.splice(0, 10),o = r.filter(function (e) {return e.appId === r[0].appId;}),n = r.filter(function (e) {return e.appId !== r[0].appId;});(t = e.eventQueue).unshift.apply(t, n), e.batchSend(o);}, 1e3));}, e.prototype.governor = function () {var e = this,t = setInterval(function () {e.stock = he;}, 6e4);\"undefined\" != typeof addEventListener && addEventListener(\"beforeunload\", function () {clearInterval(t);});}, e.prototype.batchSend = function (e) {var t, r;if (void 0 === e && (e = []), 0 !== e.length) try {var o = e.map(function (e) {e.biz, e.appId;var t = e.eventId,r = function (e, t) {var r = {};for (var o in e) {Object.prototype.hasOwnProperty.call(e, o) && t.indexOf(o) < 0 && (r[o] = e[o]);}if (null != e && \"function\" == typeof Object.getOwnPropertySymbols) {var n = 0;for (o = Object.getOwnPropertySymbols(e); n < o.length; n++) {t.indexOf(o[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, o[n]) && (r[o[n]] = e[o[n]]);}}return r;}(e, [\"biz\", \"appId\", \"eventId\"]);return { eventId: Number(t), body: r };});!function (e, t) {try {var r = t.biz,o = t.appId,n = t.data,i = t.debug,a = t.onSuccess;if (!r) throw new Error(\"biz is not defined\");de.global || (de = c.P6.getEnvInfo());var s = de;if (le(s)) {var u = { url: i ? se : ae, data: n, method: \"POST\", success: function success() {null == a || a();}, fail: function fail() {}, complete: function complete() {} },l = { token: e, appid: null != o ? o : \"\", sendts: \"\".concat(Math.floor(new Date().getTime() / 1e3)), biz: r, debug: \"\".concat(i) };if (\"zfb\" === s.platform || \"dd\" === s.platform ? u.headers = l : u.header = l, \"dd\" === s.platform) return s.global.httpRequest(u);s.global.request(u);} else {var p = new XMLHttpRequest();p.onreadystatechange = function () {2 === p.readyState && (null == a || a());}, p.open(\"POST\", i ? se : ae), p.setRequestHeader(\"Content-Type\", \"application/json\"), p.setRequestHeader(\"token\", e), p.setRequestHeader(\"appid\", null != o ? o : \"\"), p.setRequestHeader(\"sendts\", \"\".concat(Math.floor(new Date().getTime() / 1e3))), p.setRequestHeader(\"biz\", r), p.setRequestHeader(\"debug\", \"\".concat(i)), p.send(JSON.stringify(n));}} catch (e) {__f__(\"error\", e, \" at sdk/uniapp-sdk-4.1.2.js:1\");}}(this.config.token, { biz: null === (t = e[0]) || void 0 === t ? void 0 : t.biz, appId: null === (r = e[0]) || void 0 === r ? void 0 : r.appId, data: o, debug: this.config.debug, onSuccess: this.consume.bind(this) });} catch (e) {__f__(\"error\", e, \" at sdk/uniapp-sdk-4.1.2.js:1\");}}, e;}(),_me = function me() {return _me = Object.assign || function (e) {for (var t, r = 1, o = arguments.length; r < o; r++) {for (var n in t = arguments[r]) {Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);}}return e;}, _me.apply(this, arguments);},Ee = new (function () {function e(e) {this.inited = !1, this.appId = \"\", this.biz = \"\", this.eventQueue = {}, this.config = ie, e && this.init(e);}return e.prototype.init = function (e) {var t;if (void 0 === e && (e = {}), !e.biz || !e.token) throw new Error(\"Event Report: biz or token is not defined\");try {this.appId = null !== (t = e.appId) && void 0 !== t ? t : \"\", this.biz = e.biz, this.config = _me(_me({}, ie), e), this.eventQueue = new fe(this.config), this.log(e), this.inited = !0;} catch (e) {__f__(\"error\", e, \" at sdk/uniapp-sdk-4.1.2.js:1\");}}, e.prototype.send = function (e, t, r) {var o;if (void 0 === t && (t = {}), this.inited) {var n = _me(_me({}, t), { eventId: Number(e), biz: this.biz, appId: null !== (o = null == r ? void 0 : r.appId) && void 0 !== o ? o : this.appId });this.eventQueue.add(n), this.log(n);} else __f__(\"error\", \"Event Report: init is not called\", \" at sdk/uniapp-sdk-4.1.2.js:1\");}, e.prototype.log = function (e) {try {if (this.config.debug) {var t = e.payload,r = function (e, t) {var r = {};for (var o in e) {Object.prototype.hasOwnProperty.call(e, o) && t.indexOf(o) < 0 && (r[o] = e[o]);}if (null != e && \"function\" == typeof Object.getOwnPropertySymbols) {var n = 0;for (o = Object.getOwnPropertySymbols(e); n < o.length; n++) {t.indexOf(o[n]) < 0 && Object.prototype.propertyIsEnumerable.call(e, o[n]) && (r[o[n]] = e[o[n]]);}}return r;}(e, [\"payload\"]);__f__(\"log\", \"%c Event Report: \".concat(this.config.biz, \" \"), \"background: #8A97FC; color: #fff\", \" at sdk/uniapp-sdk-4.1.2.js:1\"), console.table(r), t && (__f__(\"info\", \"payload:\", \" at sdk/uniapp-sdk-4.1.2.js:1\"), console.table(t));}} catch (e) {__f__(\"error\", e, \" at sdk/uniapp-sdk-4.1.2.js:1\");}}, e;}())(),_ge = function ge() {return _ge = Object.assign || function (e) {for (var t, r = 1, o = arguments.length; r < o; r++) {for (var n in t = arguments[r]) {Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);}}return e;}, _ge.apply(this, arguments);},ye = { requestName: \"\", subrequestid: \"1\", requestMethod: \"GET\", requestUrl: \"\", requestElapse: 0, code: 0, codeDesc: \"\", isLastApi: 0, isSuccess: 1 },Te = function () {function e(e) {this.platform = c.P6.getEnvInfo(), this.isReportDt = e.isReport || !1, this.isCollectDt = !0, le(this.platform) && !this.isReportDt && (this.isCollectDt = !1), this.eventQueue = [], this.accessChannel = S.yK, this.options = function (e, t) {t.platform || (t = c.P6.getEnvInfo());var r = e.org,o = e.appkey,n = e.deviceId,i = e.sdkVersion,a = (null === navigator || void 0 === navigator ? void 0 : navigator.userAgent) || \"\".concat(t.platform, \"_mini_program\");return { org: r, appkey: o, deviceId: n, sdkServiceId: \"sid_\".concat(c.P6.getUniqueId(), \"_\").concat(pe()), did: a, sdkVersion: i, os: S.Wc, sdkProduct: N.aC.web };}(e, this.platform), this.sid = this.options.sdkServiceId, this.init(e);}return e.getInstance = function () {return e.instance;}, e.prototype.getServiceId = function () {return this.sid || \"sid_0\";}, e.prototype.setIsReportDt = function (e) {this.isReportDt = e, e && this.rptEventQueue();}, e.prototype.setIsCollectDt = function (e) {this.isCollectDt = e, e || (this.eventQueue = []);}, e.prototype.rptEventQueue = function () {var e = this;this.eventQueue.length && this.eventQueue.forEach(function (t, r) {Ee.send(t.eventId, t.dt), r >= e.eventQueue.length - 1 && (e.eventQueue = []);});}, e.prototype.init = function (t) {e.instance || (e.instance = this, Ee.init({ biz: S.el, token: S.$x, appId: t.appkey, debug: !1 }), this.reportInit());}, e.prototype.reportInit = function () {if (this.isCollectDt) {var e = this.options,t = e.did,r = e.os,o = e.sdkVersion,n = e.deviceId;this.reportData(S.iB.INIT, { did: t, os: r, sdkVersion: o, deviceId: n });}}, e.prototype.geOperateFun = function (e) {var t = this;if (!this.isCollectDt) return function () {};var r = 1,o = 0,n = \"\",i = ue(),a = e.uid,s = e.operationName;a && (this.uid = a);var u = { uid: this.uid, operationId: \"opr_\".concat(c.P6.getUniqueId(), \"_\").concat(pe()), requestid: \"req_\".concat(c.P6.getUniqueId(), \"_\").concat(pe()), operationName: s };return function (e) {var a, l, p, d;if (e.data.isSuccess ? (o = 0, n = \"\") : (0 === e.data.code && (e.data.code = -1), o = null !== (a = e.data.code) && void 0 !== a ? a : o, n = null !== (l = e.data.codeDesc) && void 0 !== l ? l : n), (null === (p = e.data) || void 0 === p ? void 0 : p.accessChannel) && (t.accessChannel = null === (d = e.data) || void 0 === d ? void 0 : d.accessChannel), e.isRetry ? (r++, e.data.subrequestid = \"\".concat(r)) : (u.requestid = \"req_\".concat(c.P6.getUniqueId(), \"_\").concat(pe()), r = 1), e.data.isLastApi) {var h = ue();e.data.requestElapse = h - i, e.data.requestMethod = \"\", e.data.subrequestid = \"0\", e.data.code = 200 === o ? 0 : o, e.data.codeDesc = n;} else e.data.requestName || (e.data.requestName = s);e.data.requestElapse || (e.data.requestElapse = ue() - i), t.reportData.call(t, S.iB.API, _ge(_ge(_ge(_ge({}, ye), u), e.data), { accessChannel: t.accessChannel, operationType: ce(s) })), e.isEndApi && t.reportData.call(t, S.iB.API, _ge(_ge(_ge({}, u), ye), { isSuccess: e.data.isSuccess, isLastApi: 1, subrequestid: \"0\", requestMethod: \"\", code: 200 === o ? 0 : o, codeDesc: n, requestElapse: e.data.requestElapse, accessChannel: t.accessChannel, operationType: ce(s) }));};}, e.prototype.reportData = function (e, t) {return r = this, o = void 0, i = function i() {var r, o, n, i, a, s, u, l;return function (e, t) {var r,o,n,i,a = { label: 0, sent: function sent() {if (1 & n[0]) throw n[1];return n[1];}, trys: [], ops: [] };return i = { next: s(0), throw: s(1), return: s(2) }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {return this;}), i;function s(i) {return function (s) {return function (i) {if (r) throw new TypeError(\"Generator is already executing.\");for (; a;) {try {if (r = 1, o && (n = 2 & i[0] ? o.return : i[0] ? o.throw || ((n = o.return) && n.call(o), 0) : o.next) && !(n = n.call(o, i[1])).done) return n;switch (o = 0, n && (i = [2 & i[0], n.value]), i[0]) {case 0:case 1:n = i;break;case 4:return a.label++, { value: i[1], done: !1 };case 5:a.label++, o = i[1], i = [0];continue;case 7:i = a.ops.pop(), a.trys.pop();continue;default:if (!((n = (n = a.trys).length > 0 && n[n.length - 1]) || 6 !== i[0] && 2 !== i[0])) {a = 0;continue;}if (3 === i[0] && (!n || i[1] > n[0] && i[1] < n[3])) {a.label = i[1];break;}if (6 === i[0] && a.label < n[1]) {a.label = n[1], n = i;break;}if (n && a.label < n[2]) {a.label = n[2], a.ops.push(i);break;}n[2] && a.ops.pop(), a.trys.pop();continue;}i = t.call(e, a);} catch (e) {i = [6, e], o = 0;} finally {r = n = 0;}}if (5 & i[0]) throw i[1];return { value: i[0] ? i[1] : void 0, done: !0 };}([i, s]);};}}(this, function (p) {switch (p.label) {case 0:return p.trys.push([0, 3,, 4]), r = ue(), o = 0, e !== S.iB.API ? [3, 2] : [4, (d = this.platform, new Promise(function (e) {var t;d.platform || (d = c.P6.getEnvInfo());var r = \"\";if (d.platform === c.iw.WEB) {var o = navigator.connection;(null == o ? void 0 : o.type) ? (null == o || o.type, r = N.td.WIFI) : (null == o ? void 0 : o.effectiveType) && (r = N.td[o.effectiveType.toLocaleUpperCase()]), e(r);} else d.platform === c.iw.NODE ? (r = N.td.UNKNOWN, e(r)) : null === (t = d.global) || void 0 === t || t.getNetworkType({ success: function success(t) {r = N.td[t.networkType.toLocaleUpperCase()], e(r);} });}))];case 1:o = p.sent(), p.label = 2;case 2:return n = this.options, i = n.appkey, a = n.sdkServiceId, s = n.sdkProduct, u = _ge({ lts: r, net: o, appkey: i, sdkServiceId: a, sdkProduct: s }, t), this.isReportDt ? Ee.send(e, u) : this.isCollectDt && this.eventQueue.push({ eventId: e, dt: u }), [3, 4];case 3:return l = p.sent(), __f__(\"warn\", l, \" at sdk/uniapp-sdk-4.1.2.js:1\"), [3, 4];case 4:return [2];}var d;});}, new ((n = void 0) || (n = Promise))(function (e, t) {function a(e) {try {c(i.next(e));} catch (e) {t(e);}}function s(e) {try {c(i.throw(e));} catch (e) {t(e);}}function c(t) {var r;t.done ? e(t.value) : (r = t.value, r instanceof n ? r : new n(function (e) {e(r);})).then(a, s);}c((i = i.apply(r, o || [])).next());});var r, o, n, i;}, e;}(),_e = r(9855),ve = r(5759),Re = r(8939),Oe = r(8633),Ie = r(5339),Se = r(3595),Ne = r(9590),_Ce = function Ce() {return _Ce = Object.assign || function (e) {for (var t, r = 1, o = arguments.length; r < o; r++) {for (var n in t = arguments[r]) {Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);}}return e;}, _Ce.apply(this, arguments);},Ae = c.P6.getEnvInfo(),be = \"web\" === Ae.platform,Me = function Me() {},Ue = function () {function e(t) {var r;if (this.name = \"connection\", this.isDebug = t.isDebug || !1, this.isReport = !1, this.isHttpDNS = void 0 === t.isHttpDNS ? be : t.isHttpDNS, this.heartBeatWait = t.heartBeatWait || 3e4, this.autoReconnectNumMax = t.autoReconnectNumMax || 5, this.refreshDNSIntervals = this.autoReconnectNumMax < 5 ? this.autoReconnectNumMax : 5, this.delivery = t.delivery || !1, this.dnsArr = [\"https://rs.easemob.com\", \"https://rs.chat.agora.io\", \"http://59.110.89.59\", \"http://39.97.193.190\", \"http://39.97.193.187\"], this.dnsIndex = 0, this.dnsTotal = this.dnsArr.length, this.restHosts = [], this.restTotal = 0, this.restIndex = 0, this.hostIndex = 0, this.socketHost = [], this.hostTotal = 0, this.times = 1, this.autoReconnectNumTotal = 0, this.domain = \"easemob.com\", this.appKey = t.appKey, this.appName = \"\", this.orgName = \"\", this.token = \"\", this.grantType = \"\", this.apiUrl = t.apiUrl || \"\", this.url = t.url || \"\", this.https = t.https || \"undefined\" != typeof window && \"https:\" === (null === (r = window.location) || void 0 === r ? void 0 : r.protocol), this.version = \"4.1.2\", this.deviceId = t.deviceId || \"webim\", this.osType = 16, this.useOwnUploadFun = t.useOwnUploadFun || !1, this.compressType = [0], this.encryptType = [0], this.clientResource = \"\", this.expiresIn = 0, this.expirationTime = 0, this.logOut = !0, this.context = { jid: { appKey: \"\", clientResource: \"\", domain: \"easemob.com\", name: \"\" }, userId: \"\", appKey: \"\", status: 0, restTokenData: \"\", appName: \"\", orgName: \"\", root: {}, accessToken: \"\" }, this._msgHash = {}, this._msgPromiseHash = {}, this._queues = [], this._load_msg_cache = [], this.unSendMsgArr = [], this.mr_cache = {}, \"string\" != typeof this.appKey || 2 !== this.appKey.split(\"#\").length) throw Error(\"Illegal appKey: \".concat(this.appKey));var o = this.appKey.split(\"#\");this.orgName = o[0], this.appName = o[1], this.listen = ne.bind(this), this.mSync = this.usePlugin(te), this.eventHandler = this.usePlugin(re), Object.assign(e.prototype, _e), Object.assign(e.prototype, ve), Object.assign(e.prototype, Re), Object.assign(e.prototype, Oe), Object.assign(e.prototype, Ie), Object.assign(e.prototype, Se), Object.assign(e.prototype, Ne), this.dataReport = new Te({ appkey: this.appKey, org: this.orgName, sdkVersion: this.version, deviceId: this.deviceId, isReport: this.isReport });var n = 0,i = this;Object.defineProperty(c.P6, \"ajaxUnconventionalErrorTimes\", { set: function set(e) {0 !== e && (h.kg.debug(\"rest api request fail times: \".concat(e)), (n = e) % 5 == 0 && this.isHttpDNS && (h.kg.debug(\"refresh dns config when rest request fail.\"), xe.call(i, \"refresh\", {}, {})));}, get: function get() {return n;} });}return e.prototype.usePlugin = function (e, t) {if (!t) return new e(this);this[t] = new e(this);}, e.prototype.listen = function (e) {}, e.prototype.addEventHandler = function (e, t) {}, e.prototype.removeEventHandler = function (e) {}, e.prototype.registerUser = function (e) {var t = this;return new Promise(function (r, o) {var n = t.dataReport.geOperateFun({ uid: e.username, operationName: N.fI.REGISTER });if (t.isHttpDNS) {t.dnsIndex = 0;var i = _Ce(_Ce({}, e), { user: e.username, pwd: e.password, promise: { resolve: r, reject: o } });xe.call(t, \"signup\", i, { rpt: n });} else i = _Ce(_Ce({}, e), { promise: { resolve: r, reject: o } }), ke.call(t, i, { rpt: n });});}, e.prototype.open = function (e) {var t = this;return h.kg.debug(\"open\"), new Promise(function (r, o) {if (Ge.call(t, e)) {e.accessToken && (t.token = e.accessToken);var n = _Ce(_Ce({}, e), { promise: { resolve: r, reject: o } }),i = t.dataReport.geOperateFun({ uid: e.user, operationName: N.fI.LOGIN });t.isHttpDNS ? xe.call(t, \"login\", n, { rpt: i }) : we.call(t, n, { rpt: i });}});}, e.prototype.isOpened = function () {return this.sock && 1 === this.sock.readyState || !1;}, e.prototype.close = function () {this.logOut = !0, this.context.status = u.E.STATUS_CLOSING, this.sock && this.sock.close(), this.stopHeartBeat(), this.rejectMessage(), this.context.status = u.E.STATUS_CLOSED, this._load_msg_cache = [], this.unSendMsgArr = [], this._queues = [], this._msgHash = {}, this.mr_cache = {}, this.token = \"\", this.context.accessToken = \"\";}, e.prototype.stopHeartBeat = function () {clearInterval(this.heartBeatID);}, e.prototype._checkOpenParams = function (e) {return Ge.call(this, e);}, e.prototype.clear = function () {this.restTotal = 0, this.restIndex = 0, this.hostIndex = 0, this.hostTotal = 0;}, e.prototype.heartBeat = function () {}, e.prototype.renewToken = function (e) {var t = this;return this.isOpened() ? this.getChatToken(e).then(function (e) {var r = Date.now();return t.expirationTime = e.expire_timestamp, t.expiresIn = e.expire_timestamp - r, t.token = e.access_token, t.context.accessToken = e.access_token, t.clearTokenTimeout(), t.tokenExpireTimeCountDown(t.expiresIn), { status: !0, token: e.access_token, expire: e.expire_timestamp };}) : Promise.reject({ status: !1 });}, e.prototype.clearTokenTimeout = function () {h.kg.debug(\"clearTokenTimeout\"), this.tokenWillExpireTimer && clearTimeout(this.tokenWillExpireTimer), this.tokenExpiredTimer && clearTimeout(this.tokenExpiredTimer);}, e.prototype.tokenExpireTimeCountDown = function (e) {var t = this;e > Math.pow(2, 31) - 1 && (e = Math.pow(2, 31) - 1), this.tokenWillExpireTimer = setTimeout(function () {var r;t.onTokenWillExpire && t.onTokenWillExpire(), null === (r = t.eventHandler) || void 0 === r || r.dispatch(\"onTokenWillExpire\"), h.kg.info(\"onTokenWillExpire\", e);}, e / 2), this.tokenExpiredTimer = setTimeout(function () {var r;h.kg.info(\"onTokenExpired\", e), t.onTokenExpired && t.onTokenExpired(), null === (r = t.eventHandler) || void 0 === r || r.dispatch(\"onTokenExpired\"), t.close();}, e);}, e.prototype.compareTokenExpireTime = function (e, t) {var r,o = Number(t) - Number(e);h.kg.debug(\"compareTokenExpireTime\", o), o <= this.expiresIn / 2 && o > 0 ? (this.onTokenWillExpire && this.onTokenWillExpire(), null === (r = this.eventHandler) || void 0 === r || r.dispatch(\"onTokenWillExpire\"), h.kg.info(\"onTokenWillExpire\", o)) : o <= 0 && (this.closeByTokenExpired(), h.kg.info(\"closeByTokenExpired\", o));}, e.prototype.closeByTokenExpired = function () {var e;h.kg.info(\"closed By TokenExpired\"), this.onTokenExpired && this.onTokenExpired(), null === (e = this.eventHandler) || void 0 === e || e.dispatch(\"onTokenExpired\"), this.close();}, e.prototype.rejectMessage = function () {var e = this,t = Object.keys(this._msgHash);if (t.length > 0) {var r = s.Z.create({ type: u.E.MESSAGE_WEBSOCKET_DISCONNECTED, message: \"websocket disconnected\" });t.forEach(function (t) {e._msgHash[t].reject instanceof Function && e._msgHash[t].reject(r), e._msgHash[t].fail instanceof Function && e._msgHash[t].fail(r), delete e._msgHash[t];});}}, e.prototype.reconnect = function () {var e = this;h.kg.info(\"reconnect: time\", this.times), h.kg.info(\"reconnect sock.readyState: \", this.sock.readyState), 0 !== this.sock.readyState && 1 !== this.sock.readyState && (this.rejectMessage(), this.isHttpDNS && (this.hostIndex, this.socketHost.length), this.hostIndex++, this.hostIndex >= this.socketHost.length - 1 && (this.hostIndex = this.socketHost.length - 1), setTimeout(function () {h.kg.info(\"login sock.readyState: \", e.sock.readyState), 1 !== e.sock.readyState && (e.sock.close(), De.call(e, { access_token: e.context.accessToken }), e.autoReconnectInterval += e.times * e.times, e.times++);}, 500 * this.times), this.autoReconnectNumTotal++);}, e.prototype.send = function (e) {return Promise.resolve(null);}, e.max_cache_length = 100, e._getSock = function () {}, e;}();function ke(e, t) {var r = this,o = t.rpt,n = t.isRetry,i = e.promise,a = this.apiUrl + \"/\" + this.orgName + \"/\" + this.appName + \"/users\",l = { requestName: N.c.RESISTER, requestUrl: a },p = e.error || Me;if (!this.orgName && !this.appName) {var d = s.Z.create({ type: u.E.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR, message: \"signup error\" });p(d);}var h = { headers: { \"Content-type\": \"application/json\" }, url: a, dataType: \"json\", data: JSON.stringify({ username: e.username, password: e.password, nickname: e.nickname || \"\" }), success: function success(t) {e.success && e.success(t);var r = _Ce(_Ce({}, t), { type: u.E.REQUEST_SUCCESS });i.resolve && i.resolve(r);var a = t.extraInfo,s = a.httpCode,c = a.elapse;o({ isEndApi: !0, isRetry: n, data: _Ce(_Ce({}, { requestElapse: c, isSuccess: 1, code: s }), l) });}, error: function error(t) {var a = t.extraInfo,s = a.elapse,c = a.httpCode,u = a.errDesc;return o({ isRetry: n, data: _Ce(_Ce({}, { requestElapse: s, isSuccess: 0, code: c, codeDesc: u }), l) }), r.isHttpDNS && r.restIndex + 1 < r.restTotal ? (r.restIndex++, Be.call(r), ke.call(r, e, { rpt: o, isRetry: n }), Promise.reject(t)) : (o({ data: { isLastApi: 1, isSuccess: 0 } }), r.clear(), i.reject && i.reject(t), p(t));} };return c.P6.ajax(h).catch(function (e) {i.reject && i.reject(e);});}function we(e, t) {var r = this;if (Ge.call(this, e) && !this.isOpened()) {var o = t.rpt,n = t.isRetry;je.call(this, e), this.user = e.user;var i = e.promise,a = this.context.appName,l = this.context.orgName,p = this.apiUrl + \"/\" + l + \"/\" + a + \"/token\";if (e.agoraToken) this.grantType = \"agoraToken\", this.getChatToken(e.agoraToken).then(function (t) {h.kg.info(\"getChatToken result:\", t), r.expirationTime = t.expire_timestamp, r.token = t.access_token, r.context.accessToken = t.access_token, r.context.restTokenData = t.access_token;var n = t.extraInfo,a = n.httpCode,s = n.elapse;i.resolve({ accessToken: t.access_token, expireTimestamp: t.expire_timestamp });var c = { requestName: N.c.LOGIN_BY_AGORA_TOKEN, requestUrl: p, requestElapse: s, isSuccess: 1, code: a };o({ data: c }), De.call(r, _Ce(_Ce({}, e), { access_token: t.access_token }), o);}).catch(function (e) {var t,n = s.Z.create({ type: u.E.WEBIM_CONNCTION_GETROSTER_ERROR, message: \"get chat token fail\", data: e });i.reject(n), r.onError && r.onError(n), null === (t = r.eventHandler) || void 0 === t || t.dispatch(\"onError\", n);var a = e.extraInfo,c = a.elapse,l = a.httpCode,d = a.errDesc,h = { requestName: N.c.LOGIN_BY_AGORA_TOKEN, requestUrl: p, requestElapse: c, isSuccess: 0, code: l, codeDesc: d };o({ data: h }), o({ data: { isLastApi: 1, isSuccess: 0 } });});else if (e.accessToken) this.grantType = \"accessToken\", this.token = e.accessToken, this.context.accessToken = e.accessToken, this.context.restTokenData = e.accessToken, i.resolve({ accessToken: e.accessToken }), De.call(this, e, o);else {this.grantType = \"password\";var d = { grant_type: \"password\", username: e.user, password: e.pwd, timestamp: +new Date() },f = JSON.stringify(d),m = { headers: { \"Content-type\": \"application/json\" }, url: p, dataType: \"json\", data: f, success: function (t) {\"function\" == typeof e.success && e.success(t), r.token = t.access_token, r.context.restTokenData = t.access_token, r.context.accessToken = t.access_token, r.expiresIn = t.expires_in, r.clearTokenTimeout(), r.tokenExpireTimeCountDown(r.expiresIn), i.resolve({ accessToken: t.access_token, duration: t.expires_in });var a = t.extraInfo,s = a.httpCode,c = a.elapse,u = { requestName: N.c.LOGIN_BY_PWD, requestElapse: c, requestUrl: p, isSuccess: 1, code: s };o({ isRetry: n, data: u }), De.call(r, t, o);} || Me, error: function (t) {var a,c = t.extraInfo,l = c.elapse,d = c.httpCode,h = c.errDesc,f = { requestName: N.c.LOGIN_BY_PWD, requestElapse: l, requestUrl: p, isSuccess: 0, code: d, codeDesc: h };if (o({ isRetry: n, data: f }), r.isHttpDNS && r.restIndex + 1 < r.restTotal) return r.restIndex++, Be.call(r), void we.call(r, e, { rpt: o, isRetry: !0 });o({ data: { isLastApi: 1, isSuccess: 0 } }), r.clear(), t.error && t.error_description ? (a = s.Z.create({ type: u.E.WEBIM_CONNCTION_OPEN_USERGRID_ERROR, message: t.error_description, data: t }), r.onError && r.onError(a)) : (a = s.Z.create({ type: u.E.WEBIM_CONNCTION_OPEN_ERROR, message: t.error_description, data: t }), r.onError && r.onError(a)), \"function\" == typeof e.error && e.error(a), i.reject(a);} || Me, version: \"4.0.8\" };c.P6.ajax(m).catch(function (e) {__f__(\"warn\", e, \" at sdk/uniapp-sdk-4.1.2.js:1\");});}c.P6.listenNetwork(Pe.bind(this), Le.bind(this));}}function Pe() {var e;h.kg.debug(\"online\"), this.onOnline && this.onOnline(), null === (e = this.eventHandler) || void 0 === e || e.dispatch(\"onOnline\"), this.sock && 1 !== this.sock.readyState && (h.kg.debug(\"sock.readyState:\", this.sock.readyState), !this.logOut && this.reconnect());}function Le() {var e;h.kg.debug(\"offline\"), this.onOffline && this.onOffline(), null === (e = this.eventHandler) || void 0 === e || e.dispatch(\"onOffline\");}function De(e, t) {var r = this,o = this._getSock();this.sock = o;var n = function n() {var e;h.kg.debug(\"websockt onOpen\"), r.logOut = !1, t && t({ data: { isLastApi: 1, isSuccess: 1, accessChannel: null === (e = r.socketHost[r.hostIndex]) || void 0 === e ? void 0 : e.channel } }), \"zfb\" !== Ae.platform && \"dd\" !== Ae.platform || (r.sock.readyState = 1);var n = c.P6.flow([r.mSync.generateProvision, r.mSync.base64transform])();try {o.send(n);} catch (e) {var i = s.Z.create({ type: u.E.SDK_RUNTIME_ERROR, message: \"send message error\", data: e });r.onError && r.onError(i);}},i = function i() {var e, t;if (h.kg.debug(\"websocket onClose\"), \"zfb\" !== Ae.platform && \"dd\" !== Ae.platform || (r.sock.readyState = 3), !r.logOut && r.autoReconnectNumTotal < r.autoReconnectNumMax) {r.reconnect();var o = { type: u.E.WEBIM_CONNCTION_DISCONNECTED, message: \"websocket has been disconnected\" };r.onError && r.onError(o), r.autoReconnectNumTotal % r.refreshDNSIntervals == 0 && \"web\" === Ae.platform && r.isHttpDNS && (h.kg.debug(\"refresh dns config when websocket close\"), xe.call(r, \"refresh\", {}, {}));} else r.logOut ? (r.clear(), r.onClosed && r.onClosed(), null === (e = r.eventHandler) || void 0 === e || e.dispatch(\"onDisconnected\"), r.mSync.stopHeartBeat(), r.autoReconnectInterval = 0, r.times = 1, r.autoReconnectNumTotal = 0, r.hostIndex = 0) : (o = { type: u.E.WEBIM_CONNCTION_DISCONNECTED, message: \"websocket has been disconnected\" }, r.onError && r.onError(o), r.onClosed && r.onClosed(), null === (t = r.eventHandler) || void 0 === t || t.dispatch(\"onDisconnected\"), r.mSync.stopHeartBeat(), h.kg.debug(\"reconnect fail\"), r.autoReconnectInterval = 0, r.times = 1, r.autoReconnectNumTotal = 0, r.hostIndex = 0);},a = function a(e) {var t = r.mSync,o = t.decodeMSync,n = t.distributeMSync;c.P6.flow([o, n])(e);};\"web\" === Ae.platform ? (o.onopen = n, o.onclose = i, o.onmessage = a) : (o.onOpen(n), o.onMessage(a), o.onClose(i), o.onError(function (e) {var o;h.kg.debug(\"mini program sock on error\", e), r.onError && r.onError({ type: u.E.WEBIM_CONNECTION_ERROR, message: \"on socket error\", data: e }), !r.logOut && r.autoReconnectNumTotal < r.autoReconnectNumMax && 3 !== r.sock.readyState && (h.kg.debug(\"sock.onError reconnect\", r.autoReconnectNumTotal, r.autoReconnectNumMax), r.reconnect(), r.autoReconnectNumTotal % r.refreshDNSIntervals == 0 && \"web\" === Ae.platform && r.isHttpDNS && (h.kg.debug(\"refresh dns config when websocket error\"), xe.call(r, \"refresh\", {}, {}))), t && t({ data: { isLastApi: 1, isSuccess: 0, accessChannel: null === (o = r.socketHost[r.hostIndex]) || void 0 === o ? void 0 : o.channel } });}));}function Ge(e) {if (\"\" === e.user) {var t = s.Z.create({ type: u.E.WEBIM_CONNCTION_USER_NOT_ASSIGN_ERROR, message: \"the user cannot be empty\" });return this.onError && this.onError(t), !1;}var r = this.appKey.split(\"#\");return !(2 !== r.length || !r[0] || !r[1]) || (t = s.Z.create({ type: u.E.WEBIM_CONNCTION_APPKEY_NOT_ASSIGN_ERROR, message: \"the appKey is illegal\" }), this.onError && this.onError(t), !1);}function je(e) {this.context.jid = { appKey: this.appKey, name: e.user, domain: this.domain, clientResource: this.clientResource };var t = this.appKey.split(\"#\"),r = t[0],o = t[1];this.context.root = this.root, this.context.userId = e.user, this.context.appKey = this.appKey, this.context.appName = o, this.context.orgName = r;}function xe(e, t, r) {var o = this,n = r.rpt,i = r.isRetry,a = this.dnsArr[this.dnsIndex] + \"/easemob/server.json\",s = { url: a, dataType: \"json\", type: \"GET\", data: { app_key: encodeURIComponent(this.appKey) }, success: function (r) {var s = r.extraInfo,c = s.elapse,u = s.httpCode,l = { requestUrl: a, requestName: N.c.GET_DNS, requestElapse: c, isSuccess: 1, code: u };\"true\" === (null == r ? void 0 : r.enableDataReport) ? (o.dataReport.setIsCollectDt(!0), o.dataReport.setIsReportDt(!0)) : (o.dataReport.setIsReportDt(!1), o.dataReport.setIsCollectDt(!1)), n && n({ isRetry: i, data: l });var p = r.rest.hosts,d = o.https ? \"https\" : \"http\";if (h.kg.info(\"httpType: \" + d), !p) return Promise.reject(!1);for (var f = p.filter(function (e) {if (e.protocol === d) return e;}), m = 0; m < f.length; m++) {if (f[m].protocol === d) {var E = f[m];f.splice(m, 1), f.unshift(E);}}o.restHosts = f, o.restTotal = f.length;var g = r[\"msync-ws\"].hosts;if (!g) return Promise.reject(!1);var y = g.filter(function (e) {return e.protocol === d && e;});o.socketHost = y, o.hostTotal = y.length, Be.call(o), \"refresh\" !== e && (\"login\" === e ? we.call(o, t, { rpt: n }) : ke.call(o, t, { rpt: n }));} || Me, error: function (r) {var s = r.extraInfo,c = s.elapse,u = s.httpCode,l = s.errDesc,p = { requestUrl: a, requestName: N.c.GET_DNS, isSuccess: 0, code: u, codeDesc: l, requestElapse: c };n && n({ isRetry: i, data: p }), h.kg.debug(\"getHttpDNS fail: \" + o.dnsIndex), o.dnsIndex++, o.dnsIndex < o.dnsTotal && xe.call(o, e, t, { rpt: n, isRetry: !0 });} || Me };return c.P6.ajax(s).catch(function (e) {__f__(\"warn\", e, \" at sdk/uniapp-sdk-4.1.2.js:1\");});}function Be() {var e, t;if (this.restIndex > this.restTotal) return h.kg.debug(\"restIndex > restTotal\"), \"\";var r = \"\",o = this.restHosts[this.restIndex],n = o.domain,i = o.ip,a = o.port,s = this.https ? \"https:\" : \"http:\";return i && \"undefined\" != typeof window && \"http:\" === (null === (e = null === window || void 0 === window ? void 0 : window.location) || void 0 === e ? void 0 : e.protocol) ? r = s + \"//\" + i + \":\" + a : (r = s + \"//\" + n, a && \"80\" !== a && \"443\" !== a && (r += \":\".concat(a)), \"undefined\" == typeof window || window.location || (r = \"https://\" + n), \"undefined\" != typeof window && window.location && \"file:\" === (null === (t = window.location) || void 0 === t ? void 0 : t.protocol) && (r = \"https://\" + n)), \"undefined\" == typeof window && (r = s + \"//\" + n), this.apiUrl = r, r;}var He = r(2824),Fe = c.P6.getEnvInfo(),We = Fe.global;n.util.Long = a(), n.configure();var Ze = n.Root.fromJSON({ nested: { easemob: { nested: { pb: { nested: { MessageBody: { fields: { type: { type: \"Type\", id: 1 }, from: { type: \"JID\", id: 2 }, to: { type: \"JID\", id: 3 }, contents: { rule: \"repeated\", type: \"Content\", id: 4 }, ext: { rule: \"repeated\", type: \"KeyValue\", id: 5 }, ackMessageId: { type: \"uint64\", id: 6 }, msgConfig: { type: \"MessageConfig\", id: 7 }, ackContent: { type: \"string\", id: 8 }, meta: { type: \"string\", id: 9 } }, nested: { Content: { fields: { type: { type: \"Type\", id: 1 }, text: { type: \"string\", id: 2 }, latitude: { type: \"double\", id: 3 }, longitude: { type: \"double\", id: 4 }, address: { type: \"string\", id: 5 }, displayName: { type: \"string\", id: 6 }, remotePath: { type: \"string\", id: 7 }, secretKey: { type: \"string\", id: 8 }, fileLength: { type: \"int32\", id: 9 }, action: { type: \"string\", id: 10 }, params: { rule: \"repeated\", type: \"KeyValue\", id: 11 }, duration: { type: \"int32\", id: 12 }, size: { type: \"Size\", id: 13 }, thumbnailRemotePath: { type: \"string\", id: 14 }, thumbnailSecretKey: { type: \"string\", id: 15 }, thumbnailDisplayName: { type: \"string\", id: 16 }, thumbnailFileLength: { type: \"int32\", id: 17 }, thumbnailSize: { type: \"Size\", id: 18 }, customEvent: { type: \"string\", id: 19 }, customExts: { rule: \"repeated\", type: \"KeyValue\", id: 20 }, buildingName: { type: \"string\", id: 21 } }, nested: { Type: { values: { TEXT: 0, IMAGE: 1, VIDEO: 2, LOCATION: 3, VOICE: 4, FILE: 5, COMMAND: 6, CUSTOM: 7 } }, Size: { fields: { width: { type: \"double\", id: 1 }, height: { type: \"double\", id: 2 } } } } }, Type: { values: { NORMAL: 0, CHAT: 1, GROUPCHAT: 2, CHATROOM: 3, READ_ACK: 4, DELIVER_ACK: 5, RECALL: 6, CHANNEL_ACK: 7 } }, MessageConfig: { fields: { allowGroupAck: { type: \"bool\", id: 1 } } } } }, KeyValue: { oneofs: { value: { oneof: [\"varintValue\", \"floatValue\", \"doubleValue\", \"stringValue\"] } }, fields: { key: { type: \"string\", id: 1 }, type: { type: \"ValueType\", id: 2 }, varintValue: { type: \"int64\", id: 3 }, floatValue: { type: \"float\", id: 4 }, doubleValue: { type: \"double\", id: 5 }, stringValue: { type: \"string\", id: 6 } }, nested: { ValueType: { values: { BOOL: 1, INT: 2, UINT: 3, LLINT: 4, FLOAT: 5, DOUBLE: 6, STRING: 7, JSON_STRING: 8 } } } }, JID: { fields: { appKey: { type: \"string\", id: 1 }, name: { type: \"string\", id: 2 }, domain: { type: \"string\", id: 3 }, clientResource: { type: \"string\", id: 4 } } }, ConferenceBody: { fields: { sessionId: { type: \"string\", id: 1 }, operation: { type: \"Operation\", id: 2 }, conferenceId: { type: \"string\", id: 3 }, type: { type: \"Type\", id: 4 }, content: { type: \"string\", id: 5 }, network: { type: \"string\", id: 6 }, version: { type: \"string\", id: 7 }, identity: { type: \"Identity\", id: 8 }, duration: { type: \"string\", id: 9 }, peerName: { type: \"string\", id: 10 }, endReason: { type: \"EndReason\", id: 11 }, status: { type: \"Status\", id: 12 }, isDirect: { type: \"bool\", id: 13 }, controlType: { type: \"StreamControlType\", id: 14 }, routeFlag: { type: \"int32\", id: 15 }, routeKey: { type: \"string\", id: 16 } }, nested: { Status: { fields: { errorCode: { type: \"int32\", id: 1 } } }, Operation: { values: { JOIN: 0, INITIATE: 1, ACCEPT_INITIATE: 2, ANSWER: 3, TERMINATE: 4, REMOVE: 5, STREAM_CONTROL: 6, MEDIA_REQUEST: 7 } }, Type: { values: { VOICE: 0, VIDEO: 1 } }, Identity: { values: { CALLER: 0, CALLEE: 1 } }, EndReason: { values: { HANGUP: 0, NORESPONSE: 1, REJECT: 2, BUSY: 3, FAIL: 4, UNSUPPORTED: 5, OFFLINE: 6 } }, StreamControlType: { values: { PAUSE_VOICE: 0, RESUME_VOICE: 1, PAUSE_VIDEO: 2, RESUME_VIDEO: 3 } } } }, MSync: { fields: { version: { type: \"Version\", id: 1, options: { default: \"MSYNC_V1\" } }, guid: { type: \"JID\", id: 2 }, auth: { type: \"string\", id: 3 }, compressAlgorimth: { type: \"uint32\", id: 4 }, crypto: { type: \"uint32\", id: 5 }, userAgent: { type: \"string\", id: 6 }, pov: { type: \"uint64\", id: 7 }, command: { type: \"Command\", id: 8 }, deviceId: { type: \"uint32\", id: 10 }, encryptType: { rule: \"repeated\", type: \"EncryptType\", id: 11, options: { packed: !1 } }, encryptKey: { type: \"string\", id: 12 }, payload: { type: \"bytes\", id: 9 } }, nested: { Version: { values: { MSYNC_V1: 0, MSYNC_V2: 1 } }, Command: { values: { SYNC: 0, UNREAD: 1, NOTICE: 2, PROVISION: 3 } } } }, EncryptType: { values: { ENCRYPT_NONE: 0, ENCRYPT_AES_128_CBC: 1, ENCRYPT_AES_256_CBC: 2 } }, CommSyncUL: { fields: { meta: { type: \"Meta\", id: 1 }, key: { type: \"uint64\", id: 2 }, queue: { type: \"JID\", id: 3 }, isRoam: { type: \"bool\", id: 4 }, lastFullRoamKey: { type: \"uint64\", id: 5 } } }, CommSyncDL: { fields: { status: { type: \"Status\", id: 1 }, metaId: { type: \"uint64\", id: 2 }, serverId: { type: \"uint64\", id: 3 }, metas: { rule: \"repeated\", type: \"Meta\", id: 4 }, nextKey: { type: \"uint64\", id: 5 }, queue: { type: \"JID\", id: 6 }, isLast: { type: \"bool\", id: 7 }, timestamp: { type: \"uint64\", id: 8 }, isRoam: { type: \"bool\", id: 9 } } }, CommNotice: { fields: { queue: { type: \"JID\", id: 1 } } }, CommUnreadUL: { fields: {} }, CommUnreadDL: { fields: { status: { type: \"Status\", id: 1 }, unread: { rule: \"repeated\", type: \"MetaQueue\", id: 2 }, timestamp: { type: \"uint64\", id: 3 } } }, MetaQueue: { fields: { queue: { type: \"JID\", id: 1 }, n: { type: \"uint32\", id: 2 } } }, Meta: { fields: { id: { type: \"uint64\", id: 1 }, from: { type: \"JID\", id: 2 }, to: { type: \"JID\", id: 3 }, timestamp: { type: \"uint64\", id: 4 }, ns: { type: \"NameSpace\", id: 5 }, payload: { type: \"bytes\", id: 6 }, routetype: { type: \"RouteType\", id: 7 }, ext: { type: \"KeyValue\", id: 8 }, meta: { type: \"bytes\", id: 9 } }, nested: { NameSpace: { values: { STATISTIC: 0, CHAT: 1, MUC: 2, ROSTER: 3, CONFERENCE: 4, NOTIFY: 5, QUERY: 6 } }, RouteType: { values: { ROUTE_ALL: 0, ROUTE_ONLINE: 1 } } } }, Status: { fields: { errorCode: { type: \"ErrorCode\", id: 1 }, reason: { type: \"string\", id: 2 }, redirectInfo: { rule: \"repeated\", type: \"RedirectInfo\", id: 3 } }, nested: { ErrorCode: { values: { OK: 0, FAIL: 1, UNAUTHORIZED: 2, MISSING_PARAMETER: 3, WRONG_PARAMETER: 4, REDIRECT: 5, TOKEN_EXPIRED: 6, PERMISSION_DENIED: 7, NO_ROUTE: 8, UNKNOWN_COMMAND: 9, PB_PARSER_ERROR: 10, BIND_ANOTHER_DEVICE: 11, IM_FORBIDDEN: 12, TOO_MANY_DEVICES: 13, PLATFORM_LIMIT: 14, USER_MUTED: 15, ENCRYPT_DISABLE: 16, ENCRYPT_ENABLE: 17, DECRYPT_FAILURE: 18, PERMISSION_DENIED_EXTERNAL: 19 } } } }, RedirectInfo: { fields: { host: { type: \"string\", id: 1 }, port: { type: \"uint32\", id: 2 } } }, Provision: { fields: { osType: { type: \"OsType\", id: 1 }, version: { type: \"string\", id: 2 }, networkType: { type: \"NetworkType\", id: 3 }, appSign: { type: \"string\", id: 4 }, compressType: { rule: \"repeated\", type: \"CompressType\", id: 5, options: { packed: !1 } }, encryptType: { rule: \"repeated\", type: \"EncryptType\", id: 6, options: { packed: !1 } }, encryptKey: { type: \"string\", id: 7 }, status: { type: \"Status\", id: 8 }, deviceUuid: { type: \"string\", id: 9 }, isManualLogin: { type: \"bool\", id: 10 }, password: { type: \"string\", id: 11 }, deviceName: { type: \"string\", id: 12 }, resource: { type: \"string\", id: 13 }, auth: { type: \"string\", id: 14 }, serviceId: { type: \"string\", id: 16 }, actionVersion: { type: \"string\", id: 17 } }, nested: { OsType: { values: { OS_IOS: 0, OS_ANDROID: 1, OS_LINUX: 2, OS_OSX: 3, OS_WIN: 4, OS_OTHER: 16 } }, NetworkType: { values: { NETWORK_NONE: 0, NETWORK_WIFI: 1, NETWORK_4G: 2, NETWORK_3G: 3, NETWORK_2G: 4, NETWORK_WIRE: 5 } }, CompressType: { values: { COMPRESS_NONE: 0, COMPRESS_ZLIB: 1 } } } }, MUCBody: { fields: { mucId: { type: \"JID\", id: 1 }, operation: { type: \"Operation\", id: 2 }, from: { type: \"JID\", id: 3 }, to: { rule: \"repeated\", type: \"JID\", id: 4 }, setting: { type: \"Setting\", id: 5 }, reason: { type: \"string\", id: 6 }, isChatroom: { type: \"bool\", id: 7 }, status: { type: \"Status\", id: 8 }, isThread: { type: \"bool\", id: 9 }, mucParentId: { type: \"JID\", id: 10 }, mucName: { type: \"string\", id: 11 }, eventInfo: { type: \"EventInfo\", id: 12 } }, nested: { Operation: { values: { CREATE: 0, DESTROY: 1, JOIN: 2, LEAVE: 3, APPLY: 4, APPLY_ACCEPT: 5, APPLY_DECLINE: 6, INVITE: 7, INVITE_ACCEPT: 8, INVITE_DECLINE: 9, KICK: 10, GET_BLACKLIST: 11, BAN: 12, ALLOW: 13, UPDATE: 14, BLOCK: 15, UNBLOCK: 16, PRESENCE: 17, ABSENCE: 18, DIRECT_JOINED: 19, ASSIGN_OWNER: 20, ADD_ADMIN: 21, REMOVE_ADMIN: 22, ADD_MUTE: 23, REMOVE_MUTE: 24, UPDATE_ANNOUNCEMENT: 25, DELETE_ANNOUNCEMENT: 26, UPLOAD_FILE: 27, DELETE_FILE: 28, ADD_USER_WHITE_LIST: 29, REMOVE_USER_WHITE_LIST: 30, BAN_GROUP: 31, REMOVE_BAN_GROUP: 32, THREAD_CREATE: 33, THREAD_DESTROY: 34, THREAD_JOIN: 35, THREAD_LEAVE: 36, THREAD_KICK: 37, THREAD_UPDATE: 38, THREAD_PRESENCE: 39, THREAD_ABSENCE: 40, DISABLE_GROUP: 41, ABLE_GROUP: 42, SET_METADATA: 43, DELETE_METADATA: 44 } }, Setting: { fields: { name: { type: \"string\", id: 1 }, desc: { type: \"string\", id: 2 }, type: { type: \"Type\", id: 3 }, maxUsers: { type: \"int32\", id: 4 }, owner: { type: \"string\", id: 5 } }, nested: { Type: { values: { PRIVATE_OWNER_INVITE: 0, PRIVATE_MEMBER_INVITE: 1, PUBLIC_JOIN_APPROVAL: 2, PUBLIC_JOIN_OPEN: 3, PUBLIC_ANONYMOUS: 4 } } } }, Status: { fields: { errorCode: { type: \"ErrorCode\", id: 1 }, description: { type: \"string\", id: 2 } }, nested: { ErrorCode: { values: { OK: 0, PERMISSION_DENIED: 1, WRONG_PARAMETER: 2, MUC_NOT_EXIST: 3, USER_NOT_EXIST: 4, UNKNOWN: 5 } } } }, EventInfo: { fields: { eventType: { type: \"EventType\", id: 1, options: { default: \"EVENT_NONE\" } }, ext: { type: \"string\", id: 2 } }, nested: { EventType: { values: { EVENT_NONE: 0, CIRCLE_CHANNEL: 1 } } } } } }, RosterBody: { fields: { operation: { type: \"Operation\", id: 1 }, status: { type: \"Status\", id: 2 }, from: { type: \"JID\", id: 3 }, to: { rule: \"repeated\", type: \"JID\", id: 4 }, reason: { type: \"string\", id: 5 }, rosterVer: { type: \"string\", id: 6 }, biDirection: { type: \"bool\", id: 7 } }, nested: { Operation: { values: { GET_ROSTER: 0, GET_BLACKLIST: 1, ADD: 2, REMOVE: 3, ACCEPT: 4, DECLINE: 5, BAN: 6, ALLOW: 7, REMOTE_ACCEPT: 8, REMOTE_DECLINE: 9 } }, Status: { fields: { errorCode: { type: \"ErrorCode\", id: 1 }, description: { type: \"string\", id: 2 } }, nested: { ErrorCode: { values: { OK: 0, USER_NOT_EXIST: 1, USER_ALREADY_FRIEND: 2, USER_ALREADY_BLACKLIST: 3 } } } } } }, StatisticsBody: { fields: { operation: { type: \"Operation\", id: 1 }, os: { type: \"OsType\", id: 2 }, version: { type: \"string\", id: 3 }, network: { type: \"NetworkType\", id: 4 }, imTime: { type: \"uint32\", id: 5 }, chatTime: { type: \"uint32\", id: 6 }, location: { type: \"string\", id: 7 } }, nested: { Operation: { values: { INFORMATION: 0, USER_REMOVED: 1, USER_LOGIN_ANOTHER_DEVICE: 2, USER_KICKED_BY_CHANGE_PASSWORD: 3, USER_KICKED_BY_OTHER_DEVICE: 4 } }, OsType: { values: { OS_IOS: 0, OS_ANDROID: 1, OS_LINUX: 2, OS_OSX: 3, OS_WIN: 4, OS_OTHER: 16 } }, NetworkType: { values: { NETWORK_NONE: 0, NETWORK_WIFI: 1, NETWORK_4G: 2, NETWORK_3G: 3, NETWORK_2G: 4, NETWORK_WIRE: 5 } } } } } } } } } });Ue.prototype.root = Ze;var qe = function qe(e) {this.onOpen = We.onSocketOpen, this.onClose = We.onSocketClose, this.onMessage = We.onSocketMessage, this.onError = We.onSocketError, this.close = We.closeSocket, this.send = We.sendSocketMessage, this.connectSocket = We.connectSocket, this.readyState = 0, this.connect = function () {We.connectSocket({ url: e.url, header: { \"content-type\": \"application/json\" }, success: function success(e) {}, fail: function fail() {} });};};Ue.prototype._getSock = function () {var e;return this.sock && this.sock.close && this.sock.close(), (e = \"zfb\" === Fe.platform || \"dd\" === Fe.platform ? new qe(this) : We.connectSocket({ url: this.url, header: { \"content-type\": \"application/json\" }, success: function success(e) {}, fail: function fail(e) {e.errMsg.indexOf(\"suspend\");}, complete: function complete() {} })).connect && e.connect(), e;}, Ue.prototype.getUniqueId = c.P6.getUniqueId, Ue.prototype.deviceId = \"miniProgram_\" + Fe.platform;var Ke = h.kg.getLogger(\"defaultLogger\");Ke.setConfig({ useCache: !1, maxCache: 3145728 }), Ke.enableAll(), c.P6.ajax = c.P6.wxRequest;var Ve = { connection: Ue, message: He.Message, utils: c.P6, logger: Ke, statusCode: u.E };}(), o;}();});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! @dcloudio/uni-mp-weixin/dist/mp.js */ 25)[\"default\"], __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 13)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/*!*********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/mp.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {Object.defineProperty(exports, "__esModule", { value: true });exports.Behavior = Behavior;exports.Component = Component;exports.Page = Page;exports.nextTick = exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 27));var _PROP_DEFAULT_VALUES;function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}

function parseData(data, vueComponentOptions) {
  if (!data) {
    return;
  }
  vueComponentOptions.mpOptions.data = data;
}

function parseComponents(vueComponentOptions) {
  vueComponentOptions.components = global.__wxVueOptions.components;
}

var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isFn(fn) {
  return typeof fn === 'function';
}

function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function noop() {}

/**
                    * Create a cached version of a pure function.
                    */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
   * Camelize a hyphen-delimited string.
   */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});
});

var SOURCE_KEY = '__data__';

var COMPONENT_LIFECYCLE = {
  created: 'onServiceCreated',
  attached: 'onServiceAttached',
  ready: 'mounted',
  moved: 'moved',
  detached: 'destroyed' };


var COMPONENT_LIFECYCLE_KEYS = Object.keys(COMPONENT_LIFECYCLE);

var PAGE_LIFETIMES = {
  show: 'onPageShow',
  hide: 'onPageHide',
  resize: 'onPageResize' };


var PAGE_LIFETIMES_KEYS = Object.keys(PAGE_LIFETIMES);

var PAGE_LIFECYCLE = [
'onLoad',
'onShow',
'onReady',
'onHide',
'onUnload',
'onPullDownRefresh',
'onReachBottom',
'onShareAppMessage',
'onPageScroll',
'onResize',
'onTabItemTap'];


function parsePageMethods(mpComponentOptions, vueComponentOptions) {
  var methods = Object.create(null);
  Object.keys(mpComponentOptions).forEach(function (key) {
    var value = mpComponentOptions[key];
    if (isFn(value) && PAGE_LIFECYCLE.indexOf(key) === -1) {
      methods[key] = value;
    }
  });
  vueComponentOptions.methods = methods;
}

function parsePageLifecycle(mpComponentOptions, vueComponentOptions) {
  Object.keys(mpComponentOptions).forEach(function (key) {
    if (PAGE_LIFECYCLE.indexOf(key) !== -1) {
      vueComponentOptions[key] = mpComponentOptions[key];
    }
  });
}

function parsePage(mpComponentOptions) {
  var vueComponentOptions = {
    mixins: [],
    mpOptions: {} };


  parseComponents(vueComponentOptions);

  parseData(mpComponentOptions.data, vueComponentOptions);

  parsePageMethods(mpComponentOptions, vueComponentOptions);
  parsePageLifecycle(mpComponentOptions, vueComponentOptions);

  return vueComponentOptions;
}

function parseProperties(properties, vueComponentOptions) {
  if (!properties) {
    return;
  }
  vueComponentOptions.mpOptions.properties = properties;
}

function parseOptions(options, vueComponentOptions) {
  if (!options) {
    return;
  }
  vueComponentOptions.mpOptions.options = options;
}

function parseMethods(methods, vueComponentOptions) {
  if (!methods) {
    return;
  }
  if (methods.$emit) {
    console.warn('Method "$emit" conflicts with an existing Vue instance method');
    delete methods.$emit;
  }
  vueComponentOptions.methods = methods;
}

function parseLifecycle(mpComponentOptions, vueComponentOptions) {
  COMPONENT_LIFECYCLE_KEYS.forEach(function (name) {
    if (hasOwn(mpComponentOptions, name)) {
      (vueComponentOptions[COMPONENT_LIFECYCLE[name]] || (vueComponentOptions[COMPONENT_LIFECYCLE[name]] = [])).
      push(mpComponentOptions[name]);
    }
  });
}

var mpBehaviors = {
  'wx://form-field': {},
  'wx://component-export': {} };


function callDefinitionFilter(mpComponentOptions) {var

  behaviors =

  mpComponentOptions.behaviors,definitionFilter = mpComponentOptions.definitionFilter;

  var behaviorDefinitionFilters = [];

  if (Array.isArray(behaviors)) {
    behaviors.forEach(function (behavior) {
      behavior = typeof behavior === 'string' ? mpBehaviors[behavior] : behavior;
      if (behavior.definitionFilter) {
        behaviorDefinitionFilters.push(behavior.definitionFilter);
        behavior.definitionFilter.call(null, mpComponentOptions, []);
      }
    });
  }

  if (isFn(definitionFilter)) {
    return function (defFields) {
      definitionFilter(defFields, behaviorDefinitionFilters);
    };
  }
}

function parseDefinitionFilter(mpComponentOptions, vueComponentOptions) {
  callDefinitionFilter(mpComponentOptions);
}

function parseBehavior(behavior) {var

  data =



  behavior.data,methods = behavior.methods,behaviors = behavior.behaviors,properties = behavior.properties;

  var vueComponentOptions = {
    watch: {},
    mpOptions: {
      mpObservers: [] } };



  parseData(data, vueComponentOptions);
  parseMethods(methods, vueComponentOptions);
  parseBehaviors(behaviors, vueComponentOptions);
  parseProperties(properties, vueComponentOptions);

  parseLifecycle(behavior, vueComponentOptions);
  parseDefinitionFilter(behavior);

  return vueComponentOptions;
}

var BEHAVIORS = {
  'wx://form-field': {
    beforeCreate: function beforeCreate() {
      var mpOptions = this.$options.mpOptions;
      if (!mpOptions.properties) {
        mpOptions.properties = Object.create(null);
      }

      var props = mpOptions.properties;
      // TODO form submit,reset
      if (!hasOwn(props, 'name')) {
        props.name = {
          type: String };

      }
      if (!hasOwn(props, 'value')) {
        props.value = {
          type: String // 默认类型调整为 String,否则默认值为 null,导致一些自定义 input 显示不正确
        };
      }
    } } };



function parseBehaviors(behaviors, vueComponentOptions) {
  if (!behaviors) {
    return;
  }
  behaviors.forEach(function (behavior) {
    if (typeof behavior === 'string') {
      BEHAVIORS[behavior] && vueComponentOptions.mixins.push(BEHAVIORS[behavior]);
    } else {
      vueComponentOptions.mixins.push(parseBehavior(behavior));
    }
  });
}

function parseSinglePath(path) {
  return path.split('.');
}

function parseMultiPaths(paths) {
  return paths.split(',').map(function (path) {return parseSinglePath(path);});
}

function parseObservers(observers, vueComponentOptions) {
  if (!observers) {
    return;
  }var


  mpObservers =
  vueComponentOptions.mpOptions.mpObservers;

  Object.keys(observers).forEach(function (path) {
    mpObservers.push({
      paths: parseMultiPaths(path),
      observer: observers[path] });

  });
}

function relative(from, to) {
  if (to.indexOf('/') === 0) {
    from = '';
  }
  var fromArr = from.split('/');
  var toArr = to.split('/');
  fromArr.pop();
  while (toArr.length) {
    var part = toArr.shift();
    if (part !== '' && part !== '.') {
      if (part !== '..') {
        fromArr.push(part);
      } else {
        fromArr.pop();
      }
    }
  }
  return fromArr.join('/');
}

function parseRelations(relations, vueComponentOptions) {
  if (!relations) {
    return;
  }
  Object.keys(relations).forEach(function (name) {
    var relation = relations[name];
    relation.name = name;
    relation.target = relation.target ? String(relation.target) : relative(global.__wxRoute, name);
  });
  vueComponentOptions.mpOptions.relations = relations;
}

function parseExternalClasses(externalClasses, vueComponentOptions) {
  if (!externalClasses) {
    return;
  }
  if (!Array.isArray(externalClasses)) {
    externalClasses = [externalClasses];
  }
  vueComponentOptions.mpOptions.externalClasses = externalClasses;
  if (!vueComponentOptions.mpOptions.properties) {
    vueComponentOptions.mpOptions.properties = Object.create(null);
  }
  externalClasses.forEach(function (externalClass) {
    vueComponentOptions.mpOptions.properties[camelize(externalClass)] = {
      type: String,
      value: '' };

  });
}

function parseLifetimes(lifetimes, vueComponentOptions) {
  if (!lifetimes) {
    return;
  }
  parseLifecycle(lifetimes, vueComponentOptions);
}

function parsePageLifetimes(pageLifetimes, vueComponentOptions) {
  if (!pageLifetimes) {
    return;
  }
  PAGE_LIFETIMES_KEYS.forEach(function (key) {
    var lifetimeFn = pageLifetimes[key];
    isFn(lifetimeFn) && (vueComponentOptions[PAGE_LIFETIMES[key]] = lifetimeFn);
  });
}

function parseComponent(mpComponentOptions) {var

  data =









  mpComponentOptions.data,options = mpComponentOptions.options,methods = mpComponentOptions.methods,behaviors = mpComponentOptions.behaviors,lifetimes = mpComponentOptions.lifetimes,observers = mpComponentOptions.observers,relations = mpComponentOptions.relations,properties = mpComponentOptions.properties,pageLifetimes = mpComponentOptions.pageLifetimes,externalClasses = mpComponentOptions.externalClasses;

  var vueComponentOptions = {
    mixins: [],
    props: {},
    watch: {},
    mpOptions: {
      mpObservers: [] } };



  parseComponents(vueComponentOptions);

  parseData(data, vueComponentOptions);
  parseOptions(options, vueComponentOptions);
  parseMethods(methods, vueComponentOptions);
  parseBehaviors(behaviors, vueComponentOptions);
  parseLifetimes(lifetimes, vueComponentOptions);
  parseObservers(observers, vueComponentOptions);
  parseRelations(relations, vueComponentOptions);
  parseProperties(properties, vueComponentOptions);
  parsePageLifetimes(pageLifetimes, vueComponentOptions);
  parseExternalClasses(externalClasses, vueComponentOptions);

  parseLifecycle(mpComponentOptions, vueComponentOptions);
  parseDefinitionFilter(mpComponentOptions);

  return vueComponentOptions;
}

function initRelationHandlers(type, handler, target, ctx) {
  if (!handler) {
    return;
  }
  var name = "_$".concat(type, "Handlers");
  (ctx[name] || (ctx[name] = [])).push(function () {
    handler.call(ctx, target);
  });
}

function initLinkedHandlers(relation, target, ctx) {
  var type = 'linked';
  var name = relation.name;
  var relationNodes = ctx._$relationNodes || (ctx._$relationNodes = Object.create(null));
  (relationNodes[name] || (relationNodes[name] = [])).push(target);
  initRelationHandlers(type, relation[type], target, ctx);
}

function initUnlinkedHandlers(relation, target, ctx) {
  var type = 'unlinked';
  initRelationHandlers(type, relation[type], target, ctx);
}

function findParentRelation(parentVm, target, type) {
  var relations = parentVm &&
  parentVm.$options.mpOptions &&
  parentVm.$options.mpOptions.relations;

  if (!relations) {
    return [];
  }
  var name = Object.keys(relations).find(function (name) {
    var relation = relations[name];
    return relation.target === target && relation.type === type;
  });
  if (!name) {
    return [];
  }
  return [relations[name], parentVm];
}

function initParentRelation(vm, childRelation, match) {var _match =
  match(vm, vm.$options.mpOptions.path),_match2 = _slicedToArray(_match, 2),parentRelation = _match2[0],parentVm = _match2[1];
  if (!parentRelation) {
    return;
  }

  initLinkedHandlers(parentRelation, vm, parentVm);
  initLinkedHandlers(childRelation, parentVm, vm);

  initUnlinkedHandlers(parentRelation, vm, parentVm);
  initUnlinkedHandlers(childRelation, parentVm, vm);
}

function initRelation(relation, vm) {
  var type = relation.type;
  if (type === 'parent') {
    initParentRelation(vm, relation, function matchParent(vm, target) {
      return findParentRelation(vm.$parent, target, 'child');
    });
  } else if (type === 'ancestor') {
    initParentRelation(vm, relation, function matchAncestor(vm, target) {
      var $parent = vm.$parent;
      while ($parent) {
        var ret = findParentRelation($parent, target, 'descendant');
        if (ret.length) {
          return ret;
        }
        $parent = $parent.$parent;
      }
      return [];
    });
  }
}

function initRelations(vm) {var _ref =


  vm.$options.mpOptions || {},relations = _ref.relations;
  if (!relations) {
    return;
  }
  Object.keys(relations).forEach(function (name) {
    initRelation(relations[name], vm);
  });
}

function handleRelations(vm, type) {
  // TODO 需要移除 relationNodes
  var handlers = vm["_$".concat(type, "Handlers")];
  if (!handlers) {
    return;
  }
  handlers.forEach(function (handler) {return handler();});
}

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop };


function proxy(target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter() {
    return this[sourceKey][key];
  };
  sharedPropertyDefinition.set = function proxySetter(val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function setDataByExprPath(exprPath, value, data) {
  var keys = exprPath.replace(/\[(\d+?)\]/g, '.$1').split('.');
  keys.reduce(function (obj, key, idx) {
    if (idx === keys.length - 1) {
      obj[key] = value;
    } else {
      if (typeof obj[key] === 'undefined') {
        obj[key] = {};
      }
      return obj[key];
    }
  }, data);
  return keys.length === 1;
}

function setData(data, callback) {var _this = this;
  if (!isPlainObject(data)) {
    return;
  }
  Object.keys(data).forEach(function (key) {
    if (setDataByExprPath(key, data[key], _this.data)) {
      !hasOwn(_this, key) && proxy(_this, SOURCE_KEY, key);
    }
  });
  this.$forceUpdate();
  isFn(callback) && this.$nextTick(callback);
}

/**
   * https://github.com/swan-team/swan-js/blob/61e2a63f7aa576b5daafbe77fdfa7c65b977060c/src/utils/index.js
   */

var _toString$1 = Object.prototype.toString;
/**
                                              * 深度assign的函数
                                              * @param {Object} targetObject 要被拷贝的目标对象
                                              * @param {Object} originObject 拷贝的源对象
                                              * @return {Object} merge后的对象
                                              */
var deepAssign = function deepAssign() {var targetObject = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};var originObject = arguments.length > 1 ? arguments[1] : undefined;
  var originType = _toString$1.call(originObject);
  if (originType === '[object Array]') {
    targetObject = originObject.slice(0);
    return targetObject;
  } else if (originType === '[object Object]') {
    for (var key in originObject) {
      targetObject[key] = deepAssign(targetObject[key], originObject[key]);
    }
    return targetObject;
  } else if (originType === '[object Date]') {
    return new Date(originObject.getTime());
  } else if (originType === '[object RegExp]') {
    var target = String(originObject);
    var lastIndex = target.lastIndexOf('/');
    return new RegExp(target.slice(1, lastIndex), target.slice(lastIndex + 1));
  }
  return originObject;
};

/**
    * 深度拷贝逻辑，不同于lodash等库，但是与微信一致
    * @param {*} [originObj] 原对象
    * @return {Object|Array} 拷贝结果
    */
var deepClone = function deepClone(originObj) {
  return deepAssign(_toString$1.call(originObj) === '[object Array]' ? [] : {}, originObj);
};

var PROP_DEFAULT_VALUES = (_PROP_DEFAULT_VALUES = {}, _defineProperty(_PROP_DEFAULT_VALUES,
String, ''), _defineProperty(_PROP_DEFAULT_VALUES,
Number, 0), _defineProperty(_PROP_DEFAULT_VALUES,
Boolean, false), _defineProperty(_PROP_DEFAULT_VALUES,
Object, null), _defineProperty(_PROP_DEFAULT_VALUES,
Array, []), _defineProperty(_PROP_DEFAULT_VALUES,
null, null), _PROP_DEFAULT_VALUES);


function getDefaultVal(propType) {
  return PROP_DEFAULT_VALUES[propType];
}

function getPropertyVal(options) {
  if (isPlainObject(options)) {
    if (hasOwn(options, 'value')) {
      return options.value;
    }
    return getDefaultVal(options.type);
  }
  return getDefaultVal(options);
}

function getType(propOptions) {
  return isPlainObject(propOptions) ? propOptions.type : propOptions;
}

function validateProp(key, propsOptions, propsData, vm) {
  var value = propsData[key];
  if (value !== undefined) {
    var propOptions = propsOptions[key];
    var type = getType(propOptions);
    value = formatVal(value, type);
    var observer = propOptions && propOptions.observer;
    if (observer) {
      // 初始化时,异步触发 observer,否则 observer 中无法访问 methods 或其他
      setTimeout(function () {
        observe(observer, vm, value);
      }, 4);
    }
    return value;
  }
  return getPropertyVal(propsOptions[key]);
}

function formatVal(val, type) {
  if (type === Boolean) {
    return !!val;
  } else if (type === String) {
    return String(val);
  }
  return val;
}

function observe(observer, vm, newVal, oldVal) {
  try {
    if (typeof observer === 'function') {
      observer.call(vm, newVal, oldVal);
    } else if (typeof observer === 'string' &&
    typeof vm[observer] === 'function')
    {
      vm[observer](newVal, oldVal);
    }
  } catch (err) {
    console.error("execute observer ".concat(observer, " callback fail! err: ").concat(err));
  }
}

function initProperties(vm, instanceData) {
  var properties = vm.$options.mpOptions.properties;
  if (!properties) {
    return;
  }

  var propsData = deepClone(vm.$options.propsData) || {};var _loop = function _loop(

  key) {
    var observer = isPlainObject(properties[key]) ? properties[key].observer : false;
    var value = validateProp(key, properties, propsData, vm);
    Object.defineProperty(instanceData, key, {
      enumerable: true,
      configurable: true,
      get: function get() {
        return value;
      },
      set: function set(newVal) {
        var oldVal = value;
        /* eslint-disable no-self-compare */
        if (newVal === value || newVal !== newVal && value !== value) {
          return;
        }
        // TODO 临时方案,clone array
        value = Array.isArray(newVal) ? newVal.slice(0) : newVal;
        if (observer) {
          observe(observer, vm, newVal, oldVal);
        }
        // 触发渲染
        vm.$forceUpdate();
      } });};for (var key in properties) {_loop(key);

  }
}

function updateProperties(vm) {
  var properties = vm.$options.mpOptions && vm.$options.mpOptions.properties;
  var propsData = vm.$options.propsData;
  if (propsData && properties) {
    Object.keys(properties).forEach(function (key) {
      if (hasOwn(propsData, key)) {
        vm[key] = formatVal(propsData[key], getType(properties[key]));
      }
    });
  }
}

function initState(vm) {
  var instanceData = JSON.parse(JSON.stringify(vm.$options.mpOptions.data || {}));

  vm[SOURCE_KEY] = instanceData;

  var propertyDefinition = {
    get: function get() {
      return vm[SOURCE_KEY];
    },
    set: function set(value) {
      vm[SOURCE_KEY] = value;
    } };


  Object.defineProperties(vm, {
    data: propertyDefinition,
    properties: propertyDefinition });


  vm.setData = setData;

  initProperties(vm, instanceData);

  Object.keys(instanceData).forEach(function (key) {
    proxy(vm, SOURCE_KEY, key);
  });
}

function initMethods(vm) {
  var oldEmit = vm.$emit;
  vm.triggerEvent = function (eventName, detail, options) {
    var target = {
      dataset: vm.$el.dataset };


    var event = {
      target: target,
      currentTarget: target,
      detail: detail,
      preventDefault: noop,
      stopPropagation: noop };


    oldEmit.call(vm, eventName, event);
  };
  // 主要是Vant 自己封装了 $emit,放到 methods 中会触发 Vue 的警告,索性,框架直接重写该方法
  vm.$emit = function () {
    vm.triggerEvent.apply(vm, arguments);
  };
  vm.getRelationNodes = function (relationKey) {
    // 需要过滤已被销毁的vm
    /* eslint-disable  no-mixed-operators */
    return (vm._$relationNodes && vm._$relationNodes[relationKey] || []).filter(function (vm) {return !vm._isDestroyed;});
  };

  vm._$updateProperties = updateProperties;
}

function handleObservers(vm) {
  var watch = vm.$options.watch;
  if (!watch) {
    return;
  }
  Object.keys(watch).forEach(function (name) {
    var observer = watch[name];
    if (observer.mounted) {
      var val = vm[name];
      var handler = observer.handler;
      if (typeof handler === 'string') {
        handler = vm[handler];
      }
      handler && handler.call(vm, val, val);
    }
  });
}

var polyfill = {
  beforeCreate: function beforeCreate() {
    // 取消 development 时的 Proxy,避免小程序组件模板中使用尚未定义的属性告警
    this._renderProxy = this;

    this._$self = this;
    this._$noop = noop;
  },
  created: function created() {// properties 中可能会访问 methods,故需要在 created 中初始化
    initState(this);
    initMethods(this);
    initRelations(this);
  },
  mounted: function mounted() {
    handleObservers(this);
  },
  destroyed: function destroyed() {
    handleRelations(this, 'unlinked');
  } };


global.__wxRoute = '';
global.__wxComponents = Object.create(null);
global.__wxVueOptions = Object.create(null);

function Page(options) {
  var pageOptions = parsePage(options);
  pageOptions.mixins.unshift(polyfill);
  pageOptions.mpOptions.path = global.__wxRoute;
  global.__wxComponents[global.__wxRoute] = pageOptions;
}

function initRelationsHandler(vueComponentOptions) {
  // linked 需要在当前组件 attached 之后再执行
  if (!vueComponentOptions.onServiceAttached) {
    vueComponentOptions.onServiceAttached = [];
  }
  vueComponentOptions.onServiceAttached.push(function onServiceAttached() {
    handleRelations(this, 'linked');
  });
}

function Component(options) {
  var componentOptions = parseComponent(options);
  componentOptions.mixins.unshift(polyfill);
  componentOptions.mpOptions.path = global.__wxRoute;
  initRelationsHandler(componentOptions);
  global.__wxComponents[global.__wxRoute] = componentOptions;
}

function Behavior(options) {
  return options;
}

var nextTick = _vue.default.nextTick;exports.nextTick = nextTick;

var index = uni.__$wx__;var _default =

index;exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 26)))

/***/ }),
/* 26 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 27 */
/*!**********************!*\
  !*** external "Vue" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = Vue;

/***/ }),
/* 28 */
/*!**************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/utils/initIm.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = exports.IM_CONFIG = void 0;var _uniappSdk = _interopRequireDefault(__webpack_require__(/*! ../sdk/uniapp-sdk-4.1.2 */ 24));\nvar _store = _interopRequireDefault(__webpack_require__(/*! ../store */ 29));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\n/**\n                                                                                                                                                        * 以下配置信息可从console后台管理获得\n                                                                                                                                                        */\nvar IM_CONFIG = {\n  isHttpDNS: false, // 开启后会从服务器取连接地址，目前不支持uniapp、小程序\n  appKey: \"1161210719091872#demo\",\n  apiUrl: \"https://a1.easemob.com\",\n  url: \"ws://im-api-wechat.easemob.com/websocket\" };exports.IM_CONFIG = IM_CONFIG;\n\n\nvar conn = new _uniappSdk.default.connection(IM_CONFIG);\n\nuni.conn = conn;\n\nconn.addEventHandler(\"message\", {\n  onTextMessage: function onTextMessage(message) {\n    // 表示是多端同步过来的消息\n    var uid = message.from === uni.conn.user ? message.to : message.from;\n    _store.default.commit(\"pushMessage\", { uid: uid, msg: message });\n  },\n  onImageMessage: function onImageMessage(message) {\n    var uid = message.from === uni.conn.user ? message.to : message.from;\n    _store.default.commit(\"pushMessage\", { uid: uid, msg: message });\n  } });\n\n\nconn.addEventHandler(\"contact\", {\n  onContactInvited: function onContactInvited(message) {\n    __f__(\"log\", message, \"contact invite msg\", \" at utils/initIm.js:32\");\n    uni.showModal({\n      title: \"\".concat(message.from, \"\\u8BF7\\u6C42\\u6DFB\\u52A0\\u597D\\u53CB\"),\n      content: message.status,\n      cancelText: \"拒绝\",\n      confirmText: \"接受\",\n      success: function success(res) {\n        if (res.confirm === true) {\n          // 接受好友申请\n          conn.acceptContactInvite(message.from);\n        } else {\n          // 拒绝好友申请\n          conn.declineContactInvite(message.from);\n        }\n      } });\n\n  },\n  onContactAgreed: function onContactAgreed(message) {\n    __f__(\"log\", message, \"contact agreed msg\", \" at utils/initIm.js:50\");\n    uni.showToast({\n      icon: \"none\",\n      title: \"\".concat(message.from, \"\\u5DF2\\u540C\\u610F\\u4F60\\u7684\\u597D\\u53CB\\u7533\\u8BF7\") });\n\n  },\n  onContactRefuse: function onContactRefuse(message) {\n    __f__(\"log\", message, \"contact refuse msg\", \" at utils/initIm.js:57\");\n    uni.showToast({\n      icon: \"none\",\n      title: \"\".concat(message.from, \"\\u5DF2\\u62D2\\u7EDD\\u4F60\\u7684\\u597D\\u53CB\\u7533\\u8BF7\") });\n\n  } });var _default =\n\n\n\nconn;exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 13)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vdXRpbHMvaW5pdEltLmpzIl0sIm5hbWVzIjpbIklNX0NPTkZJRyIsImlzSHR0cEROUyIsImFwcEtleSIsImFwaVVybCIsInVybCIsImNvbm4iLCJ3ZWJJTSIsImNvbm5lY3Rpb24iLCJ1bmkiLCJhZGRFdmVudEhhbmRsZXIiLCJvblRleHRNZXNzYWdlIiwibWVzc2FnZSIsInVpZCIsImZyb20iLCJ1c2VyIiwidG8iLCJzdG9yZSIsImNvbW1pdCIsIm1zZyIsIm9uSW1hZ2VNZXNzYWdlIiwib25Db250YWN0SW52aXRlZCIsInNob3dNb2RhbCIsInRpdGxlIiwiY29udGVudCIsInN0YXR1cyIsImNhbmNlbFRleHQiLCJjb25maXJtVGV4dCIsInN1Y2Nlc3MiLCJyZXMiLCJjb25maXJtIiwiYWNjZXB0Q29udGFjdEludml0ZSIsImRlY2xpbmVDb250YWN0SW52aXRlIiwib25Db250YWN0QWdyZWVkIiwic2hvd1RvYXN0IiwiaWNvbiIsIm9uQ29udGFjdFJlZnVzZSJdLCJtYXBwaW5ncyI6IndKQUFBO0FBQ0EsNkU7O0FBRUE7OztBQUdBLElBQU1BLFNBQVMsR0FBRztBQUNoQkMsV0FBUyxFQUFFLEtBREssRUFDRTtBQUNsQkMsUUFBTSxFQUFFLHVCQUZRO0FBR2hCQyxRQUFNLEVBQUUsd0JBSFE7QUFJaEJDLEtBQUcsRUFBRSwwQ0FKVyxFQUFsQixDOzs7QUFPQSxJQUFNQyxJQUFJLEdBQUcsSUFBSUMsbUJBQU1DLFVBQVYsQ0FBcUJQLFNBQXJCLENBQWI7O0FBRUFRLEdBQUcsQ0FBQ0gsSUFBSixHQUFXQSxJQUFYOztBQUVBQSxJQUFJLENBQUNJLGVBQUwsQ0FBcUIsU0FBckIsRUFBZ0M7QUFDOUJDLGVBQWEsRUFBRSx1QkFBQ0MsT0FBRCxFQUFhO0FBQzFCO0FBQ0EsUUFBSUMsR0FBRyxHQUFHRCxPQUFPLENBQUNFLElBQVIsS0FBaUJMLEdBQUcsQ0FBQ0gsSUFBSixDQUFTUyxJQUExQixHQUFpQ0gsT0FBTyxDQUFDSSxFQUF6QyxHQUE4Q0osT0FBTyxDQUFDRSxJQUFoRTtBQUNBRyxtQkFBTUMsTUFBTixDQUFhLGFBQWIsRUFBNEIsRUFBRUwsR0FBRyxFQUFIQSxHQUFGLEVBQU9NLEdBQUcsRUFBRVAsT0FBWixFQUE1QjtBQUNELEdBTDZCO0FBTTlCUSxnQkFBYyxFQUFFLHdCQUFDUixPQUFELEVBQWE7QUFDM0IsUUFBSUMsR0FBRyxHQUFHRCxPQUFPLENBQUNFLElBQVIsS0FBaUJMLEdBQUcsQ0FBQ0gsSUFBSixDQUFTUyxJQUExQixHQUFpQ0gsT0FBTyxDQUFDSSxFQUF6QyxHQUE4Q0osT0FBTyxDQUFDRSxJQUFoRTtBQUNBRyxtQkFBTUMsTUFBTixDQUFhLGFBQWIsRUFBNEIsRUFBRUwsR0FBRyxFQUFIQSxHQUFGLEVBQU9NLEdBQUcsRUFBRVAsT0FBWixFQUE1QjtBQUNELEdBVDZCLEVBQWhDOzs7QUFZQU4sSUFBSSxDQUFDSSxlQUFMLENBQXFCLFNBQXJCLEVBQWdDO0FBQzlCVyxrQkFBZ0IsRUFBRSwwQkFBQ1QsT0FBRCxFQUFhO0FBQzdCLGlCQUFZQSxPQUFaLEVBQXFCLG9CQUFyQjtBQUNBSCxPQUFHLENBQUNhLFNBQUosQ0FBYztBQUNaQyxXQUFLLFlBQUtYLE9BQU8sQ0FBQ0UsSUFBYix5Q0FETztBQUVaVSxhQUFPLEVBQUVaLE9BQU8sQ0FBQ2EsTUFGTDtBQUdaQyxnQkFBVSxFQUFFLElBSEE7QUFJWkMsaUJBQVcsRUFBRSxJQUpEO0FBS1pDLGFBQU8sRUFBRSxpQkFBQ0MsR0FBRCxFQUFTO0FBQ2hCLFlBQUlBLEdBQUcsQ0FBQ0MsT0FBSixLQUFnQixJQUFwQixFQUEwQjtBQUN4QjtBQUNBeEIsY0FBSSxDQUFDeUIsbUJBQUwsQ0FBeUJuQixPQUFPLENBQUNFLElBQWpDO0FBQ0QsU0FIRCxNQUdPO0FBQ0w7QUFDQVIsY0FBSSxDQUFDMEIsb0JBQUwsQ0FBMEJwQixPQUFPLENBQUNFLElBQWxDO0FBQ0Q7QUFDRixPQWJXLEVBQWQ7O0FBZUQsR0FsQjZCO0FBbUI5Qm1CLGlCQUFlLEVBQUUseUJBQUNyQixPQUFELEVBQWE7QUFDNUIsaUJBQVlBLE9BQVosRUFBcUIsb0JBQXJCO0FBQ0FILE9BQUcsQ0FBQ3lCLFNBQUosQ0FBYztBQUNaQyxVQUFJLEVBQUUsTUFETTtBQUVaWixXQUFLLFlBQUtYLE9BQU8sQ0FBQ0UsSUFBYiwyREFGTyxFQUFkOztBQUlELEdBekI2QjtBQTBCOUJzQixpQkFBZSxFQUFFLHlCQUFDeEIsT0FBRCxFQUFhO0FBQzVCLGlCQUFZQSxPQUFaLEVBQXFCLG9CQUFyQjtBQUNBSCxPQUFHLENBQUN5QixTQUFKLENBQWM7QUFDWkMsVUFBSSxFQUFFLE1BRE07QUFFWlosV0FBSyxZQUFLWCxPQUFPLENBQUNFLElBQWIsMkRBRk8sRUFBZDs7QUFJRCxHQWhDNkIsRUFBaEMsRTs7OztBQW9DZVIsSSIsImZpbGUiOiIyOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB3ZWJJTSBmcm9tIFwiLi4vc2RrL3VuaWFwcC1zZGstNC4xLjJcIjtcbmltcG9ydCBzdG9yZSBmcm9tIFwiLi4vc3RvcmVcIjtcblxuLyoqXG4gKiDku6XkuIvphY3nva7kv6Hmga/lj6/ku45jb25zb2xl5ZCO5Y+w566h55CG6I635b6XXG4gKi9cbmNvbnN0IElNX0NPTkZJRyA9IHtcbiAgaXNIdHRwRE5TOiBmYWxzZSwgLy8g5byA5ZCv5ZCO5Lya5LuO5pyN5Yqh5Zmo5Y+W6L+e5o6l5Zyw5Z2A77yM55uu5YmN5LiN5pSv5oyBdW5pYXBw44CB5bCP56iL5bqPXG4gIGFwcEtleTogXCIxMTYxMjEwNzE5MDkxODcyI2RlbW9cIixcbiAgYXBpVXJsOiBcImh0dHBzOi8vYTEuZWFzZW1vYi5jb21cIixcbiAgdXJsOiBcIndzOi8vaW0tYXBpLXdlY2hhdC5lYXNlbW9iLmNvbS93ZWJzb2NrZXRcIlxufTtcblxuY29uc3QgY29ubiA9IG5ldyB3ZWJJTS5jb25uZWN0aW9uKElNX0NPTkZJRyk7XG5cbnVuaS5jb25uID0gY29ubjtcblxuY29ubi5hZGRFdmVudEhhbmRsZXIoXCJtZXNzYWdlXCIsIHtcbiAgb25UZXh0TWVzc2FnZTogKG1lc3NhZ2UpID0+IHtcbiAgICAvLyDooajnpLrmmK/lpJrnq6/lkIzmraXov4fmnaXnmoTmtojmga9cbiAgICBsZXQgdWlkID0gbWVzc2FnZS5mcm9tID09PSB1bmkuY29ubi51c2VyID8gbWVzc2FnZS50byA6IG1lc3NhZ2UuZnJvbTtcbiAgICBzdG9yZS5jb21taXQoXCJwdXNoTWVzc2FnZVwiLCB7IHVpZCwgbXNnOiBtZXNzYWdlIH0pO1xuICB9LFxuICBvbkltYWdlTWVzc2FnZTogKG1lc3NhZ2UpID0+IHtcbiAgICBsZXQgdWlkID0gbWVzc2FnZS5mcm9tID09PSB1bmkuY29ubi51c2VyID8gbWVzc2FnZS50byA6IG1lc3NhZ2UuZnJvbTtcbiAgICBzdG9yZS5jb21taXQoXCJwdXNoTWVzc2FnZVwiLCB7IHVpZCwgbXNnOiBtZXNzYWdlIH0pO1xuICB9XG59KTtcblxuY29ubi5hZGRFdmVudEhhbmRsZXIoXCJjb250YWN0XCIsIHtcbiAgb25Db250YWN0SW52aXRlZDogKG1lc3NhZ2UpID0+IHtcbiAgICBjb25zb2xlLmxvZyhtZXNzYWdlLCBcImNvbnRhY3QgaW52aXRlIG1zZ1wiKTtcbiAgICB1bmkuc2hvd01vZGFsKHtcbiAgICAgIHRpdGxlOiBgJHttZXNzYWdlLmZyb2196K+35rGC5re75Yqg5aW95Y+LYCxcbiAgICAgIGNvbnRlbnQ6IG1lc3NhZ2Uuc3RhdHVzLFxuICAgICAgY2FuY2VsVGV4dDogXCLmi5Lnu51cIixcbiAgICAgIGNvbmZpcm1UZXh0OiBcIuaOpeWPl1wiLFxuICAgICAgc3VjY2VzczogKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLmNvbmZpcm0gPT09IHRydWUpIHtcbiAgICAgICAgICAvLyDmjqXlj5flpb3lj4vnlLPor7dcbiAgICAgICAgICBjb25uLmFjY2VwdENvbnRhY3RJbnZpdGUobWVzc2FnZS5mcm9tKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyDmi5Lnu53lpb3lj4vnlLPor7dcbiAgICAgICAgICBjb25uLmRlY2xpbmVDb250YWN0SW52aXRlKG1lc3NhZ2UuZnJvbSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgb25Db250YWN0QWdyZWVkOiAobWVzc2FnZSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UsIFwiY29udGFjdCBhZ3JlZWQgbXNnXCIpO1xuICAgIHVuaS5zaG93VG9hc3Qoe1xuICAgICAgaWNvbjogXCJub25lXCIsXG4gICAgICB0aXRsZTogYCR7bWVzc2FnZS5mcm9tfeW3suWQjOaEj+S9oOeahOWlveWPi+eUs+ivt2BcbiAgICB9KTtcbiAgfSxcbiAgb25Db250YWN0UmVmdXNlOiAobWVzc2FnZSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UsIFwiY29udGFjdCByZWZ1c2UgbXNnXCIpO1xuICAgIHVuaS5zaG93VG9hc3Qoe1xuICAgICAgaWNvbjogXCJub25lXCIsXG4gICAgICB0aXRsZTogYCR7bWVzc2FnZS5mcm9tfeW3suaLkue7neS9oOeahOWlveWPi+eUs+ivt2BcbiAgICB9KTtcbiAgfVxufSk7XG5cbmV4cG9ydCB7IElNX0NPTkZJRyB9O1xuZXhwb3J0IGRlZmF1bHQgY29ubjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/*!*************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/store/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 27));\nvar _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 30));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}\n\n_vue.default.use(_vuex.default); // vue的插件机制\n\n// Vuex.Store 构造器选项\nvar store = new _vuex.default.Store({\n  state: {\n    // 存放状态\n    chatMap: {} },\n\n  mutations: {\n    pushMessage: function pushMessage(state, _ref) {var uid = _ref.uid,msg = _ref.msg;\n      // 变更状态\n      if (state.chatMap[uid]) {\n        state.chatMap[uid].push(msg);\n      } else {\n        _vue.default.set(state.chatMap, uid, [msg]);\n      }\n    } } });var _default =\n\n\nstore;exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vc3RvcmUvaW5kZXguanMiXSwibmFtZXMiOlsiVnVlIiwidXNlIiwiVnVleCIsInN0b3JlIiwiU3RvcmUiLCJzdGF0ZSIsImNoYXRNYXAiLCJtdXRhdGlvbnMiLCJwdXNoTWVzc2FnZSIsInVpZCIsIm1zZyIsInB1c2giLCJzZXQiXSwibWFwcGluZ3MiOiJ1RkFBQTtBQUNBLHdFOztBQUVBQSxhQUFJQyxHQUFKLENBQVFDLGFBQVIsRSxDQUFlOztBQUVmO0FBQ0EsSUFBTUMsS0FBSyxHQUFHLElBQUlELGNBQUtFLEtBQVQsQ0FBZTtBQUMzQkMsT0FBSyxFQUFFO0FBQ0w7QUFDQUMsV0FBTyxFQUFFLEVBRkosRUFEb0I7O0FBSzNCQyxXQUFTLEVBQUU7QUFDVEMsZUFEUyx1QkFDR0gsS0FESCxRQUN3QixLQUFaSSxHQUFZLFFBQVpBLEdBQVksQ0FBUEMsR0FBTyxRQUFQQSxHQUFPO0FBQy9CO0FBQ0EsVUFBSUwsS0FBSyxDQUFDQyxPQUFOLENBQWNHLEdBQWQsQ0FBSixFQUF3QjtBQUN0QkosYUFBSyxDQUFDQyxPQUFOLENBQWNHLEdBQWQsRUFBbUJFLElBQW5CLENBQXdCRCxHQUF4QjtBQUNELE9BRkQsTUFFTztBQUNMVixxQkFBSVksR0FBSixDQUFRUCxLQUFLLENBQUNDLE9BQWQsRUFBdUJHLEdBQXZCLEVBQTRCLENBQUNDLEdBQUQsQ0FBNUI7QUFDRDtBQUNGLEtBUlEsRUFMZ0IsRUFBZixDQUFkLEM7OztBQWdCZVAsSyIsImZpbGUiOiIyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBWdWUgZnJvbSBcInZ1ZVwiO1xuaW1wb3J0IFZ1ZXggZnJvbSBcInZ1ZXhcIjtcblxuVnVlLnVzZShWdWV4KTsgLy8gdnVl55qE5o+S5Lu25py65Yi2XG5cbi8vIFZ1ZXguU3RvcmUg5p6E6YCg5Zmo6YCJ6aG5XG5jb25zdCBzdG9yZSA9IG5ldyBWdWV4LlN0b3JlKHtcbiAgc3RhdGU6IHtcbiAgICAvLyDlrZjmlL7nirbmgIFcbiAgICBjaGF0TWFwOiB7fVxuICB9LFxuICBtdXRhdGlvbnM6IHtcbiAgICBwdXNoTWVzc2FnZShzdGF0ZSwgeyB1aWQsIG1zZyB9KSB7XG4gICAgICAvLyDlj5jmm7TnirbmgIFcbiAgICAgIGlmIChzdGF0ZS5jaGF0TWFwW3VpZF0pIHtcbiAgICAgICAgc3RhdGUuY2hhdE1hcFt1aWRdLnB1c2gobXNnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIFZ1ZS5zZXQoc3RhdGUuY2hhdE1hcCwgdWlkLCBbbXNnXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcbmV4cG9ydCBkZWZhdWx0IHN0b3JlO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/*!**************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vuex3/dist/vuex.common.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * vuex v3.6.2
 * (c) 2021 Evan You
 * @license MIT
 */


function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
function find (list, f) {
  return list.filter(f)[0]
}

/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */
function deepCopy (obj, cache) {
  if ( cache === void 0 ) cache = [];

  // just return if obj is immutable value
  if (obj === null || typeof obj !== 'object') {
    return obj
  }

  // if obj is hit, it is in circular structure
  var hit = find(cache, function (c) { return c.original === obj; });
  if (hit) {
    return hit.copy
  }

  var copy = Array.isArray(obj) ? [] : {};
  // put the copy into cache at first
  // because we want to refer it in recursive deepCopy
  cache.push({
    original: obj,
    copy: copy
  });

  Object.keys(obj).forEach(function (key) {
    copy[key] = deepCopy(obj[key], cache);
  });

  return copy
}

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((true)) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  var child = parent.getChild(key);

  if (!child) {
    if ((true)) {
      console.warn(
        "[vuex] trying to unregister module '" + key + "', which is " +
        "not registered"
      );
    }
    return
  }

  if (!child.runtime) {
    return
  }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  if (parent) {
    return parent.hasChild(key)
  }

  return false
};

function update (path, targetModule, newModule) {
  if ((true)) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((true)) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((true)) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((true)) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    ( true) &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((true)) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e);
        }
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e);
        }
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((true)) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  return this._modules.isRegistered(path)
};

Store.prototype[[104,111,116,85,112,100,97,116,101].map(function (item) {return String.fromCharCode(item)}).join('')] = function (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("development" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((true)) {
        if (moduleName in parentState) {
          console.warn(
            ("[vuex] state field \"" + moduleName + "\" was overridden by a module with the same name at \"" + (path.join('.')) + "\"")
          );
        }
      }
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((true)) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((true)) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((true)) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((true)) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (( true) && !isValidMap(states)) {
    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept another params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (( true) && !isValidMap(mutations)) {
    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (( true) && !isValidMap(getters)) {
    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (( true) && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (( true) && !isValidMap(actions)) {
    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (( true) && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

// Credits: borrowed code from fcomb/redux-logger

function createLogger (ref) {
  if ( ref === void 0 ) ref = {};
  var collapsed = ref.collapsed; if ( collapsed === void 0 ) collapsed = true;
  var filter = ref.filter; if ( filter === void 0 ) filter = function (mutation, stateBefore, stateAfter) { return true; };
  var transformer = ref.transformer; if ( transformer === void 0 ) transformer = function (state) { return state; };
  var mutationTransformer = ref.mutationTransformer; if ( mutationTransformer === void 0 ) mutationTransformer = function (mut) { return mut; };
  var actionFilter = ref.actionFilter; if ( actionFilter === void 0 ) actionFilter = function (action, state) { return true; };
  var actionTransformer = ref.actionTransformer; if ( actionTransformer === void 0 ) actionTransformer = function (act) { return act; };
  var logMutations = ref.logMutations; if ( logMutations === void 0 ) logMutations = true;
  var logActions = ref.logActions; if ( logActions === void 0 ) logActions = true;
  var logger = ref.logger; if ( logger === void 0 ) logger = console;

  return function (store) {
    var prevState = deepCopy(store.state);

    if (typeof logger === 'undefined') {
      return
    }

    if (logMutations) {
      store.subscribe(function (mutation, state) {
        var nextState = deepCopy(state);

        if (filter(mutation, prevState, nextState)) {
          var formattedTime = getFormattedTime();
          var formattedMutation = mutationTransformer(mutation);
          var message = "mutation " + (mutation.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState));
          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);
          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState));
          endMessage(logger);
        }

        prevState = nextState;
      });
    }

    if (logActions) {
      store.subscribeAction(function (action, state) {
        if (actionFilter(action, state)) {
          var formattedTime = getFormattedTime();
          var formattedAction = actionTransformer(action);
          var message = "action " + (action.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction);
          endMessage(logger);
        }
      });
    }
  }
}

function startMessage (logger, message, collapsed) {
  var startMessage = collapsed
    ? logger.groupCollapsed
    : logger.group;

  // render
  try {
    startMessage.call(logger, message);
  } catch (e) {
    logger.log(message);
  }
}

function endMessage (logger) {
  try {
    logger.groupEnd();
  } catch (e) {
    logger.log('—— log end ——');
  }
}

function getFormattedTime () {
  var time = new Date();
  return (" @ " + (pad(time.getHours(), 2)) + ":" + (pad(time.getMinutes(), 2)) + ":" + (pad(time.getSeconds(), 2)) + "." + (pad(time.getMilliseconds(), 3)))
}

function repeat (str, times) {
  return (new Array(times + 1)).join(str)
}

function pad (num, maxLength) {
  return repeat('0', maxLength - num.toString().length) + num
}

var index_cjs = {
  Store: Store,
  install: install,
  version: '3.6.2',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers,
  createLogger: createLogger
};

module.exports = index_cjs;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 26)))

/***/ }),
/* 31 */
/*!**************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/consts/index.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.MSG_TYPE = void 0;var MSG_TYPE = {\n  txt: \"txt\",\n  img: \"img\"\n  // TODO: audio、video、file...\n};exports.MSG_TYPE = MSG_TYPE;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vY29uc3RzL2luZGV4LmpzIl0sIm5hbWVzIjpbIk1TR19UWVBFIiwidHh0IiwiaW1nIl0sIm1hcHBpbmdzIjoid0ZBQUEsSUFBTUEsUUFBUSxHQUFHO0FBQ2ZDLEtBQUcsRUFBRSxLQURVO0FBRWZDLEtBQUcsRUFBRTtBQUNMO0FBSGUsQ0FBakIsQyIsImZpbGUiOiIzMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE1TR19UWVBFID0ge1xuICB0eHQ6IFwidHh0XCIsXG4gIGltZzogXCJpbWdcIlxuICAvLyBUT0RPOiBhdWRpb+OAgXZpZGVv44CBZmlsZS4uLlxufTtcblxuZXhwb3J0IHsgTVNHX1RZUEUgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///31\n");

/***/ }),
/* 32 */
/*!***********************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/register/index.vue?mpType=page ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_vue_vue_type_template_id_6ce86a22_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.vue?vue&type=template&id=6ce86a22&scoped=true&mpType=page */ 33);\n/* harmony import */ var _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.vue?vue&type=script&lang=js&mpType=page */ 35);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 7);\n\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _index_vue_vue_type_template_id_6ce86a22_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _index_vue_vue_type_template_id_6ce86a22_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"6ce86a22\",\n  null,\n  false,\n  _index_vue_vue_type_template_id_6ce86a22_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__[\"components\"],\n  renderjs\n)\n\ncomponent.options.__file = \"pages/register/index.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBeUk7QUFDekk7QUFDb0U7QUFDTDs7O0FBRy9EO0FBQ21OO0FBQ25OLGdCQUFnQixpTkFBVTtBQUMxQixFQUFFLHNGQUFNO0FBQ1IsRUFBRSx1R0FBTTtBQUNSLEVBQUUsZ0hBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsMkdBQVU7QUFDWjtBQUNBOztBQUVBO0FBQ2UsZ0YiLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucywgcmVjeWNsYWJsZVJlbmRlciwgY29tcG9uZW50cyB9IGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02Y2U4NmEyMiZzY29wZWQ9dHJ1ZSZtcFR5cGU9cGFnZVwiXG52YXIgcmVuZGVyanNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vaW5kZXgudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJm1wVHlwZT1wYWdlXCJcbmV4cG9ydCAqIGZyb20gXCIuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3Z1ZS1sb2FkZXIvbGliL3J1bnRpbWUvY29tcG9uZW50Tm9ybWFsaXplci5qc1wiXG52YXIgY29tcG9uZW50ID0gbm9ybWFsaXplcihcbiAgc2NyaXB0LFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIFwiNmNlODZhMjJcIixcbiAgbnVsbCxcbiAgZmFsc2UsXG4gIGNvbXBvbmVudHMsXG4gIHJlbmRlcmpzXG4pXG5cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFnZXMvcmVnaXN0ZXIvaW5kZXgudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///32\n");

/***/ }),
/* 33 */
/*!*****************************************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/register/index.vue?vue&type=template&id=6ce86a22&scoped=true&mpType=page ***!
  \*****************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_6ce86a22_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=template&id=6ce86a22&scoped=true&mpType=page */ 34);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_6ce86a22_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_6ce86a22_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_6ce86a22_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["recyclableRender"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "components", function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_10_0_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_filter_modules_template_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_page_meta_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_template_id_6ce86a22_scoped_true_mpType_page__WEBPACK_IMPORTED_MODULE_0__["components"]; });



/***/ }),
/* 34 */

  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--10-0!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/filter-modules-template.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/register/index.vue?vue&type=template&id=6ce86a22&scoped=true&mpType=page ***!

/*! exports provided: render, staticRenderFns, recyclableRender, components */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recyclableRender", function() { return recyclableRender; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "components", function() { return components; });
var components
var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "view",
    { staticClass: _vm._$s(0, "sc", "content"), attrs: { _i: 0 } },
    [
      _c("view", [
        _c(
          "view",
          { staticClass: _vm._$s(2, "sc", "form-item"), attrs: { _i: 2 } },
          [
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.user,
                  expression: "user"
                }
              ],
              staticClass: _vm._$s(3, "sc", "uni-input"),
              attrs: { _i: 3 },
              domProps: { value: _vm._$s(3, "v-model", _vm.user) },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.user = $event.target.value
                }
              }
            })
          ]
        ),
        _c(
          "view",
          { staticClass: _vm._$s(4, "sc", "form-item"), attrs: { _i: 4 } },
          [
            _c("input", {
              directives: [
                {
                  name: "model",
                  rawName: "v-model",
                  value: _vm.pwd,
                  expression: "pwd"
                }
              ],
              staticClass: _vm._$s(5, "sc", "uni-input"),
              attrs: { _i: 5 },
              domProps: { value: _vm._$s(5, "v-model", _vm.pwd) },
              on: {
                input: function($event) {
                  if ($event.target.composing) {
                    return
                  }
                  _vm.pwd = $event.target.value
                }
              }
            })
          ]
        ),
        _c("button", {
          staticClass: _vm._$s(6, "sc", "btn"),
          attrs: { loading: _vm._$s(6, "a-loading", _vm.loading), _i: 6 },
          on: { click: _vm.register }
        })
      ]),
      _c("navigator", {}, [
        _c("view", {
          staticClass: _vm._$s(8, "sc", "register-tip"),
          attrs: { _i: 8 }
        })
      ])
    ]
  )
}
var recyclableRender = false
var staticRenderFns = []
render._withStripped = true



/***/ }),
/* 35 */
/*!***********************************************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/register/index.vue?vue&type=script&lang=js&mpType=page ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./index.vue?vue&type=script&lang=js&mpType=page */ 36);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_script_lang_js_mpType_page__WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQTR1QixDQUFnQixzdEJBQUcsRUFBQyIsImZpbGUiOiIzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2luZGV4LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZtcFR5cGU9cGFnZVwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3Z1ZS1jbGktcGx1Z2luLXVuaS9wYWNrYWdlcy93ZWJwYWNrLXByZXByb2Nlc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stdW5pLWFwcC1sb2FkZXIvdXNpbmctY29tcG9uZW50cy5qcyEuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9pbmRleC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmbXBUeXBlPXBhZ2VcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///35\n");

/***/ }),
/* 36 */
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/pages/register/index.vue?vue&type=script&lang=js&mpType=page ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar conn = uni.conn;var _default =\n{\n  data: function data() {\n    return {\n      user: \"\",\n      pwd: \"\",\n      loading: false };\n\n  },\n  onLoad: function onLoad() {},\n  methods: {\n    register: function register() {var _this = this;\n      this.loading = true;\n      conn.\n      registerUser({\n        username: this.user,\n        password: this.pwd }).\n\n      then(function () {\n        uni.showToast({\n          icon: \"none\",\n          title: \"注册成功\" });\n\n        uni.redirectTo({\n          url: \"../index/index\" });\n\n      }).\n      catch(function (e) {\n        uni.showToast({\n          icon: \"none\",\n          title: \"注册失败\" });\n\n      }).\n      finally(function () {\n        _this.loading = false;\n      });\n    } } };exports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vcGFnZXMvcmVnaXN0ZXIvaW5kZXgudnVlIl0sIm5hbWVzIjpbImNvbm4iLCJ1bmkiLCJkYXRhIiwidXNlciIsInB3ZCIsImxvYWRpbmciLCJvbkxvYWQiLCJtZXRob2RzIiwicmVnaXN0ZXIiLCJyZWdpc3RlclVzZXIiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidGhlbiIsInNob3dUb2FzdCIsImljb24iLCJ0aXRsZSIsInJlZGlyZWN0VG8iLCJ1cmwiLCJjYXRjaCIsImUiLCJmaW5hbGx5Il0sIm1hcHBpbmdzIjoid0ZBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNQSxJQUFJLEdBQUdDLEdBQUcsQ0FBQ0QsSUFBakIsQztBQUNlO0FBQ2JFLE1BRGEsa0JBQ047QUFDTCxXQUFPO0FBQ0xDLFVBQUksRUFBRSxFQUREO0FBRUxDLFNBQUcsRUFBRSxFQUZBO0FBR0xDLGFBQU8sRUFBRSxLQUhKLEVBQVA7O0FBS0QsR0FQWTtBQVFiQyxRQVJhLG9CQVFKLENBQUUsQ0FSRTtBQVNiQyxTQUFPLEVBQUU7QUFDUEMsWUFETyxzQkFDSTtBQUNULFdBQUtILE9BQUwsR0FBZSxJQUFmO0FBQ0FMLFVBQUk7QUFDRFMsa0JBREgsQ0FDZ0I7QUFDWkMsZ0JBQVEsRUFBRSxLQUFLUCxJQURIO0FBRVpRLGdCQUFRLEVBQUUsS0FBS1AsR0FGSCxFQURoQjs7QUFLR1EsVUFMSCxDQUtRLFlBQU07QUFDVlgsV0FBRyxDQUFDWSxTQUFKLENBQWM7QUFDWkMsY0FBSSxFQUFFLE1BRE07QUFFWkMsZUFBSyxFQUFFLE1BRkssRUFBZDs7QUFJQWQsV0FBRyxDQUFDZSxVQUFKLENBQWU7QUFDYkMsYUFBRyxFQUFFLGdCQURRLEVBQWY7O0FBR0QsT0FiSDtBQWNHQyxXQWRILENBY1MsVUFBQ0MsQ0FBRCxFQUFPO0FBQ1psQixXQUFHLENBQUNZLFNBQUosQ0FBYztBQUNaQyxjQUFJLEVBQUUsTUFETTtBQUVaQyxlQUFLLEVBQUUsTUFGSyxFQUFkOztBQUlELE9BbkJIO0FBb0JHSyxhQXBCSCxDQW9CVyxZQUFNO0FBQ2IsYUFBSSxDQUFDZixPQUFMLEdBQWUsS0FBZjtBQUNELE9BdEJIO0FBdUJELEtBMUJNLEVBVEksRSIsImZpbGUiOiIzNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuXG5jb25zdCBjb25uID0gdW5pLmNvbm47XG5leHBvcnQgZGVmYXVsdCB7XG4gIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVzZXI6IFwiXCIsXG4gICAgICBwd2Q6IFwiXCIsXG4gICAgICBsb2FkaW5nOiBmYWxzZVxuICAgIH07XG4gIH0sXG4gIG9uTG9hZCgpIHt9LFxuICBtZXRob2RzOiB7XG4gICAgcmVnaXN0ZXIoKSB7XG4gICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgY29ublxuICAgICAgICAucmVnaXN0ZXJVc2VyKHtcbiAgICAgICAgICB1c2VybmFtZTogdGhpcy51c2VyLFxuICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLnB3ZFxuICAgICAgICB9KVxuICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgdW5pLnNob3dUb2FzdCh7XG4gICAgICAgICAgICBpY29uOiBcIm5vbmVcIixcbiAgICAgICAgICAgIHRpdGxlOiBcIuazqOWGjOaIkOWKn1wiXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgdW5pLnJlZGlyZWN0VG8oe1xuICAgICAgICAgICAgdXJsOiBcIi4uL2luZGV4L2luZGV4XCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlKSA9PiB7XG4gICAgICAgICAgdW5pLnNob3dUb2FzdCh7XG4gICAgICAgICAgICBpY29uOiBcIm5vbmVcIixcbiAgICAgICAgICAgIHRpdGxlOiBcIuazqOWGjOWksei0pVwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICB9XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///36\n");

/***/ }),
/* 37 */
/*!******************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/App.vue ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App.vue?vue&type=script&lang=js& */ 38);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js */ 7);\nvar render, staticRenderFns, recyclableRender, components\nvar renderjs\n\n\n\n\n/* normalize component */\n\nvar component = Object(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n  _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"App.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUN1RDtBQUNMOzs7QUFHbEQ7QUFDNk07QUFDN00sZ0JBQWdCLGlOQUFVO0FBQzFCLEVBQUUseUVBQU07QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNlLGdGIiwiZmlsZSI6IjM3LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlbmRlciwgc3RhdGljUmVuZGVyRm5zLCByZWN5Y2xhYmxlUmVuZGVyLCBjb21wb25lbnRzXG52YXIgcmVuZGVyanNcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuZXhwb3J0ICogZnJvbSBcIi4vQXBwLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIlxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cbmltcG9ydCBub3JtYWxpemVyIGZyb20gXCIhLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3Z1ZS1jbGktcGx1Z2luLXVuaS9wYWNrYWdlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsLFxuICBmYWxzZSxcbiAgY29tcG9uZW50cyxcbiAgcmVuZGVyanNcbilcblxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJBcHAudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///37\n");

/***/ }),
/* 38 */
/*!*******************************************************************************************!*\
  !*** /Users/zhaoliang/Desktop/work/uni-app/easemob-chat/App.vue?vue&type=script&lang=js& ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!./App.vue?vue&type=script&lang=js& */ 39);\n/* harmony import */ var _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_babel_loader_lib_index_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_preprocess_loader_index_js_ref_6_1_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_webpack_uni_app_loader_using_components_js_Applications_HBuilderX_app_Contents_HBuilderX_plugins_uniapp_cli_node_modules_dcloudio_vue_cli_plugin_uni_packages_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default.a); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQXVzQixDQUFnQix5c0JBQUcsRUFBQyIsImZpbGUiOiIzOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2QgZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vQXBwbGljYXRpb25zL0hCdWlsZGVyWC5hcHAvQ29udGVudHMvSEJ1aWxkZXJYL3BsdWdpbnMvdW5pYXBwLWNsaS9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi8uLi9BcHBsaWNhdGlvbnMvSEJ1aWxkZXJYLmFwcC9Db250ZW50cy9IQnVpbGRlclgvcGx1Z2lucy91bmlhcHAtY2xpL25vZGVfbW9kdWxlcy9AZGNsb3VkaW8vdnVlLWNsaS1wbHVnaW4tdW5pL3BhY2thZ2VzL3dlYnBhY2stcHJlcHJvY2Vzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvd2VicGFjay11bmktYXBwLWxvYWRlci91c2luZy1jb21wb25lbnRzLmpzIS4uLy4uLy4uLy4uLy4uLy4uL0FwcGxpY2F0aW9ucy9IQnVpbGRlclguYXBwL0NvbnRlbnRzL0hCdWlsZGVyWC9wbHVnaW5zL3VuaWFwcC1jbGkvbm9kZV9tb2R1bGVzL0BkY2xvdWRpby92dWUtY2xpLXBsdWdpbi11bmkvcGFja2FnZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL0FwcC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///38\n");

/***/ }),
/* 39 */
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader??ref--6-1!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/using-components.js!./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib??vue-loader-options!/Users/zhaoliang/Desktop/work/uni-app/easemob-chat/App.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(__f__) {Object.defineProperty(exports, \"__esModule\", { value: true });exports.default = void 0;\n__webpack_require__(/*! ./utils/initIm */ 28);var _default =\n{\n  onLaunch: function onLaunch() {\n    __f__(\"log\", \"App Launch\", \" at App.vue:5\");\n  },\n  onShow: function onShow() {\n    __f__(\"log\", \"App Show\", \" at App.vue:8\");\n  },\n  onHide: function onHide() {\n    __f__(\"log\", \"App Hide\", \" at App.vue:11\");\n  } };exports.default = _default;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/vue-cli-plugin-uni/lib/format-log.js */ 13)[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuaS1hcHA6Ly8vQXBwLnZ1ZSJdLCJuYW1lcyI6WyJvbkxhdW5jaCIsIm9uU2hvdyIsIm9uSGlkZSJdLCJtYXBwaW5ncyI6IjtBQUNBLDhDO0FBQ2U7QUFDYkEsVUFBUSxFQUFFLG9CQUFZO0FBQ3BCLGlCQUFZLFlBQVo7QUFDRCxHQUhZO0FBSWJDLFFBQU0sRUFBRSxrQkFBWTtBQUNsQixpQkFBWSxVQUFaO0FBQ0QsR0FOWTtBQU9iQyxRQUFNLEVBQUUsa0JBQVk7QUFDbEIsaUJBQVksVUFBWjtBQUNELEdBVFksRSIsImZpbGUiOiIzOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgXCIuL3V0aWxzL2luaXRJbVwiO1xyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgb25MYXVuY2g6IGZ1bmN0aW9uICgpIHtcclxuICAgIGNvbnNvbGUubG9nKFwiQXBwIExhdW5jaFwiKTtcclxuICB9LFxyXG4gIG9uU2hvdzogZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc29sZS5sb2coXCJBcHAgU2hvd1wiKTtcclxuICB9LFxyXG4gIG9uSGlkZTogZnVuY3Rpb24gKCkgeyBcclxuICAgIGNvbnNvbGUubG9nKFwiQXBwIEhpZGVcIik7XHJcbiAgfVxyXG59O1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n");

/***/ })
],[[0,"app-config"]]]);